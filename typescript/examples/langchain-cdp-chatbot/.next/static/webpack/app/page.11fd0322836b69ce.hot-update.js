"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/useChatbot.ts":
/*!*********************************!*\
  !*** ./src/hooks/useChatbot.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useChatbot: function() { return /* binding */ useChatbot; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _services_chatbot__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/services/chatbot */ \"(app-pages-browser)/./src/services/chatbot.ts\");\n/* harmony import */ var _lib_storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/storage */ \"(app-pages-browser)/./src/lib/storage.ts\");\n/* harmony import */ var _services_taxiService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/services/taxiService */ \"(app-pages-browser)/./src/services/taxiService.ts\");\n/* __next_internal_client_entry_do_not_use__ useChatbot auto */ \n\n\n\nfunction useChatbot() {\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const handleScheduleConflict = (newEvent, existingEvents)=>{\n        console.log(\"Checking conflicts for new event:\", {\n            title: newEvent.title,\n            start: newEvent.startTime,\n            priority: newEvent.priority\n        });\n        console.log(\"Existing events:\", existingEvents);\n        // Sort existing events by priority\n        const priorityOrder = {\n            \"urgent-important\": 3,\n            \"important\": 2,\n            \"urgent\": 1,\n            \"neither\": 0\n        };\n        // Find conflicting events\n        const conflicts = existingEvents.filter((event)=>{\n            const newStart = new Date(newEvent.startTime);\n            const newEnd = new Date(newEvent.endTime);\n            const eventStart = new Date(event.startTime);\n            const eventEnd = new Date(event.endTime);\n            const hasConflict = newStart >= eventStart && newStart < eventEnd || newEnd > eventStart && newEnd <= eventEnd || newStart <= eventStart && newEnd >= eventEnd;\n            if (hasConflict) {\n                console.log(\"Found conflict:\", {\n                    existingEvent: event.title,\n                    existingPriority: event.priority,\n                    newEvent: newEvent.title,\n                    newPriority: newEvent.priority\n                });\n            }\n            return hasConflict;\n        });\n        if (conflicts.length === 0) {\n            console.log(\"No conflicts found\");\n            return newEvent;\n        }\n        // Check if new event has higher priority\n        const newPriorityScore = priorityOrder[newEvent.priority];\n        const highestConflictScore = Math.max(...conflicts.map((e)=>priorityOrder[e.priority]));\n        console.log(\"Priority comparison:\", {\n            newEventScore: newPriorityScore,\n            highestConflictScore,\n            willRescheduleConflicts: newPriorityScore > highestConflictScore\n        });\n        if (newPriorityScore > highestConflictScore) {\n            // Move conflicting events\n            console.log(\"Moving conflicting events...\");\n            const storage = _lib_storage__WEBPACK_IMPORTED_MODULE_2__.StorageService.getInstance();\n            conflicts.forEach((conflict)=>{\n                // Move to next available time\n                const duration = new Date(conflict.endTime).getTime() - new Date(conflict.startTime).getTime();\n                const newStartTime = new Date(newEvent.endTime);\n                const newEndTime = new Date(newStartTime.getTime() + duration);\n                const updatedEvent = {\n                    ...conflict,\n                    startTime: newStartTime.toISOString(),\n                    endTime: newEndTime.toISOString()\n                };\n                console.log(\"Moving event:\", {\n                    event: conflict.title,\n                    from: conflict.startTime,\n                    to: updatedEvent.startTime\n                });\n                storage.updateTimeBlock(updatedEvent);\n            });\n            return newEvent;\n        } else {\n            // Find next available time for new event\n            console.log(\"Finding next available time for new event...\");\n            const duration = new Date(newEvent.endTime).getTime() - new Date(newEvent.startTime).getTime();\n            const lastConflict = conflicts.sort((a, b)=>new Date(b.endTime).getTime() - new Date(a.endTime).getTime())[0];\n            const newStartTime = new Date(lastConflict.endTime);\n            const newEndTime = new Date(newStartTime.getTime() + duration);\n            const rescheduledEvent = {\n                ...newEvent,\n                startTime: newStartTime.toISOString(),\n                endTime: newEndTime.toISOString()\n            };\n            console.log(\"Rescheduled new event:\", {\n                from: newEvent.startTime,\n                to: rescheduledEvent.startTime\n            });\n            return rescheduledEvent;\n        }\n    };\n    const sendMessage = async (content)=>{\n        console.log(\"=== START sendMessage ===\");\n        setIsLoading(true);\n        try {\n            // Initialize agent\n            console.log(\"Initializing agent...\");\n            const { agent, prompt, functionHandlers } = await (0,_services_chatbot__WEBPACK_IMPORTED_MODULE_1__.initializeAgent)();\n            console.log(\"Agent initialized successfully\");\n            // Format the prompt\n            const formattedPrompt = await prompt.formatMessages({\n                input: content\n            });\n            // Call agent\n            console.log(\"Calling agent...\");\n            const response = await agent.invoke(formattedPrompt);\n            console.log(\"Agent response received:\", response);\n            // Extract content\n            let messageContent = response.content;\n            // Look for schedule task\n            const codeBlockMatch = messageContent.match(/```[\\s\\S]*?schedule_task\\(([\\s\\S]*?)\\)[\\s\\S]*?```/);\n            if (codeBlockMatch) {\n                const paramsText = codeBlockMatch[1];\n                const params = {\n                    title: (paramsText.match(/title=\"([^\"]+)\"/) || [])[1],\n                    startTime: (paramsText.match(/startTime=\"([^\"]+)\"/) || [])[1],\n                    endTime: (paramsText.match(/endTime=\"([^\"]+)\"/) || [])[1],\n                    priority: (paramsText.match(/priority=\"([^\"]+)\"/) || [])[1],\n                    location: (paramsText.match(/location=\"([^\"]+)\"/) || [])[1],\n                    needsTransport: paramsText.includes(\"needsTransport=True\"),\n                    delegatable: paramsText.includes(\"delegatable=True\")\n                };\n                if (params.title && params.startTime) {\n                    const storage = _lib_storage__WEBPACK_IMPORTED_MODULE_2__.StorageService.getInstance();\n                    const existingEvents = storage.getTimeBlocks();\n                    // Handle transportation if needed\n                    let transportDetails = null;\n                    if (params.needsTransport && params.location) {\n                        const taxiService = _services_taxiService__WEBPACK_IMPORTED_MODULE_3__.TaxiService.getInstance();\n                        const estimate = await taxiService.estimateTrip(\"current_location\", params.location);\n                        if (estimate.available) {\n                            // Add buffer time for transportation\n                            const eventStart = new Date(params.startTime);\n                            eventStart.setMinutes(eventStart.getMinutes() - estimate.duration);\n                            params.startTime = eventStart.toISOString();\n                            // Get payment details\n                            const paymentDetails = await taxiService.getPaymentDetails(\"current_location\", params.location);\n                            messageContent += \"\\n\\nTransportation arranged:\\n- Taxi booked for \".concat(estimate.duration, \" minutes before event\\n- Please send \").concat(estimate.cost, \" ETH to \").concat(paymentDetails.address, \" on \").concat(paymentDetails.network, \"\\n- After payment, the taxi will be confirmed\");\n                        }\n                    }\n                    const scheduledEvent = {\n                        _id: crypto.randomUUID(),\n                        title: params.title,\n                        startTime: new Date(params.startTime).toISOString(),\n                        endTime: params.endTime ? new Date(params.endTime).toISOString() : new Date(new Date(params.startTime).getTime() + 60 * 60 * 1000).toISOString(),\n                        priority: params.priority || \"important\",\n                        location: params.location,\n                        transportDetails,\n                        delegatable: params.delegatable || false,\n                        status: \"scheduled\",\n                        created_at: new Date().toISOString(),\n                        updated_at: new Date().toISOString()\n                    };\n                    const finalEvent = handleScheduleConflict(scheduledEvent, existingEvents);\n                    storage.addTimeBlock(finalEvent);\n                    const event = new CustomEvent(\"calendarUpdate\", {\n                        detail: finalEvent\n                    });\n                    window.dispatchEvent(event);\n                    // Extract taxi booking function call\n                    const taxiMatch = messageContent.match(/```[\\s\\S]*?book_taxi\\(([\\s\\S]*?)\\)[\\s\\S]*?```/);\n                    if (taxiMatch) {\n                        const taxiParams = {\n                            pickup: (taxiMatch[1].match(/pickup=\"([^\"]+)\"/) || [])[1],\n                            destination: (taxiMatch[1].match(/destination=\"([^\"]+)\"/) || [])[1],\n                            pickupTime: (taxiMatch[1].match(/pickupTime=\"([^\"]+)\"/) || [])[1]\n                        };\n                        // Execute taxi booking\n                        const paymentDetails = await functionHandlers.book_taxi(taxiParams);\n                        if (paymentDetails.txHash) {\n                            // Verify payment\n                            const verified = await functionHandlers.verify_payment({\n                                txHash: paymentDetails.txHash\n                            });\n                            messageContent += \"\\n\\nPayment status: \".concat(verified ? \"Successful\" : \"Failed\", \"\\nTransaction hash: \").concat(paymentDetails.txHash);\n                        }\n                    }\n                }\n            }\n            // Add message to chat history\n            setMessages((prev)=>[\n                    ...prev,\n                    {\n                        content: messageContent,\n                        role: \"assistant\",\n                        timestamp: new Date().toISOString()\n                    }\n                ]);\n        } catch (error) {\n            console.error(\"Error in sendMessage:\", error);\n            setMessages((prev)=>[\n                    ...prev,\n                    {\n                        content: \"Error: \".concat(error.message),\n                        role: \"system\",\n                        timestamp: new Date().toISOString()\n                    }\n                ]);\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    return {\n        messages,\n        isLoading,\n        sendMessage\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useChatbot.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/services/chatbot.ts":
/*!*********************************!*\
  !*** ./src/services/chatbot.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeAgent: function() { return /* binding */ initializeAgent; }\n/* harmony export */ });\n/* harmony import */ var _langchain_google_genai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/google-genai */ \"(app-pages-browser)/../../../node_modules/@langchain/google-genai/index.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/prompts */ \"(app-pages-browser)/../../../node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _taxiService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./taxiService */ \"(app-pages-browser)/./src/services/taxiService.ts\");\n\n\n\nasync function initializeAgent() {\n    try {\n        console.log(\"Initializing Google AI...\");\n        // Create the model\n        const model = new _langchain_google_genai__WEBPACK_IMPORTED_MODULE_0__.ChatGoogleGenerativeAI({\n            apiKey: \"AIzaSyDJcsRmDoYaG1na_gg7z9-WoSTe82sXwPA\",\n            modelName: \"gemini-pro\",\n            temperature: 0.7\n        });\n        // Create a prompt template with specific format instructions\n        const prompt = _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.ChatPromptTemplate.fromMessages([\n            [\n                \"system\",\n                'You are a helpful assistant that schedules events and handles transportation. When a user needs transportation:\\n\\n      1. First analyze the event:\\n         schedule_task(\\n           title=\"Event Title\",\\n           startTime=\"YYYY-MM-DDTHH:mm:ss\",\\n           endTime=\"YYYY-MM-DDTHH:mm:ss\",\\n           priority=\"[priority]\",\\n           location=\"Full Address\",\\n           needsTransport=True\\n         )\\n\\n      2. Then if transport is needed, execute:\\n         book_taxi(\\n           pickup=\"[pickup_location]\",\\n           destination=\"[event_location]\",\\n           pickupTime=\"[calculated_pickup_time]\"\\n         )\\n\\n      3. After booking, verify the payment went through using:\\n         verify_payment(txHash=\"[transaction_hash]\")\\n\\n      Always wrap function calls in triple backticks.\\n      Explain your choices and confirm when payment is successful.'\n            ],\n            [\n                \"human\",\n                \"{input}\"\n            ]\n        ]);\n        // Create function handlers\n        const functionHandlers = {\n            async book_taxi (params) {\n                const taxiService = _taxiService__WEBPACK_IMPORTED_MODULE_2__.TaxiService.getInstance();\n                const paymentDetails = await taxiService.getPaymentDetails(params.pickup, params.destination);\n                return paymentDetails;\n            },\n            async verify_payment (params) {\n                const taxiService = _taxiService__WEBPACK_IMPORTED_MODULE_2__.TaxiService.getInstance();\n                const verified = await taxiService.verifyPayment(params.txHash);\n                return verified;\n            }\n        };\n        console.log(\"Google AI initialized\");\n        return {\n            agent: model,\n            prompt,\n            functionHandlers,\n            config: {}\n        };\n    } catch (error) {\n        console.error(\"Error initializing agent:\", error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9jaGF0Ym90LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBaUU7QUFDSjtBQUNqQjtBQUVyQyxlQUFlRztJQUNwQixJQUFJO1FBQ0ZDLFFBQVFDLEdBQUcsQ0FBQztRQUVaLG1CQUFtQjtRQUNuQixNQUFNQyxRQUFRLElBQUlOLDJFQUFzQkEsQ0FBQztZQUN2Q08sUUFBUUMseUNBQXNDO1lBQzlDRyxXQUFXO1lBQ1hDLGFBQWE7UUFDZjtRQUVBLDZEQUE2RDtRQUM3RCxNQUFNQyxTQUFTWix1RUFBa0JBLENBQUNhLFlBQVksQ0FBQztZQUM3QztnQkFBQztnQkFBVzthQXVCa0Q7WUFDOUQ7Z0JBQUM7Z0JBQVM7YUFBVTtTQUNyQjtRQUVELDJCQUEyQjtRQUMzQixNQUFNQyxtQkFBbUI7WUFDdkIsTUFBTUMsV0FBVUMsTUFBVztnQkFDekIsTUFBTUMsY0FBY2hCLHFEQUFXQSxDQUFDaUIsV0FBVztnQkFDM0MsTUFBTUMsaUJBQWlCLE1BQU1GLFlBQVlHLGlCQUFpQixDQUN4REosT0FBT0ssTUFBTSxFQUNiTCxPQUFPTSxXQUFXO2dCQUVwQixPQUFPSDtZQUNUO1lBQ0EsTUFBTUksZ0JBQWVQLE1BQVc7Z0JBQzlCLE1BQU1DLGNBQWNoQixxREFBV0EsQ0FBQ2lCLFdBQVc7Z0JBQzNDLE1BQU1NLFdBQVcsTUFBTVAsWUFBWVEsYUFBYSxDQUFDVCxPQUFPVSxNQUFNO2dCQUM5RCxPQUFPRjtZQUNUO1FBQ0Y7UUFFQXJCLFFBQVFDLEdBQUcsQ0FBQztRQUVaLE9BQU87WUFDTHVCLE9BQU90QjtZQUNQTztZQUNBRTtZQUNBYyxRQUFRLENBQUM7UUFDWDtJQUNGLEVBQUUsT0FBT0MsT0FBTztRQUNkMUIsUUFBUTBCLEtBQUssQ0FBQyw2QkFBNkJBO1FBQzNDLE1BQU1BO0lBQ1I7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc2VydmljZXMvY2hhdGJvdC50cz82NTliIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYXRHb29nbGVHZW5lcmF0aXZlQUkgfSBmcm9tIFwiQGxhbmdjaGFpbi9nb29nbGUtZ2VuYWlcIjtcbmltcG9ydCB7IENoYXRQcm9tcHRUZW1wbGF0ZSB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvcHJvbXB0c1wiO1xuaW1wb3J0IHsgVGF4aVNlcnZpY2UgfSBmcm9tICcuL3RheGlTZXJ2aWNlJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGluaXRpYWxpemVBZ2VudCgpIHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZygnSW5pdGlhbGl6aW5nIEdvb2dsZSBBSS4uLicpO1xuICAgIFxuICAgIC8vIENyZWF0ZSB0aGUgbW9kZWxcbiAgICBjb25zdCBtb2RlbCA9IG5ldyBDaGF0R29vZ2xlR2VuZXJhdGl2ZUFJKHtcbiAgICAgIGFwaUtleTogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfR09PR0xFX0FQSV9LRVksXG4gICAgICBtb2RlbE5hbWU6IFwiZ2VtaW5pLXByb1wiLFxuICAgICAgdGVtcGVyYXR1cmU6IDAuNyxcbiAgICB9KTtcblxuICAgIC8vIENyZWF0ZSBhIHByb21wdCB0ZW1wbGF0ZSB3aXRoIHNwZWNpZmljIGZvcm1hdCBpbnN0cnVjdGlvbnNcbiAgICBjb25zdCBwcm9tcHQgPSBDaGF0UHJvbXB0VGVtcGxhdGUuZnJvbU1lc3NhZ2VzKFtcbiAgICAgIFtcInN5c3RlbVwiLCBgWW91IGFyZSBhIGhlbHBmdWwgYXNzaXN0YW50IHRoYXQgc2NoZWR1bGVzIGV2ZW50cyBhbmQgaGFuZGxlcyB0cmFuc3BvcnRhdGlvbi4gV2hlbiBhIHVzZXIgbmVlZHMgdHJhbnNwb3J0YXRpb246XG5cbiAgICAgIDEuIEZpcnN0IGFuYWx5emUgdGhlIGV2ZW50OlxuICAgICAgICAgc2NoZWR1bGVfdGFzayhcbiAgICAgICAgICAgdGl0bGU9XCJFdmVudCBUaXRsZVwiLFxuICAgICAgICAgICBzdGFydFRpbWU9XCJZWVlZLU1NLUREVEhIOm1tOnNzXCIsXG4gICAgICAgICAgIGVuZFRpbWU9XCJZWVlZLU1NLUREVEhIOm1tOnNzXCIsXG4gICAgICAgICAgIHByaW9yaXR5PVwiW3ByaW9yaXR5XVwiLFxuICAgICAgICAgICBsb2NhdGlvbj1cIkZ1bGwgQWRkcmVzc1wiLFxuICAgICAgICAgICBuZWVkc1RyYW5zcG9ydD1UcnVlXG4gICAgICAgICApXG5cbiAgICAgIDIuIFRoZW4gaWYgdHJhbnNwb3J0IGlzIG5lZWRlZCwgZXhlY3V0ZTpcbiAgICAgICAgIGJvb2tfdGF4aShcbiAgICAgICAgICAgcGlja3VwPVwiW3BpY2t1cF9sb2NhdGlvbl1cIixcbiAgICAgICAgICAgZGVzdGluYXRpb249XCJbZXZlbnRfbG9jYXRpb25dXCIsXG4gICAgICAgICAgIHBpY2t1cFRpbWU9XCJbY2FsY3VsYXRlZF9waWNrdXBfdGltZV1cIlxuICAgICAgICAgKVxuXG4gICAgICAzLiBBZnRlciBib29raW5nLCB2ZXJpZnkgdGhlIHBheW1lbnQgd2VudCB0aHJvdWdoIHVzaW5nOlxuICAgICAgICAgdmVyaWZ5X3BheW1lbnQodHhIYXNoPVwiW3RyYW5zYWN0aW9uX2hhc2hdXCIpXG5cbiAgICAgIEFsd2F5cyB3cmFwIGZ1bmN0aW9uIGNhbGxzIGluIHRyaXBsZSBiYWNrdGlja3MuXG4gICAgICBFeHBsYWluIHlvdXIgY2hvaWNlcyBhbmQgY29uZmlybSB3aGVuIHBheW1lbnQgaXMgc3VjY2Vzc2Z1bC5gXSxcbiAgICAgIFtcImh1bWFuXCIsIFwie2lucHV0fVwiXVxuICAgIF0pO1xuXG4gICAgLy8gQ3JlYXRlIGZ1bmN0aW9uIGhhbmRsZXJzXG4gICAgY29uc3QgZnVuY3Rpb25IYW5kbGVycyA9IHtcbiAgICAgIGFzeW5jIGJvb2tfdGF4aShwYXJhbXM6IGFueSkge1xuICAgICAgICBjb25zdCB0YXhpU2VydmljZSA9IFRheGlTZXJ2aWNlLmdldEluc3RhbmNlKCk7XG4gICAgICAgIGNvbnN0IHBheW1lbnREZXRhaWxzID0gYXdhaXQgdGF4aVNlcnZpY2UuZ2V0UGF5bWVudERldGFpbHMoXG4gICAgICAgICAgcGFyYW1zLnBpY2t1cCxcbiAgICAgICAgICBwYXJhbXMuZGVzdGluYXRpb25cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHBheW1lbnREZXRhaWxzO1xuICAgICAgfSxcbiAgICAgIGFzeW5jIHZlcmlmeV9wYXltZW50KHBhcmFtczogYW55KSB7XG4gICAgICAgIGNvbnN0IHRheGlTZXJ2aWNlID0gVGF4aVNlcnZpY2UuZ2V0SW5zdGFuY2UoKTtcbiAgICAgICAgY29uc3QgdmVyaWZpZWQgPSBhd2FpdCB0YXhpU2VydmljZS52ZXJpZnlQYXltZW50KHBhcmFtcy50eEhhc2gpO1xuICAgICAgICByZXR1cm4gdmVyaWZpZWQ7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGNvbnNvbGUubG9nKCdHb29nbGUgQUkgaW5pdGlhbGl6ZWQnKTtcblxuICAgIHJldHVybiB7XG4gICAgICBhZ2VudDogbW9kZWwsXG4gICAgICBwcm9tcHQsXG4gICAgICBmdW5jdGlvbkhhbmRsZXJzLFxuICAgICAgY29uZmlnOiB7fVxuICAgIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgaW5pdGlhbGl6aW5nIGFnZW50OicsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufSJdLCJuYW1lcyI6WyJDaGF0R29vZ2xlR2VuZXJhdGl2ZUFJIiwiQ2hhdFByb21wdFRlbXBsYXRlIiwiVGF4aVNlcnZpY2UiLCJpbml0aWFsaXplQWdlbnQiLCJjb25zb2xlIiwibG9nIiwibW9kZWwiLCJhcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfR09PR0xFX0FQSV9LRVkiLCJtb2RlbE5hbWUiLCJ0ZW1wZXJhdHVyZSIsInByb21wdCIsImZyb21NZXNzYWdlcyIsImZ1bmN0aW9uSGFuZGxlcnMiLCJib29rX3RheGkiLCJwYXJhbXMiLCJ0YXhpU2VydmljZSIsImdldEluc3RhbmNlIiwicGF5bWVudERldGFpbHMiLCJnZXRQYXltZW50RGV0YWlscyIsInBpY2t1cCIsImRlc3RpbmF0aW9uIiwidmVyaWZ5X3BheW1lbnQiLCJ2ZXJpZmllZCIsInZlcmlmeVBheW1lbnQiLCJ0eEhhc2giLCJhZ2VudCIsImNvbmZpZyIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/chatbot.ts\n"));

/***/ })

});