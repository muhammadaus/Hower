"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/faucetService.ts":
/*!***************************************!*\
  !*** ./src/services/faucetService.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FaucetService: function() { return /* binding */ FaucetService; }\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/../../../node_modules/ethers/lib.esm/providers/provider-jsonrpc.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/../../../node_modules/ethers/lib.esm/wallet/wallet.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/../../../node_modules/ethers/lib.esm/utils/units.js\");\n\nclass FaucetService {\n    async initializeWallet() {\n        try {\n            console.log(\"Initializing wallet...\");\n            // Initialize provider first\n            this.provider = new ethers__WEBPACK_IMPORTED_MODULE_0__.JsonRpcProvider(\"https://sepolia.base.org\");\n            await this.provider.ready; // Wait for provider to be ready\n            const privateKey = \"2b945b366efae3ee40b09211fbab0622e12bcac71b2fadb12aff3e9a1661ad4b\";\n            if (!privateKey) {\n                throw new Error(\"Please set NEXT_PUBLIC_WALLET_PRIVATE_KEY in your environment variables\");\n            }\n            // Create wallet with provider\n            this.wallet = new ethers__WEBPACK_IMPORTED_MODULE_1__.Wallet(privateKey).connect(this.provider);\n            // Verify wallet is connected\n            try {\n                const address = await this.wallet.getAddress();\n                console.log(\"Wallet initialized for address:\", address);\n            } catch (error) {\n                throw new Error(\"Failed to connect wallet to provider\");\n            }\n        } catch (error) {\n            console.error(\"Failed to initialize wallet:\", error);\n            throw error;\n        }\n    }\n    static getInstance() {\n        if (!FaucetService.instance) {\n            FaucetService.instance = new FaucetService();\n        }\n        return FaucetService.instance;\n    }\n    async requestAndSendETH(toAddress, amount) {\n        try {\n            await this.initialized;\n            if (!this.wallet || !this.provider) {\n                throw new Error(\"Wallet not initialized\");\n            }\n            // Check current balance\n            console.log(\"Checking wallet balance...\");\n            const currentBalance = await this.provider.getBalance(await this.wallet.getAddress());\n            const requiredAmount = ethers__WEBPACK_IMPORTED_MODULE_2__.parseEther(amount.toString());\n            if (currentBalance < requiredAmount) {\n                throw new Error(\"Insufficient balance. Have: \".concat(ethers__WEBPACK_IMPORTED_MODULE_2__.formatEther(currentBalance), \" ETH, Need: \").concat(amount, \" ETH\"));\n            }\n            // Send payment\n            console.log(\"Sending payment to:\", toAddress);\n            const tx = await this.wallet.sendTransaction({\n                to: toAddress,\n                value: requiredAmount\n            });\n            await tx.wait();\n            console.log(\"Payment confirmed on blockchain:\", tx.hash);\n            return tx.hash;\n        } catch (error) {\n            console.error(\"Error in payment service:\", error);\n            throw error;\n        }\n    }\n    async verifyTransaction(txHash) {\n        try {\n            await this.initialized;\n            if (!this.provider) {\n                throw new Error(\"Provider not initialized\");\n            }\n            const receipt = await this.provider.getTransactionReceipt(txHash);\n            return receipt !== null && receipt.status === 1;\n        } catch (error) {\n            console.error(\"Error verifying transaction:\", error);\n            return false;\n        }\n    }\n    constructor(){\n        this.provider = null;\n        this.wallet = null;\n        this.initialized = this.initializeWallet();\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9mYXVjZXRTZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZ0M7QUFFekIsTUFBTUM7SUFVWCxNQUFjQyxtQkFBbUI7UUFDL0IsSUFBSTtZQUNGQyxRQUFRQyxHQUFHLENBQUM7WUFFWiw0QkFBNEI7WUFDNUIsSUFBSSxDQUFDQyxRQUFRLEdBQUcsSUFBSUwsbURBQXNCLENBQUM7WUFDM0MsTUFBTSxJQUFJLENBQUNLLFFBQVEsQ0FBQ0UsS0FBSyxFQUFFLGdDQUFnQztZQUUzRCxNQUFNQyxhQUFhQyxrRUFBMEM7WUFDN0QsSUFBSSxDQUFDRCxZQUFZO2dCQUNmLE1BQU0sSUFBSUksTUFBTTtZQUNsQjtZQUVBLDhCQUE4QjtZQUM5QixJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJYiwwQ0FBYSxDQUFDUSxZQUFZTyxPQUFPLENBQUMsSUFBSSxDQUFDVixRQUFRO1lBRWpFLDZCQUE2QjtZQUM3QixJQUFJO2dCQUNGLE1BQU1XLFVBQVUsTUFBTSxJQUFJLENBQUNILE1BQU0sQ0FBQ0ksVUFBVTtnQkFDNUNkLFFBQVFDLEdBQUcsQ0FBQyxtQ0FBbUNZO1lBQ2pELEVBQUUsT0FBT0UsT0FBTztnQkFDZCxNQUFNLElBQUlOLE1BQU07WUFDbEI7UUFFRixFQUFFLE9BQU9NLE9BQU87WUFDZGYsUUFBUWUsS0FBSyxDQUFDLGdDQUFnQ0E7WUFDOUMsTUFBTUE7UUFDUjtJQUNGO0lBRUEsT0FBT0MsY0FBNkI7UUFDbEMsSUFBSSxDQUFDbEIsY0FBY21CLFFBQVEsRUFBRTtZQUMzQm5CLGNBQWNtQixRQUFRLEdBQUcsSUFBSW5CO1FBQy9CO1FBQ0EsT0FBT0EsY0FBY21CLFFBQVE7SUFDL0I7SUFFQSxNQUFNQyxrQkFBa0JDLFNBQWlCLEVBQUVDLE1BQWMsRUFBbUI7UUFDMUUsSUFBSTtZQUNGLE1BQU0sSUFBSSxDQUFDQyxXQUFXO1lBRXRCLElBQUksQ0FBQyxJQUFJLENBQUNYLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQ1IsUUFBUSxFQUFFO2dCQUNsQyxNQUFNLElBQUlPLE1BQU07WUFDbEI7WUFFQSx3QkFBd0I7WUFDeEJULFFBQVFDLEdBQUcsQ0FBQztZQUNaLE1BQU1xQixpQkFBaUIsTUFBTSxJQUFJLENBQUNwQixRQUFRLENBQUNxQixVQUFVLENBQUMsTUFBTSxJQUFJLENBQUNiLE1BQU0sQ0FBQ0ksVUFBVTtZQUNsRixNQUFNVSxpQkFBaUIzQiw4Q0FBaUIsQ0FBQ3VCLE9BQU9NLFFBQVE7WUFFeEQsSUFBSUosaUJBQWlCRSxnQkFBZ0I7Z0JBQ25DLE1BQU0sSUFBSWYsTUFBTSwrQkFBZ0ZXLE9BQWpEdkIsK0NBQWtCLENBQUN5QixpQkFBZ0IsZ0JBQXFCLE9BQVBGLFFBQU87WUFDekc7WUFFQSxlQUFlO1lBQ2ZwQixRQUFRQyxHQUFHLENBQUMsdUJBQXVCa0I7WUFDbkMsTUFBTVMsS0FBSyxNQUFNLElBQUksQ0FBQ2xCLE1BQU0sQ0FBQ21CLGVBQWUsQ0FBQztnQkFDM0NDLElBQUlYO2dCQUNKWSxPQUFPUDtZQUNUO1lBRUEsTUFBTUksR0FBR0ksSUFBSTtZQUNiaEMsUUFBUUMsR0FBRyxDQUFDLG9DQUFvQzJCLEdBQUdLLElBQUk7WUFFdkQsT0FBT0wsR0FBR0ssSUFBSTtRQUNoQixFQUFFLE9BQU9sQixPQUFPO1lBQ2RmLFFBQVFlLEtBQUssQ0FBQyw2QkFBNkJBO1lBQzNDLE1BQU1BO1FBQ1I7SUFDRjtJQUVBLE1BQU1tQixrQkFBa0JDLE1BQWMsRUFBb0I7UUFDeEQsSUFBSTtZQUNGLE1BQU0sSUFBSSxDQUFDZCxXQUFXO1lBQ3RCLElBQUksQ0FBQyxJQUFJLENBQUNuQixRQUFRLEVBQUU7Z0JBQ2xCLE1BQU0sSUFBSU8sTUFBTTtZQUNsQjtZQUVBLE1BQU0yQixVQUFVLE1BQU0sSUFBSSxDQUFDbEMsUUFBUSxDQUFDbUMscUJBQXFCLENBQUNGO1lBQzFELE9BQU9DLFlBQVksUUFBUUEsUUFBUUUsTUFBTSxLQUFLO1FBQ2hELEVBQUUsT0FBT3ZCLE9BQU87WUFDZGYsUUFBUWUsS0FBSyxDQUFDLGdDQUFnQ0E7WUFDOUMsT0FBTztRQUNUO0lBQ0Y7SUF4RkEsYUFBc0I7YUFKZGIsV0FBMEM7YUFDMUNRLFNBQStCO1FBSXJDLElBQUksQ0FBQ1csV0FBVyxHQUFHLElBQUksQ0FBQ3RCLGdCQUFnQjtJQUMxQztBQXVGRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc2VydmljZXMvZmF1Y2V0U2VydmljZS50cz9kMzM0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV0aGVycyB9IGZyb20gXCJldGhlcnNcIjtcblxuZXhwb3J0IGNsYXNzIEZhdWNldFNlcnZpY2Uge1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogRmF1Y2V0U2VydmljZTtcbiAgcHJpdmF0ZSBwcm92aWRlcjogZXRoZXJzLkpzb25ScGNQcm92aWRlciB8IG51bGwgPSBudWxsO1xuICBwcml2YXRlIHdhbGxldDogZXRoZXJzLldhbGxldCB8IG51bGwgPSBudWxsO1xuICBwcml2YXRlIGluaXRpYWxpemVkOiBQcm9taXNlPHZvaWQ+O1xuICBcbiAgcHJpdmF0ZSBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmluaXRpYWxpemVkID0gdGhpcy5pbml0aWFsaXplV2FsbGV0KCk7XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIGluaXRpYWxpemVXYWxsZXQoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnNvbGUubG9nKCdJbml0aWFsaXppbmcgd2FsbGV0Li4uJyk7XG4gICAgICBcbiAgICAgIC8vIEluaXRpYWxpemUgcHJvdmlkZXIgZmlyc3RcbiAgICAgIHRoaXMucHJvdmlkZXIgPSBuZXcgZXRoZXJzLkpzb25ScGNQcm92aWRlcignaHR0cHM6Ly9zZXBvbGlhLmJhc2Uub3JnJyk7XG4gICAgICBhd2FpdCB0aGlzLnByb3ZpZGVyLnJlYWR5OyAvLyBXYWl0IGZvciBwcm92aWRlciB0byBiZSByZWFkeVxuICAgICAgXG4gICAgICBjb25zdCBwcml2YXRlS2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfV0FMTEVUX1BSSVZBVEVfS0VZO1xuICAgICAgaWYgKCFwcml2YXRlS2V5KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUGxlYXNlIHNldCBORVhUX1BVQkxJQ19XQUxMRVRfUFJJVkFURV9LRVkgaW4geW91ciBlbnZpcm9ubWVudCB2YXJpYWJsZXMnKTtcbiAgICAgIH1cblxuICAgICAgLy8gQ3JlYXRlIHdhbGxldCB3aXRoIHByb3ZpZGVyXG4gICAgICB0aGlzLndhbGxldCA9IG5ldyBldGhlcnMuV2FsbGV0KHByaXZhdGVLZXkpLmNvbm5lY3QodGhpcy5wcm92aWRlcik7XG4gICAgICBcbiAgICAgIC8vIFZlcmlmeSB3YWxsZXQgaXMgY29ubmVjdGVkXG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBhZGRyZXNzID0gYXdhaXQgdGhpcy53YWxsZXQuZ2V0QWRkcmVzcygpO1xuICAgICAgICBjb25zb2xlLmxvZygnV2FsbGV0IGluaXRpYWxpemVkIGZvciBhZGRyZXNzOicsIGFkZHJlc3MpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gY29ubmVjdCB3YWxsZXQgdG8gcHJvdmlkZXInKTtcbiAgICAgIH1cbiAgICAgIFxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gaW5pdGlhbGl6ZSB3YWxsZXQ6JywgZXJyb3IpO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGdldEluc3RhbmNlKCk6IEZhdWNldFNlcnZpY2Uge1xuICAgIGlmICghRmF1Y2V0U2VydmljZS5pbnN0YW5jZSkge1xuICAgICAgRmF1Y2V0U2VydmljZS5pbnN0YW5jZSA9IG5ldyBGYXVjZXRTZXJ2aWNlKCk7XG4gICAgfVxuICAgIHJldHVybiBGYXVjZXRTZXJ2aWNlLmluc3RhbmNlO1xuICB9XG5cbiAgYXN5bmMgcmVxdWVzdEFuZFNlbmRFVEgodG9BZGRyZXNzOiBzdHJpbmcsIGFtb3VudDogbnVtYmVyKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy5pbml0aWFsaXplZDtcblxuICAgICAgaWYgKCF0aGlzLndhbGxldCB8fCAhdGhpcy5wcm92aWRlcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1dhbGxldCBub3QgaW5pdGlhbGl6ZWQnKTtcbiAgICAgIH1cblxuICAgICAgLy8gQ2hlY2sgY3VycmVudCBiYWxhbmNlXG4gICAgICBjb25zb2xlLmxvZygnQ2hlY2tpbmcgd2FsbGV0IGJhbGFuY2UuLi4nKTtcbiAgICAgIGNvbnN0IGN1cnJlbnRCYWxhbmNlID0gYXdhaXQgdGhpcy5wcm92aWRlci5nZXRCYWxhbmNlKGF3YWl0IHRoaXMud2FsbGV0LmdldEFkZHJlc3MoKSk7XG4gICAgICBjb25zdCByZXF1aXJlZEFtb3VudCA9IGV0aGVycy5wYXJzZUV0aGVyKGFtb3VudC50b1N0cmluZygpKTtcbiAgICAgIFxuICAgICAgaWYgKGN1cnJlbnRCYWxhbmNlIDwgcmVxdWlyZWRBbW91bnQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnN1ZmZpY2llbnQgYmFsYW5jZS4gSGF2ZTogJHtldGhlcnMuZm9ybWF0RXRoZXIoY3VycmVudEJhbGFuY2UpfSBFVEgsIE5lZWQ6ICR7YW1vdW50fSBFVEhgKTtcbiAgICAgIH1cblxuICAgICAgLy8gU2VuZCBwYXltZW50XG4gICAgICBjb25zb2xlLmxvZygnU2VuZGluZyBwYXltZW50IHRvOicsIHRvQWRkcmVzcyk7XG4gICAgICBjb25zdCB0eCA9IGF3YWl0IHRoaXMud2FsbGV0LnNlbmRUcmFuc2FjdGlvbih7XG4gICAgICAgIHRvOiB0b0FkZHJlc3MsXG4gICAgICAgIHZhbHVlOiByZXF1aXJlZEFtb3VudFxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIGF3YWl0IHR4LndhaXQoKTtcbiAgICAgIGNvbnNvbGUubG9nKCdQYXltZW50IGNvbmZpcm1lZCBvbiBibG9ja2NoYWluOicsIHR4Lmhhc2gpO1xuXG4gICAgICByZXR1cm4gdHguaGFzaDtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gcGF5bWVudCBzZXJ2aWNlOicsIGVycm9yKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHZlcmlmeVRyYW5zYWN0aW9uKHR4SGFzaDogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMuaW5pdGlhbGl6ZWQ7XG4gICAgICBpZiAoIXRoaXMucHJvdmlkZXIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQcm92aWRlciBub3QgaW5pdGlhbGl6ZWQnKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgcmVjZWlwdCA9IGF3YWl0IHRoaXMucHJvdmlkZXIuZ2V0VHJhbnNhY3Rpb25SZWNlaXB0KHR4SGFzaCk7XG4gICAgICByZXR1cm4gcmVjZWlwdCAhPT0gbnVsbCAmJiByZWNlaXB0LnN0YXR1cyA9PT0gMTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgdmVyaWZ5aW5nIHRyYW5zYWN0aW9uOicsIGVycm9yKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbn0gIl0sIm5hbWVzIjpbImV0aGVycyIsIkZhdWNldFNlcnZpY2UiLCJpbml0aWFsaXplV2FsbGV0IiwiY29uc29sZSIsImxvZyIsInByb3ZpZGVyIiwiSnNvblJwY1Byb3ZpZGVyIiwicmVhZHkiLCJwcml2YXRlS2V5IiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1dBTExFVF9QUklWQVRFX0tFWSIsIkVycm9yIiwid2FsbGV0IiwiV2FsbGV0IiwiY29ubmVjdCIsImFkZHJlc3MiLCJnZXRBZGRyZXNzIiwiZXJyb3IiLCJnZXRJbnN0YW5jZSIsImluc3RhbmNlIiwicmVxdWVzdEFuZFNlbmRFVEgiLCJ0b0FkZHJlc3MiLCJhbW91bnQiLCJpbml0aWFsaXplZCIsImN1cnJlbnRCYWxhbmNlIiwiZ2V0QmFsYW5jZSIsInJlcXVpcmVkQW1vdW50IiwicGFyc2VFdGhlciIsInRvU3RyaW5nIiwiZm9ybWF0RXRoZXIiLCJ0eCIsInNlbmRUcmFuc2FjdGlvbiIsInRvIiwidmFsdWUiLCJ3YWl0IiwiaGFzaCIsInZlcmlmeVRyYW5zYWN0aW9uIiwidHhIYXNoIiwicmVjZWlwdCIsImdldFRyYW5zYWN0aW9uUmVjZWlwdCIsInN0YXR1cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/faucetService.ts\n"));

/***/ })

});