"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/faucetService.ts":
/*!***************************************!*\
  !*** ./src/services/faucetService.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FaucetService: function() { return /* binding */ FaucetService; }\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/../../../node_modules/ethers/lib.esm/providers/provider-jsonrpc.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/../../../node_modules/ethers/lib.esm/wallet/wallet.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/../../../node_modules/ethers/lib.esm/utils/units.js\");\n\nclass FaucetService {\n    async initializeWallet() {\n        try {\n            console.log(\"Initializing wallet...\");\n            this.provider = new ethers__WEBPACK_IMPORTED_MODULE_0__.JsonRpcProvider(\"https://sepolia.base.org\");\n            // Use hardcoded private key for demo\n            const privateKey = \"\";\n            this.wallet = new ethers__WEBPACK_IMPORTED_MODULE_1__.Wallet(privateKey, this.provider);\n            // Test wallet connection\n            const balance = await this.wallet.getBalance();\n            console.log(\"Wallet initialized with balance:\", ethers__WEBPACK_IMPORTED_MODULE_2__.formatEther(balance), \"ETH\");\n        } catch (error) {\n            console.error(\"Failed to initialize wallet:\", error);\n            throw error;\n        }\n    }\n    static getInstance() {\n        if (!FaucetService.instance) {\n            FaucetService.instance = new FaucetService();\n        }\n        return FaucetService.instance;\n    }\n    async requestAndSendETH(toAddress, amount) {\n        try {\n            await this.initialized;\n            if (!this.wallet || !this.provider) {\n                throw new Error(\"Wallet not initialized\");\n            }\n            // Check current balance\n            console.log(\"Checking wallet balance...\");\n            const currentBalance = await this.wallet.getBalance();\n            const requiredAmount = ethers__WEBPACK_IMPORTED_MODULE_2__.parseEther(amount.toString());\n            if (currentBalance < requiredAmount) {\n                throw new Error(\"Insufficient balance. Have: \".concat(ethers__WEBPACK_IMPORTED_MODULE_2__.formatEther(currentBalance), \" ETH, Need: \").concat(amount, \" ETH\"));\n            }\n            // Send payment\n            console.log(\"Sending payment to:\", toAddress);\n            const tx = await this.wallet.sendTransaction({\n                to: toAddress,\n                value: requiredAmount\n            });\n            await tx.wait();\n            console.log(\"Payment confirmed on blockchain:\", tx.hash);\n            return tx.hash;\n        } catch (error) {\n            console.error(\"Error in payment service:\", error);\n            throw error;\n        }\n    }\n    async verifyTransaction(txHash) {\n        try {\n            await this.initialized;\n            if (!this.provider) {\n                throw new Error(\"Provider not initialized\");\n            }\n            const receipt = await this.provider.getTransactionReceipt(txHash);\n            return receipt !== null && receipt.status === 1;\n        } catch (error) {\n            console.error(\"Error verifying transaction:\", error);\n            return false;\n        }\n    }\n    constructor(){\n        this.provider = null;\n        this.wallet = null;\n        this.initialized = this.initializeWallet();\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9mYXVjZXRTZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZ0M7QUFFekIsTUFBTUM7SUFVWCxNQUFjQyxtQkFBbUI7UUFDL0IsSUFBSTtZQUNGQyxRQUFRQyxHQUFHLENBQUM7WUFDWixJQUFJLENBQUNDLFFBQVEsR0FBRyxJQUFJTCxtREFBc0IsQ0FBQztZQUUzQyxxQ0FBcUM7WUFDckMsTUFBTU8sYUFBYTtZQUNuQixJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJUiwwQ0FBYSxDQUFDTyxZQUFZLElBQUksQ0FBQ0YsUUFBUTtZQUV6RCx5QkFBeUI7WUFDekIsTUFBTUssVUFBVSxNQUFNLElBQUksQ0FBQ0YsTUFBTSxDQUFDRyxVQUFVO1lBQzVDUixRQUFRQyxHQUFHLENBQUMsb0NBQW9DSiwrQ0FBa0IsQ0FBQ1UsVUFBVTtRQUUvRSxFQUFFLE9BQU9HLE9BQU87WUFDZFYsUUFBUVUsS0FBSyxDQUFDLGdDQUFnQ0E7WUFDOUMsTUFBTUE7UUFDUjtJQUNGO0lBRUEsT0FBT0MsY0FBNkI7UUFDbEMsSUFBSSxDQUFDYixjQUFjYyxRQUFRLEVBQUU7WUFDM0JkLGNBQWNjLFFBQVEsR0FBRyxJQUFJZDtRQUMvQjtRQUNBLE9BQU9BLGNBQWNjLFFBQVE7SUFDL0I7SUFFQSxNQUFNQyxrQkFBa0JDLFNBQWlCLEVBQUVDLE1BQWMsRUFBbUI7UUFDMUUsSUFBSTtZQUNGLE1BQU0sSUFBSSxDQUFDQyxXQUFXO1lBRXRCLElBQUksQ0FBQyxJQUFJLENBQUNYLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQ0gsUUFBUSxFQUFFO2dCQUNsQyxNQUFNLElBQUllLE1BQU07WUFDbEI7WUFFQSx3QkFBd0I7WUFDeEJqQixRQUFRQyxHQUFHLENBQUM7WUFDWixNQUFNaUIsaUJBQWlCLE1BQU0sSUFBSSxDQUFDYixNQUFNLENBQUNHLFVBQVU7WUFDbkQsTUFBTVcsaUJBQWlCdEIsOENBQWlCLENBQUNrQixPQUFPTSxRQUFRO1lBRXhELElBQUlILGlCQUFpQkMsZ0JBQWdCO2dCQUNuQyxNQUFNLElBQUlGLE1BQU0sK0JBQWdGRixPQUFqRGxCLCtDQUFrQixDQUFDcUIsaUJBQWdCLGdCQUFxQixPQUFQSCxRQUFPO1lBQ3pHO1lBRUEsZUFBZTtZQUNmZixRQUFRQyxHQUFHLENBQUMsdUJBQXVCYTtZQUNuQyxNQUFNUSxLQUFLLE1BQU0sSUFBSSxDQUFDakIsTUFBTSxDQUFDa0IsZUFBZSxDQUFDO2dCQUMzQ0MsSUFBSVY7Z0JBQ0pXLE9BQU9OO1lBQ1Q7WUFFQSxNQUFNRyxHQUFHSSxJQUFJO1lBQ2IxQixRQUFRQyxHQUFHLENBQUMsb0NBQW9DcUIsR0FBR0ssSUFBSTtZQUV2RCxPQUFPTCxHQUFHSyxJQUFJO1FBQ2hCLEVBQUUsT0FBT2pCLE9BQU87WUFDZFYsUUFBUVUsS0FBSyxDQUFDLDZCQUE2QkE7WUFDM0MsTUFBTUE7UUFDUjtJQUNGO0lBRUEsTUFBTWtCLGtCQUFrQkMsTUFBYyxFQUFvQjtRQUN4RCxJQUFJO1lBQ0YsTUFBTSxJQUFJLENBQUNiLFdBQVc7WUFDdEIsSUFBSSxDQUFDLElBQUksQ0FBQ2QsUUFBUSxFQUFFO2dCQUNsQixNQUFNLElBQUllLE1BQU07WUFDbEI7WUFFQSxNQUFNYSxVQUFVLE1BQU0sSUFBSSxDQUFDNUIsUUFBUSxDQUFDNkIscUJBQXFCLENBQUNGO1lBQzFELE9BQU9DLFlBQVksUUFBUUEsUUFBUUUsTUFBTSxLQUFLO1FBQ2hELEVBQUUsT0FBT3RCLE9BQU87WUFDZFYsUUFBUVUsS0FBSyxDQUFDLGdDQUFnQ0E7WUFDOUMsT0FBTztRQUNUO0lBQ0Y7SUE3RUEsYUFBc0I7YUFKZFIsV0FBMEM7YUFDMUNHLFNBQStCO1FBSXJDLElBQUksQ0FBQ1csV0FBVyxHQUFHLElBQUksQ0FBQ2pCLGdCQUFnQjtJQUMxQztBQTRFRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc2VydmljZXMvZmF1Y2V0U2VydmljZS50cz9kMzM0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV0aGVycyB9IGZyb20gXCJldGhlcnNcIjtcblxuZXhwb3J0IGNsYXNzIEZhdWNldFNlcnZpY2Uge1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogRmF1Y2V0U2VydmljZTtcbiAgcHJpdmF0ZSBwcm92aWRlcjogZXRoZXJzLkpzb25ScGNQcm92aWRlciB8IG51bGwgPSBudWxsO1xuICBwcml2YXRlIHdhbGxldDogZXRoZXJzLldhbGxldCB8IG51bGwgPSBudWxsO1xuICBwcml2YXRlIGluaXRpYWxpemVkOiBQcm9taXNlPHZvaWQ+O1xuICBcbiAgcHJpdmF0ZSBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmluaXRpYWxpemVkID0gdGhpcy5pbml0aWFsaXplV2FsbGV0KCk7XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIGluaXRpYWxpemVXYWxsZXQoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnNvbGUubG9nKCdJbml0aWFsaXppbmcgd2FsbGV0Li4uJyk7XG4gICAgICB0aGlzLnByb3ZpZGVyID0gbmV3IGV0aGVycy5Kc29uUnBjUHJvdmlkZXIoJ2h0dHBzOi8vc2Vwb2xpYS5iYXNlLm9yZycpO1xuICAgICAgXG4gICAgICAvLyBVc2UgaGFyZGNvZGVkIHByaXZhdGUga2V5IGZvciBkZW1vXG4gICAgICBjb25zdCBwcml2YXRlS2V5ID0gXCIyYjk0NWIzNjZlZmFlM2VlNDBiMDkyMTFmYmFiMDYyMmUxMmJjYWM3MWIyZmFkYjEyYWZmM2U5YTE2NjFhZDRiXCI7XG4gICAgICB0aGlzLndhbGxldCA9IG5ldyBldGhlcnMuV2FsbGV0KHByaXZhdGVLZXksIHRoaXMucHJvdmlkZXIpO1xuICAgICAgXG4gICAgICAvLyBUZXN0IHdhbGxldCBjb25uZWN0aW9uXG4gICAgICBjb25zdCBiYWxhbmNlID0gYXdhaXQgdGhpcy53YWxsZXQuZ2V0QmFsYW5jZSgpO1xuICAgICAgY29uc29sZS5sb2coJ1dhbGxldCBpbml0aWFsaXplZCB3aXRoIGJhbGFuY2U6JywgZXRoZXJzLmZvcm1hdEV0aGVyKGJhbGFuY2UpLCAnRVRIJyk7XG4gICAgICBcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGluaXRpYWxpemUgd2FsbGV0OicsIGVycm9yKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBnZXRJbnN0YW5jZSgpOiBGYXVjZXRTZXJ2aWNlIHtcbiAgICBpZiAoIUZhdWNldFNlcnZpY2UuaW5zdGFuY2UpIHtcbiAgICAgIEZhdWNldFNlcnZpY2UuaW5zdGFuY2UgPSBuZXcgRmF1Y2V0U2VydmljZSgpO1xuICAgIH1cbiAgICByZXR1cm4gRmF1Y2V0U2VydmljZS5pbnN0YW5jZTtcbiAgfVxuXG4gIGFzeW5jIHJlcXVlc3RBbmRTZW5kRVRIKHRvQWRkcmVzczogc3RyaW5nLCBhbW91bnQ6IG51bWJlcik6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMuaW5pdGlhbGl6ZWQ7XG5cbiAgICAgIGlmICghdGhpcy53YWxsZXQgfHwgIXRoaXMucHJvdmlkZXIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdXYWxsZXQgbm90IGluaXRpYWxpemVkJyk7XG4gICAgICB9XG5cbiAgICAgIC8vIENoZWNrIGN1cnJlbnQgYmFsYW5jZVxuICAgICAgY29uc29sZS5sb2coJ0NoZWNraW5nIHdhbGxldCBiYWxhbmNlLi4uJyk7XG4gICAgICBjb25zdCBjdXJyZW50QmFsYW5jZSA9IGF3YWl0IHRoaXMud2FsbGV0LmdldEJhbGFuY2UoKTtcbiAgICAgIGNvbnN0IHJlcXVpcmVkQW1vdW50ID0gZXRoZXJzLnBhcnNlRXRoZXIoYW1vdW50LnRvU3RyaW5nKCkpO1xuICAgICAgXG4gICAgICBpZiAoY3VycmVudEJhbGFuY2UgPCByZXF1aXJlZEFtb3VudCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEluc3VmZmljaWVudCBiYWxhbmNlLiBIYXZlOiAke2V0aGVycy5mb3JtYXRFdGhlcihjdXJyZW50QmFsYW5jZSl9IEVUSCwgTmVlZDogJHthbW91bnR9IEVUSGApO1xuICAgICAgfVxuXG4gICAgICAvLyBTZW5kIHBheW1lbnRcbiAgICAgIGNvbnNvbGUubG9nKCdTZW5kaW5nIHBheW1lbnQgdG86JywgdG9BZGRyZXNzKTtcbiAgICAgIGNvbnN0IHR4ID0gYXdhaXQgdGhpcy53YWxsZXQuc2VuZFRyYW5zYWN0aW9uKHtcbiAgICAgICAgdG86IHRvQWRkcmVzcyxcbiAgICAgICAgdmFsdWU6IHJlcXVpcmVkQW1vdW50XG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgYXdhaXQgdHgud2FpdCgpO1xuICAgICAgY29uc29sZS5sb2coJ1BheW1lbnQgY29uZmlybWVkIG9uIGJsb2NrY2hhaW46JywgdHguaGFzaCk7XG5cbiAgICAgIHJldHVybiB0eC5oYXNoO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBwYXltZW50IHNlcnZpY2U6JywgZXJyb3IpO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgdmVyaWZ5VHJhbnNhY3Rpb24odHhIYXNoOiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy5pbml0aWFsaXplZDtcbiAgICAgIGlmICghdGhpcy5wcm92aWRlcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Byb3ZpZGVyIG5vdCBpbml0aWFsaXplZCcpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCByZWNlaXB0ID0gYXdhaXQgdGhpcy5wcm92aWRlci5nZXRUcmFuc2FjdGlvblJlY2VpcHQodHhIYXNoKTtcbiAgICAgIHJldHVybiByZWNlaXB0ICE9PSBudWxsICYmIHJlY2VpcHQuc3RhdHVzID09PSAxO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciB2ZXJpZnlpbmcgdHJhbnNhY3Rpb246JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxufSAiXSwibmFtZXMiOlsiZXRoZXJzIiwiRmF1Y2V0U2VydmljZSIsImluaXRpYWxpemVXYWxsZXQiLCJjb25zb2xlIiwibG9nIiwicHJvdmlkZXIiLCJKc29uUnBjUHJvdmlkZXIiLCJwcml2YXRlS2V5Iiwid2FsbGV0IiwiV2FsbGV0IiwiYmFsYW5jZSIsImdldEJhbGFuY2UiLCJmb3JtYXRFdGhlciIsImVycm9yIiwiZ2V0SW5zdGFuY2UiLCJpbnN0YW5jZSIsInJlcXVlc3RBbmRTZW5kRVRIIiwidG9BZGRyZXNzIiwiYW1vdW50IiwiaW5pdGlhbGl6ZWQiLCJFcnJvciIsImN1cnJlbnRCYWxhbmNlIiwicmVxdWlyZWRBbW91bnQiLCJwYXJzZUV0aGVyIiwidG9TdHJpbmciLCJ0eCIsInNlbmRUcmFuc2FjdGlvbiIsInRvIiwidmFsdWUiLCJ3YWl0IiwiaGFzaCIsInZlcmlmeVRyYW5zYWN0aW9uIiwidHhIYXNoIiwicmVjZWlwdCIsImdldFRyYW5zYWN0aW9uUmVjZWlwdCIsInN0YXR1cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/faucetService.ts\n"));

/***/ })

});