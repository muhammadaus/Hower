/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/chat/route";
exports.ids = ["app/api/chat/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:async_hooks");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:crypto");

/***/ }),

/***/ "?d041":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?b0be":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?7009":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?eb14":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/../../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FHower%2Ftypescript%2Fexamples%2Flangchain-cdp-chatbot%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FHower%2Ftypescript%2Fexamples%2Flangchain-cdp-chatbot&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ../../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FHower%2Ftypescript%2Fexamples%2Flangchain-cdp-chatbot%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FHower%2Ftypescript%2Fexamples%2Flangchain-cdp-chatbot&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/../../../node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/../../../node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/../../../node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_muhammadaushijri_Desktop_git_Hower_typescript_examples_langchain_cdp_chatbot_src_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/chat/route.ts */ \"(rsc)/./src/app/api/chat/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/chat/route\",\n        pathname: \"/api/chat\",\n        filename: \"route\",\n        bundlePath: \"app/api/chat/route\"\n    },\n    resolvedPagePath: \"/Users/muhammadaushijri/Desktop/git/Hower/typescript/examples/langchain-cdp-chatbot/src/app/api/chat/route.ts\",\n    nextConfigOutput,\n    userland: _Users_muhammadaushijri_Desktop_git_Hower_typescript_examples_langchain_cdp_chatbot_src_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/chat/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1hcHAtbG9hZGVyLmpzP25hbWU9YXBwJTJGYXBpJTJGY2hhdCUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGY2hhdCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmNoYXQlMkZyb3V0ZS50cyZhcHBEaXI9JTJGVXNlcnMlMkZtdWhhbW1hZGF1c2hpanJpJTJGRGVza3RvcCUyRmdpdCUyRkhvd2VyJTJGdHlwZXNjcmlwdCUyRmV4YW1wbGVzJTJGbGFuZ2NoYWluLWNkcC1jaGF0Ym90JTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRm11aGFtbWFkYXVzaGlqcmklMkZEZXNrdG9wJTJGZ2l0JTJGSG93ZXIlMkZ0eXBlc2NyaXB0JTJGZXhhbXBsZXMlMkZsYW5nY2hhaW4tY2RwLWNoYXRib3QmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQzZEO0FBQzFJO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNvaW5iYXNlL2NkcC1sYW5nY2hhaW4tY2hhdGJvdC1leGFtcGxlLz80MDI4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9tdWhhbW1hZGF1c2hpanJpL0Rlc2t0b3AvZ2l0L0hvd2VyL3R5cGVzY3JpcHQvZXhhbXBsZXMvbGFuZ2NoYWluLWNkcC1jaGF0Ym90L3NyYy9hcHAvYXBpL2NoYXQvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2NoYXQvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jaGF0XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9jaGF0L3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL211aGFtbWFkYXVzaGlqcmkvRGVza3RvcC9naXQvSG93ZXIvdHlwZXNjcmlwdC9leGFtcGxlcy9sYW5nY2hhaW4tY2RwLWNoYXRib3Qvc3JjL2FwcC9hcGkvY2hhdC9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvY2hhdC9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FHower%2Ftypescript%2Fexamples%2Flangchain-cdp-chatbot%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FHower%2Ftypescript%2Fexamples%2Flangchain-cdp-chatbot&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/actionDecorator.js":
/*!***************************************************************!*\
  !*** ../../agentkit/dist/action-providers/actionDecorator.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ACTION_DECORATOR_KEY = void 0;\nexports.CreateAction = CreateAction;\nconst wallet_providers_1 = __webpack_require__(/*! ../wallet-providers */ \"(rsc)/../../agentkit/dist/wallet-providers/index.js\");\nconst analytics_1 = __webpack_require__(/*! ../analytics */ \"(rsc)/../../agentkit/dist/analytics/index.js\");\n__webpack_require__(/*! reflect-metadata */ \"(rsc)/../../../node_modules/reflect-metadata/Reflect.js\");\n/**\n * Metadata key for the action decorator\n */ exports.ACTION_DECORATOR_KEY = Symbol(\"agentkit:action\");\n/**\n * Decorator to embed metadata on class methods to indicate they are actions accessible to the agent\n *\n * @param params - The parameters for the action decorator\n * @returns A decorator function\n *\n * @example\n * ```typescript\n * class MyActionProvider extends ActionProvider {\n *   @CreateAction({ name: \"my_action\", description: \"My action\", schema: myActionSchema })\n *   public myAction(args: z.infer<typeof myActionSchema>) {\n *     // ...\n *   }\n * }\n * ```\n */ function CreateAction(params) {\n    return (target, propertyKey, descriptor)=>{\n        const prefixedActionName = `${target.constructor.name}_${params.name}`;\n        const originalMethod = descriptor.value;\n        const { isWalletProvider } = validateActionMethodArguments(target, propertyKey);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        descriptor.value = function(...args) {\n            let walletMetrics = {};\n            if (isWalletProvider) {\n                walletMetrics = {\n                    wallet_provider: args[0].getName(),\n                    wallet_address: args[0].getAddress(),\n                    network_id: args[0].getNetwork().networkId,\n                    chain_id: args[0].getNetwork().chainId,\n                    protocol_family: args[0].getNetwork().protocolFamily\n                };\n            }\n            (0, analytics_1.sendAnalyticsEvent)({\n                name: \"agent_action_invocation\",\n                action: \"invoke_action\",\n                component: \"agent_action\",\n                action_name: prefixedActionName,\n                class_name: target.constructor.name,\n                method_name: propertyKey,\n                ...walletMetrics\n            });\n            return originalMethod.apply(this, args);\n        };\n        const existingMetadata = Reflect.getMetadata(exports.ACTION_DECORATOR_KEY, target.constructor) || new Map();\n        const metaData = {\n            name: prefixedActionName,\n            description: params.description,\n            schema: params.schema,\n            invoke: descriptor.value,\n            walletProvider: isWalletProvider\n        };\n        existingMetadata.set(propertyKey, metaData);\n        Reflect.defineMetadata(exports.ACTION_DECORATOR_KEY, existingMetadata, target.constructor);\n        return target;\n    };\n}\n/**\n * Validates the arguments of an action method\n *\n * @param target - The target object\n * @param propertyKey - The property key\n * @returns An object containing the wallet provider flag\n */ function validateActionMethodArguments(target, propertyKey) {\n    const className = target instanceof Object ? target.constructor.name : undefined;\n    const params = Reflect.getMetadata(\"design:paramtypes\", target, propertyKey);\n    if (params == null) {\n        throw new Error(`Failed to get parameters for action method ${propertyKey} on class ${className}`);\n    }\n    if (params.length > 2) {\n        throw new Error(`Action method ${propertyKey} on class ${className} has more than 2 parameters`);\n    }\n    const walletProviderParam = params.find((param)=>{\n        if (!param || !param.prototype) {\n            return false;\n        }\n        if (param === wallet_providers_1.WalletProvider) return true;\n        return param.prototype instanceof wallet_providers_1.WalletProvider;\n    });\n    return {\n        isWalletProvider: !!walletProviderParam\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2FjdGlvbkRlY29yYXRvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsNEJBQTRCLEdBQUcsS0FBSztBQUNwQ0Esb0JBQW9CLEdBQUdHO0FBQ3ZCLE1BQU1DLHFCQUFxQkMsbUJBQU9BLENBQUMsZ0ZBQXFCO0FBQ3hELE1BQU1DLGNBQWNELG1CQUFPQSxDQUFDLGtFQUFjO0FBQzFDQSxtQkFBT0EsQ0FBQyxpRkFBa0I7QUFDMUI7O0NBRUMsR0FDREwsNEJBQTRCLEdBQUdPLE9BQU87QUFDdEM7Ozs7Ozs7Ozs7Ozs7OztDQWVDLEdBQ0QsU0FBU0osYUFBYUssTUFBTTtJQUN4QixPQUFPLENBQUNDLFFBQVFDLGFBQWFDO1FBQ3pCLE1BQU1DLHFCQUFxQixDQUFDLEVBQUVILE9BQU9JLFdBQVcsQ0FBQ0MsSUFBSSxDQUFDLENBQUMsRUFBRU4sT0FBT00sSUFBSSxDQUFDLENBQUM7UUFDdEUsTUFBTUMsaUJBQWlCSixXQUFXVixLQUFLO1FBQ3ZDLE1BQU0sRUFBRWUsZ0JBQWdCLEVBQUUsR0FBR0MsOEJBQThCUixRQUFRQztRQUNuRSw4REFBOEQ7UUFDOURDLFdBQVdWLEtBQUssR0FBRyxTQUFVLEdBQUdpQixJQUFJO1lBQ2hDLElBQUlDLGdCQUFnQixDQUFDO1lBQ3JCLElBQUlILGtCQUFrQjtnQkFDbEJHLGdCQUFnQjtvQkFDWkMsaUJBQWlCRixJQUFJLENBQUMsRUFBRSxDQUFDRyxPQUFPO29CQUNoQ0MsZ0JBQWdCSixJQUFJLENBQUMsRUFBRSxDQUFDSyxVQUFVO29CQUNsQ0MsWUFBWU4sSUFBSSxDQUFDLEVBQUUsQ0FBQ08sVUFBVSxHQUFHQyxTQUFTO29CQUMxQ0MsVUFBVVQsSUFBSSxDQUFDLEVBQUUsQ0FBQ08sVUFBVSxHQUFHRyxPQUFPO29CQUN0Q0MsaUJBQWlCWCxJQUFJLENBQUMsRUFBRSxDQUFDTyxVQUFVLEdBQUdLLGNBQWM7Z0JBQ3hEO1lBQ0o7WUFDQyxJQUFHeEIsWUFBWXlCLGtCQUFrQixFQUFFO2dCQUNoQ2pCLE1BQU07Z0JBQ05rQixRQUFRO2dCQUNSQyxXQUFXO2dCQUNYQyxhQUFhdEI7Z0JBQ2J1QixZQUFZMUIsT0FBT0ksV0FBVyxDQUFDQyxJQUFJO2dCQUNuQ3NCLGFBQWExQjtnQkFDYixHQUFHUyxhQUFhO1lBQ3BCO1lBQ0EsT0FBT0osZUFBZXNCLEtBQUssQ0FBQyxJQUFJLEVBQUVuQjtRQUN0QztRQUNBLE1BQU1vQixtQkFBbUJDLFFBQVFDLFdBQVcsQ0FBQ3hDLFFBQVFFLG9CQUFvQixFQUFFTyxPQUFPSSxXQUFXLEtBQUssSUFBSTRCO1FBQ3RHLE1BQU1DLFdBQVc7WUFDYjVCLE1BQU1GO1lBQ04rQixhQUFhbkMsT0FBT21DLFdBQVc7WUFDL0JDLFFBQVFwQyxPQUFPb0MsTUFBTTtZQUNyQkMsUUFBUWxDLFdBQVdWLEtBQUs7WUFDeEI2QyxnQkFBZ0I5QjtRQUNwQjtRQUNBc0IsaUJBQWlCUyxHQUFHLENBQUNyQyxhQUFhZ0M7UUFDbENILFFBQVFTLGNBQWMsQ0FBQ2hELFFBQVFFLG9CQUFvQixFQUFFb0Msa0JBQWtCN0IsT0FBT0ksV0FBVztRQUN6RixPQUFPSjtJQUNYO0FBQ0o7QUFDQTs7Ozs7O0NBTUMsR0FDRCxTQUFTUSw4QkFBOEJSLE1BQU0sRUFBRUMsV0FBVztJQUN0RCxNQUFNdUMsWUFBWXhDLGtCQUFrQlgsU0FBU1csT0FBT0ksV0FBVyxDQUFDQyxJQUFJLEdBQUdvQztJQUN2RSxNQUFNMUMsU0FBUytCLFFBQVFDLFdBQVcsQ0FBQyxxQkFBcUIvQixRQUFRQztJQUNoRSxJQUFJRixVQUFVLE1BQU07UUFDaEIsTUFBTSxJQUFJMkMsTUFBTSxDQUFDLDJDQUEyQyxFQUFFekMsWUFBWSxVQUFVLEVBQUV1QyxVQUFVLENBQUM7SUFDckc7SUFDQSxJQUFJekMsT0FBTzRDLE1BQU0sR0FBRyxHQUFHO1FBQ25CLE1BQU0sSUFBSUQsTUFBTSxDQUFDLGNBQWMsRUFBRXpDLFlBQVksVUFBVSxFQUFFdUMsVUFBVSwyQkFBMkIsQ0FBQztJQUNuRztJQUNBLE1BQU1JLHNCQUFzQjdDLE9BQU84QyxJQUFJLENBQUNDLENBQUFBO1FBQ3BDLElBQUksQ0FBQ0EsU0FBUyxDQUFDQSxNQUFNQyxTQUFTLEVBQUU7WUFDNUIsT0FBTztRQUNYO1FBQ0EsSUFBSUQsVUFBVW5ELG1CQUFtQnFELGNBQWMsRUFDM0MsT0FBTztRQUNYLE9BQU9GLE1BQU1DLFNBQVMsWUFBWXBELG1CQUFtQnFELGNBQWM7SUFDdkU7SUFDQSxPQUFPO1FBQ0h6QyxrQkFBa0IsQ0FBQyxDQUFDcUM7SUFDeEI7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L2FjdGlvbi1wcm92aWRlcnMvYWN0aW9uRGVjb3JhdG9yLmpzPzUwNzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFDVElPTl9ERUNPUkFUT1JfS0VZID0gdm9pZCAwO1xuZXhwb3J0cy5DcmVhdGVBY3Rpb24gPSBDcmVhdGVBY3Rpb247XG5jb25zdCB3YWxsZXRfcHJvdmlkZXJzXzEgPSByZXF1aXJlKFwiLi4vd2FsbGV0LXByb3ZpZGVyc1wiKTtcbmNvbnN0IGFuYWx5dGljc18xID0gcmVxdWlyZShcIi4uL2FuYWx5dGljc1wiKTtcbnJlcXVpcmUoXCJyZWZsZWN0LW1ldGFkYXRhXCIpO1xuLyoqXG4gKiBNZXRhZGF0YSBrZXkgZm9yIHRoZSBhY3Rpb24gZGVjb3JhdG9yXG4gKi9cbmV4cG9ydHMuQUNUSU9OX0RFQ09SQVRPUl9LRVkgPSBTeW1ib2woXCJhZ2VudGtpdDphY3Rpb25cIik7XG4vKipcbiAqIERlY29yYXRvciB0byBlbWJlZCBtZXRhZGF0YSBvbiBjbGFzcyBtZXRob2RzIHRvIGluZGljYXRlIHRoZXkgYXJlIGFjdGlvbnMgYWNjZXNzaWJsZSB0byB0aGUgYWdlbnRcbiAqXG4gKiBAcGFyYW0gcGFyYW1zIC0gVGhlIHBhcmFtZXRlcnMgZm9yIHRoZSBhY3Rpb24gZGVjb3JhdG9yXG4gKiBAcmV0dXJucyBBIGRlY29yYXRvciBmdW5jdGlvblxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBjbGFzcyBNeUFjdGlvblByb3ZpZGVyIGV4dGVuZHMgQWN0aW9uUHJvdmlkZXIge1xuICogICBAQ3JlYXRlQWN0aW9uKHsgbmFtZTogXCJteV9hY3Rpb25cIiwgZGVzY3JpcHRpb246IFwiTXkgYWN0aW9uXCIsIHNjaGVtYTogbXlBY3Rpb25TY2hlbWEgfSlcbiAqICAgcHVibGljIG15QWN0aW9uKGFyZ3M6IHouaW5mZXI8dHlwZW9mIG15QWN0aW9uU2NoZW1hPikge1xuICogICAgIC8vIC4uLlxuICogICB9XG4gKiB9XG4gKiBgYGBcbiAqL1xuZnVuY3Rpb24gQ3JlYXRlQWN0aW9uKHBhcmFtcykge1xuICAgIHJldHVybiAodGFyZ2V0LCBwcm9wZXJ0eUtleSwgZGVzY3JpcHRvcikgPT4ge1xuICAgICAgICBjb25zdCBwcmVmaXhlZEFjdGlvbk5hbWUgPSBgJHt0YXJnZXQuY29uc3RydWN0b3IubmFtZX1fJHtwYXJhbXMubmFtZX1gO1xuICAgICAgICBjb25zdCBvcmlnaW5hbE1ldGhvZCA9IGRlc2NyaXB0b3IudmFsdWU7XG4gICAgICAgIGNvbnN0IHsgaXNXYWxsZXRQcm92aWRlciB9ID0gdmFsaWRhdGVBY3Rpb25NZXRob2RBcmd1bWVudHModGFyZ2V0LCBwcm9wZXJ0eUtleSk7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgICAgIGRlc2NyaXB0b3IudmFsdWUgPSBmdW5jdGlvbiAoLi4uYXJncykge1xuICAgICAgICAgICAgbGV0IHdhbGxldE1ldHJpY3MgPSB7fTtcbiAgICAgICAgICAgIGlmIChpc1dhbGxldFByb3ZpZGVyKSB7XG4gICAgICAgICAgICAgICAgd2FsbGV0TWV0cmljcyA9IHtcbiAgICAgICAgICAgICAgICAgICAgd2FsbGV0X3Byb3ZpZGVyOiBhcmdzWzBdLmdldE5hbWUoKSxcbiAgICAgICAgICAgICAgICAgICAgd2FsbGV0X2FkZHJlc3M6IGFyZ3NbMF0uZ2V0QWRkcmVzcygpLFxuICAgICAgICAgICAgICAgICAgICBuZXR3b3JrX2lkOiBhcmdzWzBdLmdldE5ldHdvcmsoKS5uZXR3b3JrSWQsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluX2lkOiBhcmdzWzBdLmdldE5ldHdvcmsoKS5jaGFpbklkLFxuICAgICAgICAgICAgICAgICAgICBwcm90b2NvbF9mYW1pbHk6IGFyZ3NbMF0uZ2V0TmV0d29yaygpLnByb3RvY29sRmFtaWx5LFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAoMCwgYW5hbHl0aWNzXzEuc2VuZEFuYWx5dGljc0V2ZW50KSh7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJhZ2VudF9hY3Rpb25faW52b2NhdGlvblwiLFxuICAgICAgICAgICAgICAgIGFjdGlvbjogXCJpbnZva2VfYWN0aW9uXCIsXG4gICAgICAgICAgICAgICAgY29tcG9uZW50OiBcImFnZW50X2FjdGlvblwiLFxuICAgICAgICAgICAgICAgIGFjdGlvbl9uYW1lOiBwcmVmaXhlZEFjdGlvbk5hbWUsXG4gICAgICAgICAgICAgICAgY2xhc3NfbmFtZTogdGFyZ2V0LmNvbnN0cnVjdG9yLm5hbWUsXG4gICAgICAgICAgICAgICAgbWV0aG9kX25hbWU6IHByb3BlcnR5S2V5LFxuICAgICAgICAgICAgICAgIC4uLndhbGxldE1ldHJpY3MsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbE1ldGhvZC5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgZXhpc3RpbmdNZXRhZGF0YSA9IFJlZmxlY3QuZ2V0TWV0YWRhdGEoZXhwb3J0cy5BQ1RJT05fREVDT1JBVE9SX0tFWSwgdGFyZ2V0LmNvbnN0cnVjdG9yKSB8fCBuZXcgTWFwKCk7XG4gICAgICAgIGNvbnN0IG1ldGFEYXRhID0ge1xuICAgICAgICAgICAgbmFtZTogcHJlZml4ZWRBY3Rpb25OYW1lLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IHBhcmFtcy5kZXNjcmlwdGlvbixcbiAgICAgICAgICAgIHNjaGVtYTogcGFyYW1zLnNjaGVtYSxcbiAgICAgICAgICAgIGludm9rZTogZGVzY3JpcHRvci52YWx1ZSxcbiAgICAgICAgICAgIHdhbGxldFByb3ZpZGVyOiBpc1dhbGxldFByb3ZpZGVyLFxuICAgICAgICB9O1xuICAgICAgICBleGlzdGluZ01ldGFkYXRhLnNldChwcm9wZXJ0eUtleSwgbWV0YURhdGEpO1xuICAgICAgICBSZWZsZWN0LmRlZmluZU1ldGFkYXRhKGV4cG9ydHMuQUNUSU9OX0RFQ09SQVRPUl9LRVksIGV4aXN0aW5nTWV0YWRhdGEsIHRhcmdldC5jb25zdHJ1Y3Rvcik7XG4gICAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgfTtcbn1cbi8qKlxuICogVmFsaWRhdGVzIHRoZSBhcmd1bWVudHMgb2YgYW4gYWN0aW9uIG1ldGhvZFxuICpcbiAqIEBwYXJhbSB0YXJnZXQgLSBUaGUgdGFyZ2V0IG9iamVjdFxuICogQHBhcmFtIHByb3BlcnR5S2V5IC0gVGhlIHByb3BlcnR5IGtleVxuICogQHJldHVybnMgQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIHdhbGxldCBwcm92aWRlciBmbGFnXG4gKi9cbmZ1bmN0aW9uIHZhbGlkYXRlQWN0aW9uTWV0aG9kQXJndW1lbnRzKHRhcmdldCwgcHJvcGVydHlLZXkpIHtcbiAgICBjb25zdCBjbGFzc05hbWUgPSB0YXJnZXQgaW5zdGFuY2VvZiBPYmplY3QgPyB0YXJnZXQuY29uc3RydWN0b3IubmFtZSA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCBwYXJhbXMgPSBSZWZsZWN0LmdldE1ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgdGFyZ2V0LCBwcm9wZXJ0eUtleSk7XG4gICAgaWYgKHBhcmFtcyA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGdldCBwYXJhbWV0ZXJzIGZvciBhY3Rpb24gbWV0aG9kICR7cHJvcGVydHlLZXl9IG9uIGNsYXNzICR7Y2xhc3NOYW1lfWApO1xuICAgIH1cbiAgICBpZiAocGFyYW1zLmxlbmd0aCA+IDIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBBY3Rpb24gbWV0aG9kICR7cHJvcGVydHlLZXl9IG9uIGNsYXNzICR7Y2xhc3NOYW1lfSBoYXMgbW9yZSB0aGFuIDIgcGFyYW1ldGVyc2ApO1xuICAgIH1cbiAgICBjb25zdCB3YWxsZXRQcm92aWRlclBhcmFtID0gcGFyYW1zLmZpbmQocGFyYW0gPT4ge1xuICAgICAgICBpZiAoIXBhcmFtIHx8ICFwYXJhbS5wcm90b3R5cGUpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocGFyYW0gPT09IHdhbGxldF9wcm92aWRlcnNfMS5XYWxsZXRQcm92aWRlcilcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICByZXR1cm4gcGFyYW0ucHJvdG90eXBlIGluc3RhbmNlb2Ygd2FsbGV0X3Byb3ZpZGVyc18xLldhbGxldFByb3ZpZGVyO1xuICAgIH0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIGlzV2FsbGV0UHJvdmlkZXI6ICEhd2FsbGV0UHJvdmlkZXJQYXJhbSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQUNUSU9OX0RFQ09SQVRPUl9LRVkiLCJDcmVhdGVBY3Rpb24iLCJ3YWxsZXRfcHJvdmlkZXJzXzEiLCJyZXF1aXJlIiwiYW5hbHl0aWNzXzEiLCJTeW1ib2wiLCJwYXJhbXMiLCJ0YXJnZXQiLCJwcm9wZXJ0eUtleSIsImRlc2NyaXB0b3IiLCJwcmVmaXhlZEFjdGlvbk5hbWUiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJvcmlnaW5hbE1ldGhvZCIsImlzV2FsbGV0UHJvdmlkZXIiLCJ2YWxpZGF0ZUFjdGlvbk1ldGhvZEFyZ3VtZW50cyIsImFyZ3MiLCJ3YWxsZXRNZXRyaWNzIiwid2FsbGV0X3Byb3ZpZGVyIiwiZ2V0TmFtZSIsIndhbGxldF9hZGRyZXNzIiwiZ2V0QWRkcmVzcyIsIm5ldHdvcmtfaWQiLCJnZXROZXR3b3JrIiwibmV0d29ya0lkIiwiY2hhaW5faWQiLCJjaGFpbklkIiwicHJvdG9jb2xfZmFtaWx5IiwicHJvdG9jb2xGYW1pbHkiLCJzZW5kQW5hbHl0aWNzRXZlbnQiLCJhY3Rpb24iLCJjb21wb25lbnQiLCJhY3Rpb25fbmFtZSIsImNsYXNzX25hbWUiLCJtZXRob2RfbmFtZSIsImFwcGx5IiwiZXhpc3RpbmdNZXRhZGF0YSIsIlJlZmxlY3QiLCJnZXRNZXRhZGF0YSIsIk1hcCIsIm1ldGFEYXRhIiwiZGVzY3JpcHRpb24iLCJzY2hlbWEiLCJpbnZva2UiLCJ3YWxsZXRQcm92aWRlciIsInNldCIsImRlZmluZU1ldGFkYXRhIiwiY2xhc3NOYW1lIiwidW5kZWZpbmVkIiwiRXJyb3IiLCJsZW5ndGgiLCJ3YWxsZXRQcm92aWRlclBhcmFtIiwiZmluZCIsInBhcmFtIiwicHJvdG90eXBlIiwiV2FsbGV0UHJvdmlkZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/actionDecorator.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/actionProvider.js":
/*!**************************************************************!*\
  !*** ../../agentkit/dist/action-providers/actionProvider.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ActionProvider = void 0;\nconst actionDecorator_1 = __webpack_require__(/*! ./actionDecorator */ \"(rsc)/../../agentkit/dist/action-providers/actionDecorator.js\");\n/**\n * ActionProvider is the abstract base class for all action providers.\n *\n * @abstract\n */ class ActionProvider {\n    /**\n     * The constructor for the action provider.\n     *\n     * @param name - The name of the action provider.\n     * @param actionProviders - The action providers to combine.\n     */ constructor(name, // Update parameter type to match property type\n    actionProviders){\n        this.name = name;\n        this.actionProviders = actionProviders;\n    }\n    /**\n     * Gets the actions of the action provider bound to the given wallet provider.\n     *\n     * @param walletProvider - The wallet provider.\n     * @returns The actions of the action provider.\n     */ getActions(walletProvider) {\n        const actions = [];\n        const actionProviders = [\n            this,\n            ...this.actionProviders\n        ];\n        for (const actionProvider of actionProviders){\n            const actionsMetadataMap = Reflect.getMetadata(actionDecorator_1.ACTION_DECORATOR_KEY, actionProvider.constructor);\n            if (!actionsMetadataMap) {\n                if (!(actionProvider instanceof ActionProvider)) {\n                    console.warn(`Warning: ${actionProvider} is not an instance of ActionProvider.`);\n                } else {\n                    console.warn(`Warning: ${actionProvider} has no actions.`);\n                }\n                continue;\n            }\n            for (const actionMetadata of actionsMetadataMap.values()){\n                actions.push({\n                    name: actionMetadata.name,\n                    description: actionMetadata.description,\n                    schema: actionMetadata.schema,\n                    invoke: (schemaArgs)=>{\n                        const args = [];\n                        if (actionMetadata.walletProvider) {\n                            args[0] = walletProvider;\n                        }\n                        args.push(schemaArgs);\n                        return actionMetadata.invoke.apply(actionProvider, args);\n                    }\n                });\n            }\n        }\n        return actions;\n    }\n}\nexports.ActionProvider = ActionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2FjdGlvblByb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxzQkFBc0IsR0FBRyxLQUFLO0FBQzlCLE1BQU1HLG9CQUFvQkMsbUJBQU9BLENBQUMsd0ZBQW1CO0FBQ3JEOzs7O0NBSUMsR0FDRCxNQUFNRjtJQUNGOzs7OztLQUtDLEdBQ0RHLFlBQVlDLElBQUksRUFDaEIsK0NBQStDO0lBQy9DQyxlQUFlLENBQUU7UUFDYixJQUFJLENBQUNELElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNDLGVBQWUsR0FBR0E7SUFDM0I7SUFDQTs7Ozs7S0FLQyxHQUNEQyxXQUFXQyxjQUFjLEVBQUU7UUFDdkIsTUFBTUMsVUFBVSxFQUFFO1FBQ2xCLE1BQU1ILGtCQUFrQjtZQUFDLElBQUk7ZUFBSyxJQUFJLENBQUNBLGVBQWU7U0FBQztRQUN2RCxLQUFLLE1BQU1JLGtCQUFrQkosZ0JBQWlCO1lBQzFDLE1BQU1LLHFCQUFxQkMsUUFBUUMsV0FBVyxDQUFDWCxrQkFBa0JZLG9CQUFvQixFQUFFSixlQUFlTixXQUFXO1lBQ2pILElBQUksQ0FBQ08sb0JBQW9CO2dCQUNyQixJQUFJLENBQUVELENBQUFBLDBCQUEwQlQsY0FBYSxHQUFJO29CQUM3Q2MsUUFBUUMsSUFBSSxDQUFDLENBQUMsU0FBUyxFQUFFTixlQUFlLHNDQUFzQyxDQUFDO2dCQUNuRixPQUNLO29CQUNESyxRQUFRQyxJQUFJLENBQUMsQ0FBQyxTQUFTLEVBQUVOLGVBQWUsZ0JBQWdCLENBQUM7Z0JBQzdEO2dCQUNBO1lBQ0o7WUFDQSxLQUFLLE1BQU1PLGtCQUFrQk4sbUJBQW1CTyxNQUFNLEdBQUk7Z0JBQ3REVCxRQUFRVSxJQUFJLENBQUM7b0JBQ1RkLE1BQU1ZLGVBQWVaLElBQUk7b0JBQ3pCZSxhQUFhSCxlQUFlRyxXQUFXO29CQUN2Q0MsUUFBUUosZUFBZUksTUFBTTtvQkFDN0JDLFFBQVFDLENBQUFBO3dCQUNKLE1BQU1DLE9BQU8sRUFBRTt3QkFDZixJQUFJUCxlQUFlVCxjQUFjLEVBQUU7NEJBQy9CZ0IsSUFBSSxDQUFDLEVBQUUsR0FBR2hCO3dCQUNkO3dCQUNBZ0IsS0FBS0wsSUFBSSxDQUFDSTt3QkFDVixPQUFPTixlQUFlSyxNQUFNLENBQUNHLEtBQUssQ0FBQ2YsZ0JBQWdCYztvQkFDdkQ7Z0JBQ0o7WUFDSjtRQUNKO1FBQ0EsT0FBT2Y7SUFDWDtBQUNKO0FBQ0FWLHNCQUFzQixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L2FjdGlvbi1wcm92aWRlcnMvYWN0aW9uUHJvdmlkZXIuanM/MTU3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWN0aW9uUHJvdmlkZXIgPSB2b2lkIDA7XG5jb25zdCBhY3Rpb25EZWNvcmF0b3JfMSA9IHJlcXVpcmUoXCIuL2FjdGlvbkRlY29yYXRvclwiKTtcbi8qKlxuICogQWN0aW9uUHJvdmlkZXIgaXMgdGhlIGFic3RyYWN0IGJhc2UgY2xhc3MgZm9yIGFsbCBhY3Rpb24gcHJvdmlkZXJzLlxuICpcbiAqIEBhYnN0cmFjdFxuICovXG5jbGFzcyBBY3Rpb25Qcm92aWRlciB7XG4gICAgLyoqXG4gICAgICogVGhlIGNvbnN0cnVjdG9yIGZvciB0aGUgYWN0aW9uIHByb3ZpZGVyLlxuICAgICAqXG4gICAgICogQHBhcmFtIG5hbWUgLSBUaGUgbmFtZSBvZiB0aGUgYWN0aW9uIHByb3ZpZGVyLlxuICAgICAqIEBwYXJhbSBhY3Rpb25Qcm92aWRlcnMgLSBUaGUgYWN0aW9uIHByb3ZpZGVycyB0byBjb21iaW5lLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIFxuICAgIC8vIFVwZGF0ZSBwYXJhbWV0ZXIgdHlwZSB0byBtYXRjaCBwcm9wZXJ0eSB0eXBlXG4gICAgYWN0aW9uUHJvdmlkZXJzKSB7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuYWN0aW9uUHJvdmlkZXJzID0gYWN0aW9uUHJvdmlkZXJzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBhY3Rpb25zIG9mIHRoZSBhY3Rpb24gcHJvdmlkZXIgYm91bmQgdG8gdGhlIGdpdmVuIHdhbGxldCBwcm92aWRlci5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB3YWxsZXRQcm92aWRlciAtIFRoZSB3YWxsZXQgcHJvdmlkZXIuXG4gICAgICogQHJldHVybnMgVGhlIGFjdGlvbnMgb2YgdGhlIGFjdGlvbiBwcm92aWRlci5cbiAgICAgKi9cbiAgICBnZXRBY3Rpb25zKHdhbGxldFByb3ZpZGVyKSB7XG4gICAgICAgIGNvbnN0IGFjdGlvbnMgPSBbXTtcbiAgICAgICAgY29uc3QgYWN0aW9uUHJvdmlkZXJzID0gW3RoaXMsIC4uLnRoaXMuYWN0aW9uUHJvdmlkZXJzXTtcbiAgICAgICAgZm9yIChjb25zdCBhY3Rpb25Qcm92aWRlciBvZiBhY3Rpb25Qcm92aWRlcnMpIHtcbiAgICAgICAgICAgIGNvbnN0IGFjdGlvbnNNZXRhZGF0YU1hcCA9IFJlZmxlY3QuZ2V0TWV0YWRhdGEoYWN0aW9uRGVjb3JhdG9yXzEuQUNUSU9OX0RFQ09SQVRPUl9LRVksIGFjdGlvblByb3ZpZGVyLmNvbnN0cnVjdG9yKTtcbiAgICAgICAgICAgIGlmICghYWN0aW9uc01ldGFkYXRhTWFwKSB7XG4gICAgICAgICAgICAgICAgaWYgKCEoYWN0aW9uUHJvdmlkZXIgaW5zdGFuY2VvZiBBY3Rpb25Qcm92aWRlcikpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBXYXJuaW5nOiAke2FjdGlvblByb3ZpZGVyfSBpcyBub3QgYW4gaW5zdGFuY2Ugb2YgQWN0aW9uUHJvdmlkZXIuYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oYFdhcm5pbmc6ICR7YWN0aW9uUHJvdmlkZXJ9IGhhcyBubyBhY3Rpb25zLmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoY29uc3QgYWN0aW9uTWV0YWRhdGEgb2YgYWN0aW9uc01ldGFkYXRhTWFwLnZhbHVlcygpKSB7XG4gICAgICAgICAgICAgICAgYWN0aW9ucy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogYWN0aW9uTWV0YWRhdGEubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IGFjdGlvbk1ldGFkYXRhLmRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgICAgICAgICBzY2hlbWE6IGFjdGlvbk1ldGFkYXRhLnNjaGVtYSxcbiAgICAgICAgICAgICAgICAgICAgaW52b2tlOiBzY2hlbWFBcmdzID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFyZ3MgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhY3Rpb25NZXRhZGF0YS53YWxsZXRQcm92aWRlcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3NbMF0gPSB3YWxsZXRQcm92aWRlcjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3MucHVzaChzY2hlbWFBcmdzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhY3Rpb25NZXRhZGF0YS5pbnZva2UuYXBwbHkoYWN0aW9uUHJvdmlkZXIsIGFyZ3MpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY3Rpb25zO1xuICAgIH1cbn1cbmV4cG9ydHMuQWN0aW9uUHJvdmlkZXIgPSBBY3Rpb25Qcm92aWRlcjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkFjdGlvblByb3ZpZGVyIiwiYWN0aW9uRGVjb3JhdG9yXzEiLCJyZXF1aXJlIiwiY29uc3RydWN0b3IiLCJuYW1lIiwiYWN0aW9uUHJvdmlkZXJzIiwiZ2V0QWN0aW9ucyIsIndhbGxldFByb3ZpZGVyIiwiYWN0aW9ucyIsImFjdGlvblByb3ZpZGVyIiwiYWN0aW9uc01ldGFkYXRhTWFwIiwiUmVmbGVjdCIsImdldE1ldGFkYXRhIiwiQUNUSU9OX0RFQ09SQVRPUl9LRVkiLCJjb25zb2xlIiwid2FybiIsImFjdGlvbk1ldGFkYXRhIiwidmFsdWVzIiwicHVzaCIsImRlc2NyaXB0aW9uIiwic2NoZW1hIiwiaW52b2tlIiwic2NoZW1hQXJncyIsImFyZ3MiLCJhcHBseSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/actionProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/alchemy/alchemyTokenPricesActionProvider.js":
/*!****************************************************************************************!*\
  !*** ../../agentkit/dist/action-providers/alchemy/alchemyTokenPricesActionProvider.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __decorate = (void 0) && (void 0).__decorate || function(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (void 0) && (void 0).__metadata || function(k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.alchemyTokenPricesActionProvider = exports.AlchemyTokenPricesActionProvider = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\nconst actionProvider_1 = __webpack_require__(/*! ../actionProvider */ \"(rsc)/../../agentkit/dist/action-providers/actionProvider.js\");\nconst actionDecorator_1 = __webpack_require__(/*! ../actionDecorator */ \"(rsc)/../../agentkit/dist/action-providers/actionDecorator.js\");\nconst schemas_1 = __webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/alchemy/schemas.js\");\n/**\n * AlchemyTokenPricesActionProvider is an action provider for fetching token prices via the Alchemy Prices API.\n * This provider enables querying current and historical token prices using symbols or addresses.\n *\n */ class AlchemyTokenPricesActionProvider extends actionProvider_1.ActionProvider {\n    /**\n     * Creates a new instance of AlchemyTokenPricesActionProvider\n     *\n     * @param config - Configuration options including the API key\n     */ constructor(config = {}){\n        super(\"alchemyTokenPrices\", []);\n        config.apiKey || (config.apiKey = process.env.ALCHEMY_API_KEY);\n        if (!config.apiKey) {\n            throw new Error(\"ALCHEMY_API_KEY is not configured.\");\n        }\n        this.apiKey = config.apiKey;\n        this.baseUrl = \"https://api.g.alchemy.com/prices/v1\";\n    }\n    /**\n     * Fetch current token prices for one or more token symbols.\n     *\n     * @param args - The arguments containing an array of token symbols.\n     * @returns A JSON string with the token prices or an error message.\n     */ async tokenPricesBySymbol(args) {\n        try {\n            // Build query parameters: for each symbol add a separate query parameter\n            const params = new URLSearchParams();\n            for (const symbol of args.symbols){\n                params.append(\"symbols\", symbol);\n            }\n            const url = `${this.baseUrl}/${this.apiKey}/tokens/by-symbol?${params.toString()}`;\n            const response = await fetch(url, {\n                method: \"GET\",\n                headers: {\n                    Accept: \"application/json\"\n                }\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            return `Successfully fetched token prices by symbol:\\n${JSON.stringify(data, null, 2)}`;\n        } catch (error) {\n            return `Error fetching token prices by symbol: ${error}`;\n        }\n    }\n    /**\n     * Fetch current token prices for one or more tokens identified by network and address pairs.\n     *\n     * @param args - The arguments containing an array of token network/address pairs.\n     * @returns A JSON string with the token prices or an error message.\n     */ async tokenPricesByAddress(args) {\n        try {\n            const url = `${this.baseUrl}/${this.apiKey}/tokens/by-address`;\n            const response = await fetch(url, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(args)\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            return `Successfully fetched token prices by address:\\n${JSON.stringify(data, null, 2)}`;\n        } catch (error) {\n            return `Error fetching token prices by address: ${error}`;\n        }\n    }\n    /**\n     * Checks if the Alchemy Prices action provider supports the given network.\n     * Since the API works with multiple networks, this always returns true.\n     *\n     * @returns Always returns true.\n     */ supportsNetwork() {\n        return true;\n    }\n}\nexports.AlchemyTokenPricesActionProvider = AlchemyTokenPricesActionProvider;\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"token_prices_by_symbol\",\n        description: `\nThis tool will fetch current prices for one or more tokens using their symbols via the Alchemy Prices API.\n\nA successful response will return a JSON payload similar to:\n{\n  \"data\": [\n    {\n      \"symbol\": \"ETH\",\n      \"prices\": [\n        {\n          \"currency\": \"usd\",\n          \"value\": \"2873.490923459\",\n          \"lastUpdatedAt\": \"2025-02-03T23:46:40Z\"\n        }\n      ]\n    }\n  ]\n}\n\nA failure response will return an error message with details.\n    `,\n        schema: schemas_1.AlchemyTokenPricesBySymbolSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], AlchemyTokenPricesActionProvider.prototype, \"tokenPricesBySymbol\", null);\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"token_prices_by_address\",\n        description: `\nThis tool will fetch current prices for tokens using network and address pairs via the Alchemy Prices API.\n\nA successful response will return a JSON payload similar to:\n{\n  \"data\": [\n    {\n      \"network\": \"eth-mainnet\",\n      \"address\": \"0xYourTokenAddress\",\n      \"prices\": [\n        {\n          \"currency\": \"usd\",\n          \"value\": \"1234.56\",\n          \"lastUpdatedAt\": \"2025-02-03T23:46:40Z\"\n        }\n      ]\n    }\n  ]\n}\n\nA failure response will return an error message with details.\n    `,\n        schema: schemas_1.AlchemyTokenPricesByAddressSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], AlchemyTokenPricesActionProvider.prototype, \"tokenPricesByAddress\", null);\n/**\n * Factory function to create a new AlchemyTokenPricesActionProvider instance.\n *\n * @param config - The configuration options for the provider.\n * @returns A new instance of AlchemyTokenPricesActionProvider.\n */ const alchemyTokenPricesActionProvider = (config)=>new AlchemyTokenPricesActionProvider(config);\nexports.alchemyTokenPricesActionProvider = alchemyTokenPricesActionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/alchemy/alchemyTokenPricesActionProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/alchemy/index.js":
/*!*************************************************************!*\
  !*** ../../agentkit/dist/action-providers/alchemy/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./alchemyTokenPricesActionProvider */ \"(rsc)/../../agentkit/dist/action-providers/alchemy/alchemyTokenPricesActionProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/alchemy/schemas.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2FsY2hlbXkvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQU1DLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQzFGLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCLElBQUlHLE9BQU9QLE9BQU9RLHdCQUF3QixDQUFDTCxHQUFHQztJQUM5QyxJQUFJLENBQUNHLFFBQVMsVUFBU0EsT0FBTyxDQUFDSixFQUFFTSxVQUFVLEdBQUdGLEtBQUtHLFFBQVEsSUFBSUgsS0FBS0ksWUFBWSxHQUFHO1FBQ2pGSixPQUFPO1lBQUVLLFlBQVk7WUFBTUMsS0FBSztnQkFBYSxPQUFPVixDQUFDLENBQUNDLEVBQUU7WUFBRTtRQUFFO0lBQzlEO0lBQ0FKLE9BQU9jLGNBQWMsQ0FBQ1osR0FBR0csSUFBSUU7QUFDakMsSUFBTSxTQUFTTCxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJVyxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVNaLENBQUMsRUFBRWEsUUFBTztJQUNqRSxJQUFLLElBQUlDLEtBQUtkLEVBQUcsSUFBSWMsTUFBTSxhQUFhLENBQUNqQixPQUFPa0IsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0osVUFBU0MsSUFBSWxCLGdCQUFnQmlCLFVBQVNiLEdBQUdjO0FBQzNIO0FBQ0FqQiw4Q0FBNkM7SUFBRXFCLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0ROLGFBQWFPLG1CQUFPQSxDQUFDLGtJQUFvQyxHQUFHTjtBQUM1REQsYUFBYU8sbUJBQU9BLENBQUMsZ0ZBQVcsR0FBR04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY29pbmJhc2UvY2RwLWxhbmdjaGFpbi1jaGF0Ym90LWV4YW1wbGUvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2FsY2hlbXkvaW5kZXguanM/N2NlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FsY2hlbXlUb2tlblByaWNlc0FjdGlvblByb3ZpZGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zY2hlbWFzXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6WyJfX2NyZWF0ZUJpbmRpbmciLCJPYmplY3QiLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlc2MiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfX2VzTW9kdWxlIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZGVmaW5lUHJvcGVydHkiLCJfX2V4cG9ydFN0YXIiLCJleHBvcnRzIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInZhbHVlIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/alchemy/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/alchemy/schemas.js":
/*!***************************************************************!*\
  !*** ../../agentkit/dist/action-providers/alchemy/schemas.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AlchemyTokenPricesByAddressSchema = exports.AlchemyTokenPricesBySymbolSchema = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\n/**\n * Input schema for fetching token prices by symbol.\n *\n * The API expects a list of token symbols.\n */ exports.AlchemyTokenPricesBySymbolSchema = zod_1.z.object({\n    symbols: zod_1.z.array(zod_1.z.string()).min(1, \"At least one token symbol is required. Example: ETH, BTC, SOL, etc.\").max(25, \"A maximum of 25 token symbols can be provided.\")\n}).describe(\"Input schema for fetching token prices by symbol from Alchemy\");\n/**\n * Input schema for fetching token prices by address.\n *\n * The API expects an object with an array of addresses, where each address contains\n * a network identifier and a token contract address.\n */ exports.AlchemyTokenPricesByAddressSchema = zod_1.z.object({\n    addresses: zod_1.z.array(zod_1.z.object({\n        network: zod_1.z.string().describe(\"Network identifier (e.g., eth-mainnet, base-mainnet etc.)\"),\n        address: zod_1.z.string().describe(\"Token contract address\")\n    })).min(1, \"At least one address is required.\").max(25, \"A maximum of 25 addresses can be provided.\")\n}).describe(\"Input schema for fetching token prices by address from Alchemy\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2FsY2hlbXkvc2NoZW1hcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQseUNBQXlDLEdBQUdBLHdDQUF3QyxHQUFHLEtBQUs7QUFDNUYsTUFBTUksUUFBUUMsbUJBQU9BLENBQUMseURBQUs7QUFDM0I7Ozs7Q0FJQyxHQUNETCx3Q0FBd0MsR0FBR0ksTUFBTUUsQ0FBQyxDQUM3Q0MsTUFBTSxDQUFDO0lBQ1JDLFNBQVNKLE1BQU1FLENBQUMsQ0FDWEcsS0FBSyxDQUFDTCxNQUFNRSxDQUFDLENBQUNJLE1BQU0sSUFDcEJDLEdBQUcsQ0FBQyxHQUFHLHVFQUNQQyxHQUFHLENBQUMsSUFBSTtBQUNqQixHQUNLQyxRQUFRLENBQUM7QUFDZDs7Ozs7Q0FLQyxHQUNEYix5Q0FBeUMsR0FBR0ksTUFBTUUsQ0FBQyxDQUM5Q0MsTUFBTSxDQUFDO0lBQ1JPLFdBQVdWLE1BQU1FLENBQUMsQ0FDYkcsS0FBSyxDQUFDTCxNQUFNRSxDQUFDLENBQUNDLE1BQU0sQ0FBQztRQUN0QlEsU0FBU1gsTUFBTUUsQ0FBQyxDQUFDSSxNQUFNLEdBQUdHLFFBQVEsQ0FBQztRQUNuQ0csU0FBU1osTUFBTUUsQ0FBQyxDQUFDSSxNQUFNLEdBQUdHLFFBQVEsQ0FBQztJQUN2QyxJQUNLRixHQUFHLENBQUMsR0FBRyxxQ0FDUEMsR0FBRyxDQUFDLElBQUk7QUFDakIsR0FDS0MsUUFBUSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNvaW5iYXNlL2NkcC1sYW5nY2hhaW4tY2hhdGJvdC1leGFtcGxlLy4uLy4uL2FnZW50a2l0L2Rpc3QvYWN0aW9uLXByb3ZpZGVycy9hbGNoZW15L3NjaGVtYXMuanM/MmEyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWxjaGVteVRva2VuUHJpY2VzQnlBZGRyZXNzU2NoZW1hID0gZXhwb3J0cy5BbGNoZW15VG9rZW5QcmljZXNCeVN5bWJvbFNjaGVtYSA9IHZvaWQgMDtcbmNvbnN0IHpvZF8xID0gcmVxdWlyZShcInpvZFwiKTtcbi8qKlxuICogSW5wdXQgc2NoZW1hIGZvciBmZXRjaGluZyB0b2tlbiBwcmljZXMgYnkgc3ltYm9sLlxuICpcbiAqIFRoZSBBUEkgZXhwZWN0cyBhIGxpc3Qgb2YgdG9rZW4gc3ltYm9scy5cbiAqL1xuZXhwb3J0cy5BbGNoZW15VG9rZW5QcmljZXNCeVN5bWJvbFNjaGVtYSA9IHpvZF8xLnpcbiAgICAub2JqZWN0KHtcbiAgICBzeW1ib2xzOiB6b2RfMS56XG4gICAgICAgIC5hcnJheSh6b2RfMS56LnN0cmluZygpKVxuICAgICAgICAubWluKDEsIFwiQXQgbGVhc3Qgb25lIHRva2VuIHN5bWJvbCBpcyByZXF1aXJlZC4gRXhhbXBsZTogRVRILCBCVEMsIFNPTCwgZXRjLlwiKVxuICAgICAgICAubWF4KDI1LCBcIkEgbWF4aW11bSBvZiAyNSB0b2tlbiBzeW1ib2xzIGNhbiBiZSBwcm92aWRlZC5cIiksXG59KVxuICAgIC5kZXNjcmliZShcIklucHV0IHNjaGVtYSBmb3IgZmV0Y2hpbmcgdG9rZW4gcHJpY2VzIGJ5IHN5bWJvbCBmcm9tIEFsY2hlbXlcIik7XG4vKipcbiAqIElucHV0IHNjaGVtYSBmb3IgZmV0Y2hpbmcgdG9rZW4gcHJpY2VzIGJ5IGFkZHJlc3MuXG4gKlxuICogVGhlIEFQSSBleHBlY3RzIGFuIG9iamVjdCB3aXRoIGFuIGFycmF5IG9mIGFkZHJlc3Nlcywgd2hlcmUgZWFjaCBhZGRyZXNzIGNvbnRhaW5zXG4gKiBhIG5ldHdvcmsgaWRlbnRpZmllciBhbmQgYSB0b2tlbiBjb250cmFjdCBhZGRyZXNzLlxuICovXG5leHBvcnRzLkFsY2hlbXlUb2tlblByaWNlc0J5QWRkcmVzc1NjaGVtYSA9IHpvZF8xLnpcbiAgICAub2JqZWN0KHtcbiAgICBhZGRyZXNzZXM6IHpvZF8xLnpcbiAgICAgICAgLmFycmF5KHpvZF8xLnoub2JqZWN0KHtcbiAgICAgICAgbmV0d29yazogem9kXzEuei5zdHJpbmcoKS5kZXNjcmliZShcIk5ldHdvcmsgaWRlbnRpZmllciAoZS5nLiwgZXRoLW1haW5uZXQsIGJhc2UtbWFpbm5ldCBldGMuKVwiKSxcbiAgICAgICAgYWRkcmVzczogem9kXzEuei5zdHJpbmcoKS5kZXNjcmliZShcIlRva2VuIGNvbnRyYWN0IGFkZHJlc3NcIiksXG4gICAgfSkpXG4gICAgICAgIC5taW4oMSwgXCJBdCBsZWFzdCBvbmUgYWRkcmVzcyBpcyByZXF1aXJlZC5cIilcbiAgICAgICAgLm1heCgyNSwgXCJBIG1heGltdW0gb2YgMjUgYWRkcmVzc2VzIGNhbiBiZSBwcm92aWRlZC5cIiksXG59KVxuICAgIC5kZXNjcmliZShcIklucHV0IHNjaGVtYSBmb3IgZmV0Y2hpbmcgdG9rZW4gcHJpY2VzIGJ5IGFkZHJlc3MgZnJvbSBBbGNoZW15XCIpO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQWxjaGVteVRva2VuUHJpY2VzQnlBZGRyZXNzU2NoZW1hIiwiQWxjaGVteVRva2VuUHJpY2VzQnlTeW1ib2xTY2hlbWEiLCJ6b2RfMSIsInJlcXVpcmUiLCJ6Iiwib2JqZWN0Iiwic3ltYm9scyIsImFycmF5Iiwic3RyaW5nIiwibWluIiwibWF4IiwiZGVzY3JpYmUiLCJhZGRyZXNzZXMiLCJuZXR3b3JrIiwiYWRkcmVzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/alchemy/schemas.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/basename/basenameActionProvider.js":
/*!*******************************************************************************!*\
  !*** ../../agentkit/dist/action-providers/basename/basenameActionProvider.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __decorate = (void 0) && (void 0).__decorate || function(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (void 0) && (void 0).__metadata || function(k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.basenameActionProvider = exports.BasenameActionProvider = void 0;\nconst viem_1 = __webpack_require__(/*! viem */ \"(rsc)/../../../node_modules/viem/_cjs/index.js\");\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\nconst actionProvider_1 = __webpack_require__(/*! ../actionProvider */ \"(rsc)/../../agentkit/dist/action-providers/actionProvider.js\");\nconst actionDecorator_1 = __webpack_require__(/*! ../actionDecorator */ \"(rsc)/../../agentkit/dist/action-providers/actionDecorator.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(rsc)/../../agentkit/dist/action-providers/basename/constants.js\");\nconst schemas_1 = __webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/basename/schemas.js\");\nconst wallet_providers_1 = __webpack_require__(/*! ../../wallet-providers */ \"(rsc)/../../agentkit/dist/wallet-providers/index.js\");\n/**\n * Action provider for registering Basenames.\n */ class BasenameActionProvider extends actionProvider_1.ActionProvider {\n    /**\n     * Constructs a new BasenameActionProvider.\n     */ constructor(){\n        super(\"basename\", []);\n        /**\n         * Checks if the Basename action provider supports the given network.\n         *\n         * @param network - The network to check.\n         * @returns True if the Basename action provider supports the network, false otherwise.\n         */ this.supportsNetwork = (network)=>network.networkId === \"base-mainnet\" || network.networkId === \"base-sepolia\";\n    }\n    /**\n     * Registers a Basename.\n     *\n     * @param wallet - The wallet to use for the registration.\n     * @param args - The arguments for the registration.\n     * @returns A string indicating the success or failure of the registration.\n     */ async register(wallet, args) {\n        const address = wallet.getAddress();\n        const isMainnet = wallet.getNetwork().networkId === \"base-mainnet\";\n        const suffix = isMainnet ? \".base.eth\" : \".basetest.eth\";\n        if (!args.basename.endsWith(suffix)) {\n            args.basename += suffix;\n        }\n        const l2ResolverAddress = isMainnet ? constants_1.L2_RESOLVER_ADDRESS_MAINNET : constants_1.L2_RESOLVER_ADDRESS_TESTNET;\n        const addressData = (0, viem_1.encodeFunctionData)({\n            abi: constants_1.L2_RESOLVER_ABI,\n            functionName: \"setAddr\",\n            args: [\n                (0, viem_1.namehash)(args.basename),\n                address\n            ]\n        });\n        const nameData = (0, viem_1.encodeFunctionData)({\n            abi: constants_1.L2_RESOLVER_ABI,\n            functionName: \"setName\",\n            args: [\n                (0, viem_1.namehash)(args.basename),\n                args.basename\n            ]\n        });\n        try {\n            const contractAddress = isMainnet ? constants_1.BASENAMES_REGISTRAR_CONTROLLER_ADDRESS_MAINNET : constants_1.BASENAMES_REGISTRAR_CONTROLLER_ADDRESS_TESTNET;\n            const hash = await wallet.sendTransaction({\n                to: contractAddress,\n                data: (0, viem_1.encodeFunctionData)({\n                    abi: constants_1.REGISTRAR_ABI,\n                    functionName: \"register\",\n                    args: [\n                        {\n                            name: args.basename.replace(suffix, \"\"),\n                            owner: address,\n                            duration: constants_1.REGISTRATION_DURATION,\n                            resolver: l2ResolverAddress,\n                            data: [\n                                addressData,\n                                nameData\n                            ],\n                            reverseRecord: true\n                        }\n                    ]\n                }),\n                value: (0, viem_1.parseEther)(args.amount)\n            });\n            await wallet.waitForTransactionReceipt(hash);\n            return `Successfully registered basename ${args.basename} for address ${address}`;\n        } catch (error) {\n            return `Error registering basename: Error: ${error}`;\n        }\n    }\n}\nexports.BasenameActionProvider = BasenameActionProvider;\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"register_basename\",\n        description: `\nThis tool will register a Basename for the agent. The agent should have a wallet associated to register a Basename.\nWhen your network ID is 'base-mainnet' (also sometimes known simply as 'base'), the name must end with .base.eth, and when your network ID is 'base-sepolia', it must ends with .basetest.eth.\nDo not suggest any alternatives and never try to register a Basename with another postfix. The prefix of the name must be unique so if the registration of the\nBasename fails, you should prompt to try again with a more unique name.\n`,\n        schema: schemas_1.RegisterBasenameSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.EvmWalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], BasenameActionProvider.prototype, \"register\", null);\nconst basenameActionProvider = ()=>new BasenameActionProvider();\nexports.basenameActionProvider = basenameActionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/basename/basenameActionProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/basename/constants.js":
/*!******************************************************************!*\
  !*** ../../agentkit/dist/action-providers/basename/constants.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.REGISTRAR_ABI = exports.L2_RESOLVER_ABI = exports.REGISTRATION_DURATION = exports.L2_RESOLVER_ADDRESS_TESTNET = exports.L2_RESOLVER_ADDRESS_MAINNET = exports.BASENAMES_REGISTRAR_CONTROLLER_ADDRESS_TESTNET = exports.BASENAMES_REGISTRAR_CONTROLLER_ADDRESS_MAINNET = void 0;\n// Contract addresses\nexports.BASENAMES_REGISTRAR_CONTROLLER_ADDRESS_MAINNET = \"0x4cCb0BB02FCABA27e82a56646E81d8c5bC4119a5\";\nexports.BASENAMES_REGISTRAR_CONTROLLER_ADDRESS_TESTNET = \"0x49aE3cC2e3AA768B1e5654f5D3C6002144A59581\";\nexports.L2_RESOLVER_ADDRESS_MAINNET = \"0xC6d566A56A1aFf6508b41f6c90ff131615583BCD\";\nexports.L2_RESOLVER_ADDRESS_TESTNET = \"0x6533C94869D28fAA8dF77cc63f9e2b2D6Cf77eBA\";\n// Default registration duration (1 year in seconds)\nexports.REGISTRATION_DURATION = 31557600n;\n// Relevant ABI for L2 Resolver Contract.\nexports.L2_RESOLVER_ABI = [\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"node\",\n                type: \"bytes32\"\n            },\n            {\n                internalType: \"address\",\n                name: \"a\",\n                type: \"address\"\n            }\n        ],\n        name: \"setAddr\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"node\",\n                type: \"bytes32\"\n            },\n            {\n                internalType: \"string\",\n                name: \"newName\",\n                type: \"string\"\n            }\n        ],\n        name: \"setName\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    }\n];\n// Relevant ABI for Basenames Registrar Controller Contract.\nexports.REGISTRAR_ABI = [\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"string\",\n                        name: \"name\",\n                        type: \"string\"\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"owner\",\n                        type: \"address\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"duration\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"resolver\",\n                        type: \"address\"\n                    },\n                    {\n                        internalType: \"bytes[]\",\n                        name: \"data\",\n                        type: \"bytes[]\"\n                    },\n                    {\n                        internalType: \"bool\",\n                        name: \"reverseRecord\",\n                        type: \"bool\"\n                    }\n                ],\n                internalType: \"struct RegistrarController.RegisterRequest\",\n                name: \"request\",\n                type: \"tuple\"\n            }\n        ],\n        name: \"register\",\n        outputs: [],\n        stateMutability: \"payable\",\n        type: \"function\"\n    }\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2Jhc2VuYW1lL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQscUJBQXFCLEdBQUdBLHVCQUF1QixHQUFHQSw2QkFBNkIsR0FBR0EsbUNBQW1DLEdBQUdBLG1DQUFtQyxHQUFHQSxzREFBc0QsR0FBR0Esc0RBQXNELEdBQUcsS0FBSztBQUNyUixxQkFBcUI7QUFDckJBLHNEQUFzRCxHQUFHO0FBQ3pEQSxzREFBc0QsR0FBRztBQUN6REEsbUNBQW1DLEdBQUc7QUFDdENBLG1DQUFtQyxHQUFHO0FBQ3RDLG9EQUFvRDtBQUNwREEsNkJBQTZCLEdBQUcsU0FBUztBQUN6Qyx5Q0FBeUM7QUFDekNBLHVCQUF1QixHQUFHO0lBQ3RCO1FBQ0lTLFFBQVE7WUFDSjtnQkFBRUMsY0FBYztnQkFBV0MsTUFBTTtnQkFBUUMsTUFBTTtZQUFVO1lBQ3pEO2dCQUFFRixjQUFjO2dCQUFXQyxNQUFNO2dCQUFLQyxNQUFNO1lBQVU7U0FDekQ7UUFDREQsTUFBTTtRQUNORSxTQUFTLEVBQUU7UUFDWEMsaUJBQWlCO1FBQ2pCRixNQUFNO0lBQ1Y7SUFDQTtRQUNJSCxRQUFRO1lBQ0o7Z0JBQUVDLGNBQWM7Z0JBQVdDLE1BQU07Z0JBQVFDLE1BQU07WUFBVTtZQUN6RDtnQkFBRUYsY0FBYztnQkFBVUMsTUFBTTtnQkFBV0MsTUFBTTtZQUFTO1NBQzdEO1FBQ0RELE1BQU07UUFDTkUsU0FBUyxFQUFFO1FBQ1hDLGlCQUFpQjtRQUNqQkYsTUFBTTtJQUNWO0NBQ0g7QUFDRCw0REFBNEQ7QUFDNURaLHFCQUFxQixHQUFHO0lBQ3BCO1FBQ0lTLFFBQVE7WUFDSjtnQkFDSU0sWUFBWTtvQkFDUjt3QkFDSUwsY0FBYzt3QkFDZEMsTUFBTTt3QkFDTkMsTUFBTTtvQkFDVjtvQkFDQTt3QkFDSUYsY0FBYzt3QkFDZEMsTUFBTTt3QkFDTkMsTUFBTTtvQkFDVjtvQkFDQTt3QkFDSUYsY0FBYzt3QkFDZEMsTUFBTTt3QkFDTkMsTUFBTTtvQkFDVjtvQkFDQTt3QkFDSUYsY0FBYzt3QkFDZEMsTUFBTTt3QkFDTkMsTUFBTTtvQkFDVjtvQkFDQTt3QkFDSUYsY0FBYzt3QkFDZEMsTUFBTTt3QkFDTkMsTUFBTTtvQkFDVjtvQkFDQTt3QkFDSUYsY0FBYzt3QkFDZEMsTUFBTTt3QkFDTkMsTUFBTTtvQkFDVjtpQkFDSDtnQkFDREYsY0FBYztnQkFDZEMsTUFBTTtnQkFDTkMsTUFBTTtZQUNWO1NBQ0g7UUFDREQsTUFBTTtRQUNORSxTQUFTLEVBQUU7UUFDWEMsaUJBQWlCO1FBQ2pCRixNQUFNO0lBQ1Y7Q0FDSCIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L2FjdGlvbi1wcm92aWRlcnMvYmFzZW5hbWUvY29uc3RhbnRzLmpzPzgyN2QiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJFR0lTVFJBUl9BQkkgPSBleHBvcnRzLkwyX1JFU09MVkVSX0FCSSA9IGV4cG9ydHMuUkVHSVNUUkFUSU9OX0RVUkFUSU9OID0gZXhwb3J0cy5MMl9SRVNPTFZFUl9BRERSRVNTX1RFU1RORVQgPSBleHBvcnRzLkwyX1JFU09MVkVSX0FERFJFU1NfTUFJTk5FVCA9IGV4cG9ydHMuQkFTRU5BTUVTX1JFR0lTVFJBUl9DT05UUk9MTEVSX0FERFJFU1NfVEVTVE5FVCA9IGV4cG9ydHMuQkFTRU5BTUVTX1JFR0lTVFJBUl9DT05UUk9MTEVSX0FERFJFU1NfTUFJTk5FVCA9IHZvaWQgMDtcbi8vIENvbnRyYWN0IGFkZHJlc3Nlc1xuZXhwb3J0cy5CQVNFTkFNRVNfUkVHSVNUUkFSX0NPTlRST0xMRVJfQUREUkVTU19NQUlOTkVUID0gXCIweDRjQ2IwQkIwMkZDQUJBMjdlODJhNTY2NDZFODFkOGM1YkM0MTE5YTVcIjtcbmV4cG9ydHMuQkFTRU5BTUVTX1JFR0lTVFJBUl9DT05UUk9MTEVSX0FERFJFU1NfVEVTVE5FVCA9IFwiMHg0OWFFM2NDMmUzQUE3NjhCMWU1NjU0ZjVEM0M2MDAyMTQ0QTU5NTgxXCI7XG5leHBvcnRzLkwyX1JFU09MVkVSX0FERFJFU1NfTUFJTk5FVCA9IFwiMHhDNmQ1NjZBNTZBMWFGZjY1MDhiNDFmNmM5MGZmMTMxNjE1NTgzQkNEXCI7XG5leHBvcnRzLkwyX1JFU09MVkVSX0FERFJFU1NfVEVTVE5FVCA9IFwiMHg2NTMzQzk0ODY5RDI4ZkFBOGRGNzdjYzYzZjllMmIyRDZDZjc3ZUJBXCI7XG4vLyBEZWZhdWx0IHJlZ2lzdHJhdGlvbiBkdXJhdGlvbiAoMSB5ZWFyIGluIHNlY29uZHMpXG5leHBvcnRzLlJFR0lTVFJBVElPTl9EVVJBVElPTiA9IDMxNTU3NjAwbjtcbi8vIFJlbGV2YW50IEFCSSBmb3IgTDIgUmVzb2x2ZXIgQ29udHJhY3QuXG5leHBvcnRzLkwyX1JFU09MVkVSX0FCSSA9IFtcbiAgICB7XG4gICAgICAgIGlucHV0czogW1xuICAgICAgICAgICAgeyBpbnRlcm5hbFR5cGU6IFwiYnl0ZXMzMlwiLCBuYW1lOiBcIm5vZGVcIiwgdHlwZTogXCJieXRlczMyXCIgfSxcbiAgICAgICAgICAgIHsgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIiwgbmFtZTogXCJhXCIsIHR5cGU6IFwiYWRkcmVzc1wiIH0sXG4gICAgICAgIF0sXG4gICAgICAgIG5hbWU6IFwic2V0QWRkclwiLFxuICAgICAgICBvdXRwdXRzOiBbXSxcbiAgICAgICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICAgICAgdHlwZTogXCJmdW5jdGlvblwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICBpbnB1dHM6IFtcbiAgICAgICAgICAgIHsgaW50ZXJuYWxUeXBlOiBcImJ5dGVzMzJcIiwgbmFtZTogXCJub2RlXCIsIHR5cGU6IFwiYnl0ZXMzMlwiIH0sXG4gICAgICAgICAgICB7IGludGVybmFsVHlwZTogXCJzdHJpbmdcIiwgbmFtZTogXCJuZXdOYW1lXCIsIHR5cGU6IFwic3RyaW5nXCIgfSxcbiAgICAgICAgXSxcbiAgICAgICAgbmFtZTogXCJzZXROYW1lXCIsXG4gICAgICAgIG91dHB1dHM6IFtdLFxuICAgICAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgICAgICB0eXBlOiBcImZ1bmN0aW9uXCIsXG4gICAgfSxcbl07XG4vLyBSZWxldmFudCBBQkkgZm9yIEJhc2VuYW1lcyBSZWdpc3RyYXIgQ29udHJvbGxlciBDb250cmFjdC5cbmV4cG9ydHMuUkVHSVNUUkFSX0FCSSA9IFtcbiAgICB7XG4gICAgICAgIGlucHV0czogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvbXBvbmVudHM6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW50ZXJuYWxUeXBlOiBcInN0cmluZ1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJuYW1lXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcInN0cmluZ1wiLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJvd25lclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcImR1cmF0aW9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwicmVzb2x2ZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXNbXVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJkYXRhXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImJ5dGVzW11cIixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJvb2xcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwicmV2ZXJzZVJlY29yZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJib29sXCIsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBpbnRlcm5hbFR5cGU6IFwic3RydWN0IFJlZ2lzdHJhckNvbnRyb2xsZXIuUmVnaXN0ZXJSZXF1ZXN0XCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJyZXF1ZXN0XCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJ0dXBsZVwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgICAgbmFtZTogXCJyZWdpc3RlclwiLFxuICAgICAgICBvdXRwdXRzOiBbXSxcbiAgICAgICAgc3RhdGVNdXRhYmlsaXR5OiBcInBheWFibGVcIixcbiAgICAgICAgdHlwZTogXCJmdW5jdGlvblwiLFxuICAgIH0sXG5dO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiUkVHSVNUUkFSX0FCSSIsIkwyX1JFU09MVkVSX0FCSSIsIlJFR0lTVFJBVElPTl9EVVJBVElPTiIsIkwyX1JFU09MVkVSX0FERFJFU1NfVEVTVE5FVCIsIkwyX1JFU09MVkVSX0FERFJFU1NfTUFJTk5FVCIsIkJBU0VOQU1FU19SRUdJU1RSQVJfQ09OVFJPTExFUl9BRERSRVNTX1RFU1RORVQiLCJCQVNFTkFNRVNfUkVHSVNUUkFSX0NPTlRST0xMRVJfQUREUkVTU19NQUlOTkVUIiwiaW5wdXRzIiwiaW50ZXJuYWxUeXBlIiwibmFtZSIsInR5cGUiLCJvdXRwdXRzIiwic3RhdGVNdXRhYmlsaXR5IiwiY29tcG9uZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/basename/constants.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/basename/index.js":
/*!**************************************************************!*\
  !*** ../../agentkit/dist/action-providers/basename/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./basenameActionProvider */ \"(rsc)/../../agentkit/dist/action-providers/basename/basenameActionProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/basename/schemas.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2Jhc2VuYW1lL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQixJQUFJRyxPQUFPUCxPQUFPUSx3QkFBd0IsQ0FBQ0wsR0FBR0M7SUFDOUMsSUFBSSxDQUFDRyxRQUFTLFVBQVNBLE9BQU8sQ0FBQ0osRUFBRU0sVUFBVSxHQUFHRixLQUFLRyxRQUFRLElBQUlILEtBQUtJLFlBQVksR0FBRztRQUNqRkosT0FBTztZQUFFSyxZQUFZO1lBQU1DLEtBQUs7Z0JBQWEsT0FBT1YsQ0FBQyxDQUFDQyxFQUFFO1lBQUU7UUFBRTtJQUM5RDtJQUNBSixPQUFPYyxjQUFjLENBQUNaLEdBQUdHLElBQUlFO0FBQ2pDLElBQU0sU0FBU0wsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSVcsZUFBZSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFlBQVksSUFBSyxTQUFTWixDQUFDLEVBQUVhLFFBQU87SUFDakUsSUFBSyxJQUFJQyxLQUFLZCxFQUFHLElBQUljLE1BQU0sYUFBYSxDQUFDakIsT0FBT2tCLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNKLFVBQVNDLElBQUlsQixnQkFBZ0JpQixVQUFTYixHQUFHYztBQUMzSDtBQUNBakIsOENBQTZDO0lBQUVxQixPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdETixhQUFhTyxtQkFBT0EsQ0FBQywrR0FBMEIsR0FBR047QUFDbERELGFBQWFPLG1CQUFPQSxDQUFDLGlGQUFXLEdBQUdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNvaW5iYXNlL2NkcC1sYW5nY2hhaW4tY2hhdGJvdC1leGFtcGxlLy4uLy4uL2FnZW50a2l0L2Rpc3QvYWN0aW9uLXByb3ZpZGVycy9iYXNlbmFtZS9pbmRleC5qcz82YTQzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYmFzZW5hbWVBY3Rpb25Qcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2NoZW1hc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19lc01vZHVsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsImRlZmluZVByb3BlcnR5IiwiX19leHBvcnRTdGFyIiwiZXhwb3J0cyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ2YWx1ZSIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/basename/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/basename/schemas.js":
/*!****************************************************************!*\
  !*** ../../agentkit/dist/action-providers/basename/schemas.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.RegisterBasenameSchema = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\n/**\n * Input schema for registering a Basename.\n */ exports.RegisterBasenameSchema = zod_1.z.object({\n    basename: zod_1.z.string().describe(\"The Basename to assign to the agent\"),\n    amount: zod_1.z.string().default(\"0.002\").describe(\"The amount of ETH to pay for registration\")\n}).strip().describe(\"Instructions for registering a Basename\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2Jhc2VuYW1lL3NjaGVtYXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDhCQUE4QixHQUFHLEtBQUs7QUFDdEMsTUFBTUcsUUFBUUMsbUJBQU9BLENBQUMseURBQUs7QUFDM0I7O0NBRUMsR0FDREosOEJBQThCLEdBQUdHLE1BQU1FLENBQUMsQ0FDbkNDLE1BQU0sQ0FBQztJQUNSQyxVQUFVSixNQUFNRSxDQUFDLENBQUNHLE1BQU0sR0FBR0MsUUFBUSxDQUFDO0lBQ3BDQyxRQUFRUCxNQUFNRSxDQUFDLENBQUNHLE1BQU0sR0FBR0csT0FBTyxDQUFDLFNBQVNGLFFBQVEsQ0FBQztBQUN2RCxHQUNLRyxLQUFLLEdBQ0xILFFBQVEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L2FjdGlvbi1wcm92aWRlcnMvYmFzZW5hbWUvc2NoZW1hcy5qcz8xNWU2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SZWdpc3RlckJhc2VuYW1lU2NoZW1hID0gdm9pZCAwO1xuY29uc3Qgem9kXzEgPSByZXF1aXJlKFwiem9kXCIpO1xuLyoqXG4gKiBJbnB1dCBzY2hlbWEgZm9yIHJlZ2lzdGVyaW5nIGEgQmFzZW5hbWUuXG4gKi9cbmV4cG9ydHMuUmVnaXN0ZXJCYXNlbmFtZVNjaGVtYSA9IHpvZF8xLnpcbiAgICAub2JqZWN0KHtcbiAgICBiYXNlbmFtZTogem9kXzEuei5zdHJpbmcoKS5kZXNjcmliZShcIlRoZSBCYXNlbmFtZSB0byBhc3NpZ24gdG8gdGhlIGFnZW50XCIpLFxuICAgIGFtb3VudDogem9kXzEuei5zdHJpbmcoKS5kZWZhdWx0KFwiMC4wMDJcIikuZGVzY3JpYmUoXCJUaGUgYW1vdW50IG9mIEVUSCB0byBwYXkgZm9yIHJlZ2lzdHJhdGlvblwiKSxcbn0pXG4gICAgLnN0cmlwKClcbiAgICAuZGVzY3JpYmUoXCJJbnN0cnVjdGlvbnMgZm9yIHJlZ2lzdGVyaW5nIGEgQmFzZW5hbWVcIik7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJSZWdpc3RlckJhc2VuYW1lU2NoZW1hIiwiem9kXzEiLCJyZXF1aXJlIiwieiIsIm9iamVjdCIsImJhc2VuYW1lIiwic3RyaW5nIiwiZGVzY3JpYmUiLCJhbW91bnQiLCJkZWZhdWx0Iiwic3RyaXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/basename/schemas.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/cdp/cdpApiActionProvider.js":
/*!************************************************************************!*\
  !*** ../../agentkit/dist/action-providers/cdp/cdpApiActionProvider.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __decorate = (void 0) && (void 0).__decorate || function(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (void 0) && (void 0).__metadata || function(k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.cdpApiActionProvider = exports.CdpApiActionProvider = void 0;\nconst package_json_1 = __webpack_require__(/*! ../../../package.json */ \"(rsc)/../../agentkit/package.json\");\nconst coinbase_sdk_1 = __webpack_require__(/*! @coinbase/coinbase-sdk */ \"(rsc)/../../agentkit/node_modules/@coinbase/coinbase-sdk/dist/index.js\");\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\nconst actionDecorator_1 = __webpack_require__(/*! ../actionDecorator */ \"(rsc)/../../agentkit/dist/action-providers/actionDecorator.js\");\nconst actionProvider_1 = __webpack_require__(/*! ../actionProvider */ \"(rsc)/../../agentkit/dist/action-providers/actionProvider.js\");\nconst wallet_providers_1 = __webpack_require__(/*! ../../wallet-providers */ \"(rsc)/../../agentkit/dist/wallet-providers/index.js\");\nconst schemas_1 = __webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/cdp/schemas.js\");\n/**\n * CdpApiActionProvider is an action provider for CDP API.\n *\n * This provider is used for any action that uses the CDP API, but does not require a CDP Wallet.\n */ class CdpApiActionProvider extends actionProvider_1.ActionProvider {\n    /**\n     * Constructor for the CdpApiActionProvider class.\n     *\n     * @param config - The configuration options for the CdpApiActionProvider.\n     */ constructor(config = {}){\n        super(\"cdp_api\", []);\n        /**\n         * Checks if the Cdp action provider supports the given network.\n         *\n         * @param _ - The network to check.\n         * @returns True if the Cdp action provider supports the network, false otherwise.\n         */ this.supportsNetwork = (_)=>true;\n        if (config.apiKeyName && config.apiKeyPrivateKey) {\n            coinbase_sdk_1.Coinbase.configure({\n                apiKeyName: config.apiKeyName,\n                privateKey: config.apiKeyPrivateKey,\n                source: \"agentkit\",\n                sourceVersion: package_json_1.version\n            });\n        } else {\n            coinbase_sdk_1.Coinbase.configureFromJson();\n        }\n    }\n    /**\n     * Check the reputation of an address.\n     *\n     * @param args - The input arguments for the action\n     * @returns A string containing reputation data or error message\n     */ async addressReputation(args) {\n        try {\n            const address = new coinbase_sdk_1.ExternalAddress(args.network, args.address);\n            const reputation = await address.reputation();\n            return reputation.toString();\n        } catch (error) {\n            return `Error checking address reputation: ${error}`;\n        }\n    }\n    /**\n     * Requests test tokens from the faucet for the default address in the wallet.\n     *\n     * @param walletProvider - The wallet provider to request funds from.\n     * @param args - The input arguments for the action.\n     * @returns A confirmation message with transaction details.\n     */ async faucet(walletProvider, args) {\n        try {\n            const address = new coinbase_sdk_1.ExternalAddress(walletProvider.getNetwork().networkId, walletProvider.getAddress());\n            const faucetTx = await address.faucet(args.assetId || undefined);\n            const result = await faucetTx.wait();\n            return `Received ${args.assetId || \"ETH\"} from the faucet. Transaction: ${result.getTransactionLink()}`;\n        } catch (error) {\n            return `Error requesting faucet funds: ${error}`;\n        }\n    }\n}\nexports.CdpApiActionProvider = CdpApiActionProvider;\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"address_reputation\",\n        description: `\nThis tool checks the reputation of an address on a given network. It takes:\n\n- network: The network to check the address on (e.g. \"base-mainnet\")\n- address: The Ethereum address to check\n`,\n        schema: schemas_1.AddressReputationSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], CdpApiActionProvider.prototype, \"addressReputation\", null);\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"request_faucet_funds\",\n        description: `This tool will request test tokens from the faucet for the default address in the wallet. It takes the wallet and asset ID as input.\nIf no asset ID is provided the faucet defaults to ETH. Faucet is only allowed on 'base-sepolia' and can only provide asset ID 'eth' or 'usdc'.\nYou are not allowed to faucet with any other network or asset ID. If you are on another network, suggest that the user sends you some ETH\nfrom another wallet and provide the user with your wallet details.`,\n        schema: schemas_1.RequestFaucetFundsSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.EvmWalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], CdpApiActionProvider.prototype, \"faucet\", null);\nconst cdpApiActionProvider = (config = {})=>new CdpApiActionProvider(config);\nexports.cdpApiActionProvider = cdpApiActionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/cdp/cdpApiActionProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/cdp/cdpWalletActionProvider.js":
/*!***************************************************************************!*\
  !*** ../../agentkit/dist/action-providers/cdp/cdpWalletActionProvider.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __decorate = (void 0) && (void 0).__decorate || function(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (void 0) && (void 0).__metadata || function(k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.cdpWalletActionProvider = exports.CdpWalletActionProvider = void 0;\nconst coinbase_sdk_1 = __webpack_require__(/*! @coinbase/coinbase-sdk */ \"(rsc)/../../agentkit/node_modules/@coinbase/coinbase-sdk/dist/index.js\");\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\nconst actionDecorator_1 = __webpack_require__(/*! ../actionDecorator */ \"(rsc)/../../agentkit/dist/action-providers/actionDecorator.js\");\nconst actionProvider_1 = __webpack_require__(/*! ../actionProvider */ \"(rsc)/../../agentkit/dist/action-providers/actionProvider.js\");\nconst wallet_providers_1 = __webpack_require__(/*! ../../wallet-providers */ \"(rsc)/../../agentkit/dist/wallet-providers/index.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(rsc)/../../agentkit/dist/action-providers/cdp/constants.js\");\nconst schemas_1 = __webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/cdp/schemas.js\");\n/**\n * CdpWalletActionProvider is an action provider for Cdp.\n *\n * This provider is used for any action that requires a CDP Wallet.\n */ class CdpWalletActionProvider extends actionProvider_1.ActionProvider {\n    /**\n     * Constructor for the CdpWalletActionProvider class.\n     *\n     * @param config - The configuration options for the CdpWalletActionProvider.\n     */ constructor(config = {}){\n        super(\"cdp_wallet\", []);\n        /**\n         * Checks if the Cdp action provider supports the given network.\n         *\n         * @param _ - The network to check.\n         * @returns True if the Cdp action provider supports the network, false otherwise.\n         */ this.supportsNetwork = (_)=>true;\n        if (config.apiKeyName && config.apiKeyPrivateKey) {\n            coinbase_sdk_1.Coinbase.configure({\n                apiKeyName: config.apiKeyName,\n                privateKey: config.apiKeyPrivateKey\n            });\n        } else {\n            coinbase_sdk_1.Coinbase.configureFromJson();\n        }\n    }\n    /**\n     * Deploys a contract.\n     *\n     * @param walletProvider - The wallet provider to deploy the contract from\n     * @param args - The input arguments for the action\n     * @returns A message containing the deployed contract address and details\n     */ async deployContract(walletProvider, args) {\n        try {\n            const solidityVersion = constants_1.SolidityVersions[args.solidityVersion];\n            const contract = await walletProvider.deployContract({\n                solidityVersion: solidityVersion,\n                solidityInputJson: args.solidityInputJson,\n                contractName: args.contractName,\n                constructorArgs: args.constructorArgs ?? {}\n            });\n            const result = await contract.wait();\n            return `Deployed contract ${args.contractName} at address ${result.getContractAddress()}. Transaction link: ${result.getTransaction().getTransactionLink()}`;\n        } catch (error) {\n            return `Error deploying contract: ${error}`;\n        }\n    }\n    /**\n     * Deploys an NFT (ERC-721) token collection onchain from the wallet.\n     *\n     * @param walletProvider - The wallet provider to deploy the NFT from.\n     * @param args - The input arguments for the action.\n     * @returns A message containing the NFT token deployment details.\n     */ async deployNFT(walletProvider, args) {\n        try {\n            const nftContract = await walletProvider.deployNFT({\n                name: args.name,\n                symbol: args.symbol,\n                baseURI: args.baseURI\n            });\n            const result = await nftContract.wait();\n            const transaction = result.getTransaction();\n            const networkId = walletProvider.getNetwork().networkId;\n            const contractAddress = result.getContractAddress();\n            return [\n                `Deployed NFT Collection ${args.name}:`,\n                `- to address ${contractAddress}`,\n                `- on network ${networkId}.`,\n                `Transaction hash: ${transaction.getTransactionHash()}`,\n                `Transaction link: ${transaction.getTransactionLink()}`\n            ].join(\"\\n\");\n        } catch (error) {\n            return `Error deploying NFT: ${error}`;\n        }\n    }\n    /**\n     * Deploys a token.\n     *\n     * @param walletProvider - The wallet provider to deploy the token.\n     * @param args - The arguments for the token deployment.\n     * @returns The deployed token.\n     */ async deployToken(walletProvider, args) {\n        try {\n            const tokenContract = await walletProvider.deployToken({\n                name: args.name,\n                symbol: args.symbol,\n                totalSupply: args.totalSupply\n            });\n            const result = await tokenContract.wait();\n            return `Deployed ERC20 token contract ${args.name} (${args.symbol}) with total supply of ${args.totalSupply} tokens at address ${result.getContractAddress()}. Transaction link: ${result.getTransaction().getTransactionLink()}`;\n        } catch (error) {\n            return `Error deploying token: ${error}`;\n        }\n    }\n    /**\n     * Trades a specified amount of a from asset to a to asset for the wallet.\n     *\n     * @param walletProvider - The wallet provider to trade the asset from.\n     * @param args - The input arguments for the action.\n     * @returns A message containing the trade details.\n     */ async trade(walletProvider, args) {\n        try {\n            const tradeResult = await walletProvider.createTrade({\n                amount: args.amount,\n                fromAssetId: args.fromAssetId,\n                toAssetId: args.toAssetId\n            });\n            const result = await tradeResult.wait();\n            return `Traded ${args.amount} of ${args.fromAssetId} for ${result.getToAmount()} of ${args.toAssetId}.\\nTransaction hash for the trade: ${result.getTransaction().getTransactionHash()}\\nTransaction link for the trade: ${result.getTransaction().getTransactionLink()}`;\n        } catch (error) {\n            return `Error trading assets: ${error}`;\n        }\n    }\n}\nexports.CdpWalletActionProvider = CdpWalletActionProvider;\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"deploy_contract\",\n        description: `\nDeploys smart contract with required args: solidity version (string), solidity input json (string), contract name (string), and optional constructor args (Dict[str, Any])\n\nInput json structure:\n{\"language\":\"Solidity\",\"settings\":{\"remappings\":[],\"outputSelection\":{\"*\":{\"*\":[\"abi\",\"evm.bytecode\"]}}},\"sources\":{}}\n\nYou must set the outputSelection to {\"*\":{\"*\":[\"abi\",\"evm.bytecode\"]}} in the settings. The solidity version must be >= 0.8.0 and <= 0.8.28.\n\nSources should contain one or more contracts with the following structure:\n{\"contract_name.sol\":{\"content\":\"contract code\"}}\n\nThe contract code should be escaped. Contracts cannot import from external contracts but can import from one another.\n\nConstructor args are required if the contract has a constructor. They are a key-value\nmap where the key is the arg name and the value is the arg value. Encode uint/int/bytes/string/address values as strings, boolean values as true/false. For arrays/tuples, encode based on contained type.`,\n        schema: schemas_1.DeployContractSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.CdpWalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], CdpWalletActionProvider.prototype, \"deployContract\", null);\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"deploy_nft\",\n        description: `This tool will deploy an NFT (ERC-721) contract onchain from the wallet. \n  It takes the name of the NFT collection, the symbol of the NFT collection, and the base URI for the token metadata as inputs.`,\n        schema: schemas_1.DeployNftSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.CdpWalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], CdpWalletActionProvider.prototype, \"deployNFT\", null);\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"deploy_token\",\n        description: `This tool will deploy an ERC20 token smart contract. It takes the token name, symbol, and total supply as input. \nThe token will be deployed using the wallet's default address as the owner and initial token holder.`,\n        schema: schemas_1.DeployTokenSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.CdpWalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], CdpWalletActionProvider.prototype, \"deployToken\", null);\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"trade\",\n        description: `This tool will trade a specified amount of a 'from asset' to a 'to asset' for the wallet.\nIt takes the following inputs:\n- The amount of the 'from asset' to trade\n- The from asset ID to trade \n- The asset ID to receive from the trade\n\nImportant notes:\n- Trades are only supported on mainnet networks (ie, 'base-mainnet', 'base', 'ethereum-mainnet', 'ethereum', etc.)\n- Never allow trades on any non-mainnet network (ie, 'base-sepolia', 'ethereum-sepolia', etc.)\n- When selling a native asset (e.g. 'eth' on base-mainnet), ensure there is sufficient balance to pay for the trade AND the gas cost of this trade`,\n        schema: schemas_1.TradeSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.CdpWalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], CdpWalletActionProvider.prototype, \"trade\", null);\nconst cdpWalletActionProvider = (config = {})=>new CdpWalletActionProvider(config);\nexports.cdpWalletActionProvider = cdpWalletActionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/cdp/cdpWalletActionProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/cdp/constants.js":
/*!*************************************************************!*\
  !*** ../../agentkit/dist/action-providers/cdp/constants.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.SolidityVersions = void 0;\nexports.SolidityVersions = {\n    \"0.8.28\": \"0.8.28+commit.7893614a\",\n    \"0.8.27\": \"0.8.27+commit.40a35a09\",\n    \"0.8.26\": \"0.8.26+commit.8a97fa7a\",\n    \"0.8.25\": \"0.8.25+commit.b61c2a91\",\n    \"0.8.24\": \"0.8.24+commit.e11b9ed9\",\n    \"0.8.23\": \"0.8.23+commit.f704f362\",\n    \"0.8.22\": \"0.8.22+commit.4fc1097e\",\n    \"0.8.21\": \"0.8.21+commit.d9974bed\",\n    \"0.8.20\": \"0.8.20+commit.a1b79de6\",\n    \"0.8.19\": \"0.8.19+commit.7dd6d404\",\n    \"0.8.18\": \"0.8.18+commit.87f61d96\",\n    \"0.8.17\": \"0.8.17+commit.8df45f5f\",\n    \"0.8.16\": \"0.8.16+commit.07a7930e\",\n    \"0.8.15\": \"0.8.15+commit.e14f2714\",\n    \"0.8.14\": \"0.8.14+commit.80d49f37\",\n    \"0.8.13\": \"0.8.13+commit.abaa5c0e\",\n    \"0.8.12\": \"0.8.12+commit.f00d7308\",\n    \"0.8.11\": \"0.8.11+commit.d7f03943\",\n    \"0.8.10\": \"0.8.10+commit.fc410830\",\n    \"0.8.9\": \"0.8.9+commit.e5eed63a\",\n    \"0.8.8\": \"0.8.8+commit.dddeac2f\",\n    \"0.8.7\": \"0.8.7+commit.e28d00a7\",\n    \"0.8.6\": \"0.8.6+commit.11564f7e\",\n    \"0.8.5\": \"0.8.5+commit.a4f2e591\",\n    \"0.8.4\": \"0.8.4+commit.c7e474f2\",\n    \"0.8.3\": \"0.8.3+commit.8d00100c\",\n    \"0.8.2\": \"0.8.2+commit.661d1103\",\n    \"0.8.1\": \"0.8.1+commit.df193b15\",\n    \"0.8.0\": \"0.8.0+commit.c7dfd78e\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2NkcC9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHdCQUF3QixHQUFHLEtBQUs7QUFDaENBLHdCQUF3QixHQUFHO0lBQ3ZCLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY29pbmJhc2UvY2RwLWxhbmdjaGFpbi1jaGF0Ym90LWV4YW1wbGUvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2NkcC9jb25zdGFudHMuanM/NWRiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU29saWRpdHlWZXJzaW9ucyA9IHZvaWQgMDtcbmV4cG9ydHMuU29saWRpdHlWZXJzaW9ucyA9IHtcbiAgICBcIjAuOC4yOFwiOiBcIjAuOC4yOCtjb21taXQuNzg5MzYxNGFcIixcbiAgICBcIjAuOC4yN1wiOiBcIjAuOC4yNytjb21taXQuNDBhMzVhMDlcIixcbiAgICBcIjAuOC4yNlwiOiBcIjAuOC4yNitjb21taXQuOGE5N2ZhN2FcIixcbiAgICBcIjAuOC4yNVwiOiBcIjAuOC4yNStjb21taXQuYjYxYzJhOTFcIixcbiAgICBcIjAuOC4yNFwiOiBcIjAuOC4yNCtjb21taXQuZTExYjllZDlcIixcbiAgICBcIjAuOC4yM1wiOiBcIjAuOC4yMytjb21taXQuZjcwNGYzNjJcIixcbiAgICBcIjAuOC4yMlwiOiBcIjAuOC4yMitjb21taXQuNGZjMTA5N2VcIixcbiAgICBcIjAuOC4yMVwiOiBcIjAuOC4yMStjb21taXQuZDk5NzRiZWRcIixcbiAgICBcIjAuOC4yMFwiOiBcIjAuOC4yMCtjb21taXQuYTFiNzlkZTZcIixcbiAgICBcIjAuOC4xOVwiOiBcIjAuOC4xOStjb21taXQuN2RkNmQ0MDRcIixcbiAgICBcIjAuOC4xOFwiOiBcIjAuOC4xOCtjb21taXQuODdmNjFkOTZcIixcbiAgICBcIjAuOC4xN1wiOiBcIjAuOC4xNytjb21taXQuOGRmNDVmNWZcIixcbiAgICBcIjAuOC4xNlwiOiBcIjAuOC4xNitjb21taXQuMDdhNzkzMGVcIixcbiAgICBcIjAuOC4xNVwiOiBcIjAuOC4xNStjb21taXQuZTE0ZjI3MTRcIixcbiAgICBcIjAuOC4xNFwiOiBcIjAuOC4xNCtjb21taXQuODBkNDlmMzdcIixcbiAgICBcIjAuOC4xM1wiOiBcIjAuOC4xMytjb21taXQuYWJhYTVjMGVcIixcbiAgICBcIjAuOC4xMlwiOiBcIjAuOC4xMitjb21taXQuZjAwZDczMDhcIixcbiAgICBcIjAuOC4xMVwiOiBcIjAuOC4xMStjb21taXQuZDdmMDM5NDNcIixcbiAgICBcIjAuOC4xMFwiOiBcIjAuOC4xMCtjb21taXQuZmM0MTA4MzBcIixcbiAgICBcIjAuOC45XCI6IFwiMC44LjkrY29tbWl0LmU1ZWVkNjNhXCIsXG4gICAgXCIwLjguOFwiOiBcIjAuOC44K2NvbW1pdC5kZGRlYWMyZlwiLFxuICAgIFwiMC44LjdcIjogXCIwLjguNytjb21taXQuZTI4ZDAwYTdcIixcbiAgICBcIjAuOC42XCI6IFwiMC44LjYrY29tbWl0LjExNTY0ZjdlXCIsXG4gICAgXCIwLjguNVwiOiBcIjAuOC41K2NvbW1pdC5hNGYyZTU5MVwiLFxuICAgIFwiMC44LjRcIjogXCIwLjguNCtjb21taXQuYzdlNDc0ZjJcIixcbiAgICBcIjAuOC4zXCI6IFwiMC44LjMrY29tbWl0LjhkMDAxMDBjXCIsXG4gICAgXCIwLjguMlwiOiBcIjAuOC4yK2NvbW1pdC42NjFkMTEwM1wiLFxuICAgIFwiMC44LjFcIjogXCIwLjguMStjb21taXQuZGYxOTNiMTVcIixcbiAgICBcIjAuOC4wXCI6IFwiMC44LjArY29tbWl0LmM3ZGZkNzhlXCIsXG59O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiU29saWRpdHlWZXJzaW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/cdp/constants.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/cdp/index.js":
/*!*********************************************************!*\
  !*** ../../agentkit/dist/action-providers/cdp/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/cdp/schemas.js\"), exports);\n__exportStar(__webpack_require__(/*! ./cdpApiActionProvider */ \"(rsc)/../../agentkit/dist/action-providers/cdp/cdpApiActionProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./cdpWalletActionProvider */ \"(rsc)/../../agentkit/dist/action-providers/cdp/cdpWalletActionProvider.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2NkcC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0IsSUFBSUcsT0FBT1AsT0FBT1Esd0JBQXdCLENBQUNMLEdBQUdDO0lBQzlDLElBQUksQ0FBQ0csUUFBUyxVQUFTQSxPQUFPLENBQUNKLEVBQUVNLFVBQVUsR0FBR0YsS0FBS0csUUFBUSxJQUFJSCxLQUFLSSxZQUFZLEdBQUc7UUFDakZKLE9BQU87WUFBRUssWUFBWTtZQUFNQyxLQUFLO2dCQUFhLE9BQU9WLENBQUMsQ0FBQ0MsRUFBRTtZQUFFO1FBQUU7SUFDOUQ7SUFDQUosT0FBT2MsY0FBYyxDQUFDWixHQUFHRyxJQUFJRTtBQUNqQyxJQUFNLFNBQVNMLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlXLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBU1osQ0FBQyxFQUFFYSxRQUFPO0lBQ2pFLElBQUssSUFBSUMsS0FBS2QsRUFBRyxJQUFJYyxNQUFNLGFBQWEsQ0FBQ2pCLE9BQU9rQixTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixVQUFTQyxJQUFJbEIsZ0JBQWdCaUIsVUFBU2IsR0FBR2M7QUFDM0g7QUFDQWpCLDhDQUE2QztJQUFFcUIsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RE4sYUFBYU8sbUJBQU9BLENBQUMsNEVBQVcsR0FBR047QUFDbkNELGFBQWFPLG1CQUFPQSxDQUFDLHNHQUF3QixHQUFHTjtBQUNoREQsYUFBYU8sbUJBQU9BLENBQUMsNEdBQTJCLEdBQUdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNvaW5iYXNlL2NkcC1sYW5nY2hhaW4tY2hhdGJvdC1leGFtcGxlLy4uLy4uL2FnZW50a2l0L2Rpc3QvYWN0aW9uLXByb3ZpZGVycy9jZHAvaW5kZXguanM/MmZiZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NjaGVtYXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NkcEFwaUFjdGlvblByb3ZpZGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jZHBXYWxsZXRBY3Rpb25Qcm92aWRlclwiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19lc01vZHVsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsImRlZmluZVByb3BlcnR5IiwiX19leHBvcnRTdGFyIiwiZXhwb3J0cyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ2YWx1ZSIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/cdp/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/cdp/schemas.js":
/*!***********************************************************!*\
  !*** ../../agentkit/dist/action-providers/cdp/schemas.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.TradeSchema = exports.RequestFaucetFundsSchema = exports.DeployTokenSchema = exports.DeployNftSchema = exports.DeployContractSchema = exports.AddressReputationSchema = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(rsc)/../../agentkit/dist/action-providers/cdp/constants.js\");\n/**\n * Input schema for address reputation check.\n */ exports.AddressReputationSchema = zod_1.z.object({\n    address: zod_1.z.string().regex(/^0x[a-fA-F0-9]{40}$/, \"Invalid Ethereum address format\").describe(\"The Ethereum address to check\"),\n    network: zod_1.z.string().describe(\"The network to check the address on\")\n}).strip().describe(\"Input schema for address reputation check\");\n/**\n * Input schema for deploy contract action.\n */ exports.DeployContractSchema = zod_1.z.object({\n    solidityVersion: zod_1.z.enum(Object.keys(constants_1.SolidityVersions)).describe(\"The solidity compiler version\"),\n    solidityInputJson: zod_1.z.string().describe(\"The input json for the solidity compiler\"),\n    contractName: zod_1.z.string().describe(\"The name of the contract class to be deployed\"),\n    constructorArgs: zod_1.z.record(zod_1.z.string(), zod_1.z.any()).describe(\"The constructor arguments for the contract\").optional()\n}).strip().describe(\"Instructions for deploying an arbitrary contract\");\n/**\n * Input schema for deploy NFT action\n */ exports.DeployNftSchema = zod_1.z.object({\n    name: zod_1.z.string().describe(\"The name of the NFT collection\"),\n    symbol: zod_1.z.string().describe(\"The symbol of the NFT collection\"),\n    baseURI: zod_1.z.string().describe(\"The base URI for the token metadata\")\n}).strip().describe(\"Instructions for deploying an NFT collection\");\n/**\n * Input schema for deploy token action.\n */ exports.DeployTokenSchema = zod_1.z.object({\n    name: zod_1.z.string().describe(\"The name of the token\"),\n    symbol: zod_1.z.string().describe(\"The token symbol\"),\n    totalSupply: zod_1.z.custom().describe(\"The total supply of tokens to mint\")\n}).strip().describe(\"Instructions for deploying a token\");\n/**\n * Input schema for request faucet funds action.\n */ exports.RequestFaucetFundsSchema = zod_1.z.object({\n    assetId: zod_1.z.string().optional().describe(\"The optional asset ID to request from faucet\")\n}).strip().describe(\"Instructions for requesting faucet funds\");\n/**\n * Input schema for trade action.\n */ exports.TradeSchema = zod_1.z.object({\n    amount: zod_1.z.custom().describe(\"The amount of the from asset to trade\"),\n    fromAssetId: zod_1.z.string().describe(\"The from asset ID to trade\"),\n    toAssetId: zod_1.z.string().describe(\"The to asset ID to receive from the trade\")\n}).strip().describe(\"Instructions for trading assets\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2NkcC9zY2hlbWFzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxtQkFBbUIsR0FBR0EsZ0NBQWdDLEdBQUdBLHlCQUF5QixHQUFHQSx1QkFBdUIsR0FBR0EsNEJBQTRCLEdBQUdBLCtCQUErQixHQUFHLEtBQUs7QUFDckwsTUFBTVEsUUFBUUMsbUJBQU9BLENBQUMseURBQUs7QUFDM0IsTUFBTUMsY0FBY0QsbUJBQU9BLENBQUMsZ0ZBQWE7QUFDekM7O0NBRUMsR0FDRFQsK0JBQStCLEdBQUdRLE1BQU1HLENBQUMsQ0FDcENDLE1BQU0sQ0FBQztJQUNSQyxTQUFTTCxNQUFNRyxDQUFDLENBQ1hHLE1BQU0sR0FDTkMsS0FBSyxDQUFDLHVCQUF1QixtQ0FDN0JDLFFBQVEsQ0FBQztJQUNkQyxTQUFTVCxNQUFNRyxDQUFDLENBQUNHLE1BQU0sR0FBR0UsUUFBUSxDQUFDO0FBQ3ZDLEdBQ0tFLEtBQUssR0FDTEYsUUFBUSxDQUFDO0FBQ2Q7O0NBRUMsR0FDRGhCLDRCQUE0QixHQUFHUSxNQUFNRyxDQUFDLENBQ2pDQyxNQUFNLENBQUM7SUFDUk8saUJBQWlCWCxNQUFNRyxDQUFDLENBQ25CUyxJQUFJLENBQUN0QixPQUFPdUIsSUFBSSxDQUFDWCxZQUFZWSxnQkFBZ0IsR0FDN0NOLFFBQVEsQ0FBQztJQUNkTyxtQkFBbUJmLE1BQU1HLENBQUMsQ0FBQ0csTUFBTSxHQUFHRSxRQUFRLENBQUM7SUFDN0NRLGNBQWNoQixNQUFNRyxDQUFDLENBQUNHLE1BQU0sR0FBR0UsUUFBUSxDQUFDO0lBQ3hDUyxpQkFBaUJqQixNQUFNRyxDQUFDLENBQ25CZSxNQUFNLENBQUNsQixNQUFNRyxDQUFDLENBQUNHLE1BQU0sSUFBSU4sTUFBTUcsQ0FBQyxDQUFDZ0IsR0FBRyxJQUNwQ1gsUUFBUSxDQUFDLDhDQUNUWSxRQUFRO0FBQ2pCLEdBQ0tWLEtBQUssR0FDTEYsUUFBUSxDQUFDO0FBQ2Q7O0NBRUMsR0FDRGhCLHVCQUF1QixHQUFHUSxNQUFNRyxDQUFDLENBQzVCQyxNQUFNLENBQUM7SUFDUmlCLE1BQU1yQixNQUFNRyxDQUFDLENBQUNHLE1BQU0sR0FBR0UsUUFBUSxDQUFDO0lBQ2hDYyxRQUFRdEIsTUFBTUcsQ0FBQyxDQUFDRyxNQUFNLEdBQUdFLFFBQVEsQ0FBQztJQUNsQ2UsU0FBU3ZCLE1BQU1HLENBQUMsQ0FBQ0csTUFBTSxHQUFHRSxRQUFRLENBQUM7QUFDdkMsR0FDS0UsS0FBSyxHQUNMRixRQUFRLENBQUM7QUFDZDs7Q0FFQyxHQUNEaEIseUJBQXlCLEdBQUdRLE1BQU1HLENBQUMsQ0FDOUJDLE1BQU0sQ0FBQztJQUNSaUIsTUFBTXJCLE1BQU1HLENBQUMsQ0FBQ0csTUFBTSxHQUFHRSxRQUFRLENBQUM7SUFDaENjLFFBQVF0QixNQUFNRyxDQUFDLENBQUNHLE1BQU0sR0FBR0UsUUFBUSxDQUFDO0lBQ2xDZ0IsYUFBYXhCLE1BQU1HLENBQUMsQ0FBQ3NCLE1BQU0sR0FBR2pCLFFBQVEsQ0FBQztBQUMzQyxHQUNLRSxLQUFLLEdBQ0xGLFFBQVEsQ0FBQztBQUNkOztDQUVDLEdBQ0RoQixnQ0FBZ0MsR0FBR1EsTUFBTUcsQ0FBQyxDQUNyQ0MsTUFBTSxDQUFDO0lBQ1JzQixTQUFTMUIsTUFBTUcsQ0FBQyxDQUFDRyxNQUFNLEdBQUdjLFFBQVEsR0FBR1osUUFBUSxDQUFDO0FBQ2xELEdBQ0tFLEtBQUssR0FDTEYsUUFBUSxDQUFDO0FBQ2Q7O0NBRUMsR0FDRGhCLG1CQUFtQixHQUFHUSxNQUFNRyxDQUFDLENBQ3hCQyxNQUFNLENBQUM7SUFDUnVCLFFBQVEzQixNQUFNRyxDQUFDLENBQUNzQixNQUFNLEdBQUdqQixRQUFRLENBQUM7SUFDbENvQixhQUFhNUIsTUFBTUcsQ0FBQyxDQUFDRyxNQUFNLEdBQUdFLFFBQVEsQ0FBQztJQUN2Q3FCLFdBQVc3QixNQUFNRyxDQUFDLENBQUNHLE1BQU0sR0FBR0UsUUFBUSxDQUFDO0FBQ3pDLEdBQ0tFLEtBQUssR0FDTEYsUUFBUSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNvaW5iYXNlL2NkcC1sYW5nY2hhaW4tY2hhdGJvdC1leGFtcGxlLy4uLy4uL2FnZW50a2l0L2Rpc3QvYWN0aW9uLXByb3ZpZGVycy9jZHAvc2NoZW1hcy5qcz9lODJkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UcmFkZVNjaGVtYSA9IGV4cG9ydHMuUmVxdWVzdEZhdWNldEZ1bmRzU2NoZW1hID0gZXhwb3J0cy5EZXBsb3lUb2tlblNjaGVtYSA9IGV4cG9ydHMuRGVwbG95TmZ0U2NoZW1hID0gZXhwb3J0cy5EZXBsb3lDb250cmFjdFNjaGVtYSA9IGV4cG9ydHMuQWRkcmVzc1JlcHV0YXRpb25TY2hlbWEgPSB2b2lkIDA7XG5jb25zdCB6b2RfMSA9IHJlcXVpcmUoXCJ6b2RcIik7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcbi8qKlxuICogSW5wdXQgc2NoZW1hIGZvciBhZGRyZXNzIHJlcHV0YXRpb24gY2hlY2suXG4gKi9cbmV4cG9ydHMuQWRkcmVzc1JlcHV0YXRpb25TY2hlbWEgPSB6b2RfMS56XG4gICAgLm9iamVjdCh7XG4gICAgYWRkcmVzczogem9kXzEuelxuICAgICAgICAuc3RyaW5nKClcbiAgICAgICAgLnJlZ2V4KC9eMHhbYS1mQS1GMC05XXs0MH0kLywgXCJJbnZhbGlkIEV0aGVyZXVtIGFkZHJlc3MgZm9ybWF0XCIpXG4gICAgICAgIC5kZXNjcmliZShcIlRoZSBFdGhlcmV1bSBhZGRyZXNzIHRvIGNoZWNrXCIpLFxuICAgIG5ldHdvcms6IHpvZF8xLnouc3RyaW5nKCkuZGVzY3JpYmUoXCJUaGUgbmV0d29yayB0byBjaGVjayB0aGUgYWRkcmVzcyBvblwiKSxcbn0pXG4gICAgLnN0cmlwKClcbiAgICAuZGVzY3JpYmUoXCJJbnB1dCBzY2hlbWEgZm9yIGFkZHJlc3MgcmVwdXRhdGlvbiBjaGVja1wiKTtcbi8qKlxuICogSW5wdXQgc2NoZW1hIGZvciBkZXBsb3kgY29udHJhY3QgYWN0aW9uLlxuICovXG5leHBvcnRzLkRlcGxveUNvbnRyYWN0U2NoZW1hID0gem9kXzEuelxuICAgIC5vYmplY3Qoe1xuICAgIHNvbGlkaXR5VmVyc2lvbjogem9kXzEuelxuICAgICAgICAuZW51bShPYmplY3Qua2V5cyhjb25zdGFudHNfMS5Tb2xpZGl0eVZlcnNpb25zKSlcbiAgICAgICAgLmRlc2NyaWJlKFwiVGhlIHNvbGlkaXR5IGNvbXBpbGVyIHZlcnNpb25cIiksXG4gICAgc29saWRpdHlJbnB1dEpzb246IHpvZF8xLnouc3RyaW5nKCkuZGVzY3JpYmUoXCJUaGUgaW5wdXQganNvbiBmb3IgdGhlIHNvbGlkaXR5IGNvbXBpbGVyXCIpLFxuICAgIGNvbnRyYWN0TmFtZTogem9kXzEuei5zdHJpbmcoKS5kZXNjcmliZShcIlRoZSBuYW1lIG9mIHRoZSBjb250cmFjdCBjbGFzcyB0byBiZSBkZXBsb3llZFwiKSxcbiAgICBjb25zdHJ1Y3RvckFyZ3M6IHpvZF8xLnpcbiAgICAgICAgLnJlY29yZCh6b2RfMS56LnN0cmluZygpLCB6b2RfMS56LmFueSgpKVxuICAgICAgICAuZGVzY3JpYmUoXCJUaGUgY29uc3RydWN0b3IgYXJndW1lbnRzIGZvciB0aGUgY29udHJhY3RcIilcbiAgICAgICAgLm9wdGlvbmFsKCksXG59KVxuICAgIC5zdHJpcCgpXG4gICAgLmRlc2NyaWJlKFwiSW5zdHJ1Y3Rpb25zIGZvciBkZXBsb3lpbmcgYW4gYXJiaXRyYXJ5IGNvbnRyYWN0XCIpO1xuLyoqXG4gKiBJbnB1dCBzY2hlbWEgZm9yIGRlcGxveSBORlQgYWN0aW9uXG4gKi9cbmV4cG9ydHMuRGVwbG95TmZ0U2NoZW1hID0gem9kXzEuelxuICAgIC5vYmplY3Qoe1xuICAgIG5hbWU6IHpvZF8xLnouc3RyaW5nKCkuZGVzY3JpYmUoXCJUaGUgbmFtZSBvZiB0aGUgTkZUIGNvbGxlY3Rpb25cIiksXG4gICAgc3ltYm9sOiB6b2RfMS56LnN0cmluZygpLmRlc2NyaWJlKFwiVGhlIHN5bWJvbCBvZiB0aGUgTkZUIGNvbGxlY3Rpb25cIiksXG4gICAgYmFzZVVSSTogem9kXzEuei5zdHJpbmcoKS5kZXNjcmliZShcIlRoZSBiYXNlIFVSSSBmb3IgdGhlIHRva2VuIG1ldGFkYXRhXCIpLFxufSlcbiAgICAuc3RyaXAoKVxuICAgIC5kZXNjcmliZShcIkluc3RydWN0aW9ucyBmb3IgZGVwbG95aW5nIGFuIE5GVCBjb2xsZWN0aW9uXCIpO1xuLyoqXG4gKiBJbnB1dCBzY2hlbWEgZm9yIGRlcGxveSB0b2tlbiBhY3Rpb24uXG4gKi9cbmV4cG9ydHMuRGVwbG95VG9rZW5TY2hlbWEgPSB6b2RfMS56XG4gICAgLm9iamVjdCh7XG4gICAgbmFtZTogem9kXzEuei5zdHJpbmcoKS5kZXNjcmliZShcIlRoZSBuYW1lIG9mIHRoZSB0b2tlblwiKSxcbiAgICBzeW1ib2w6IHpvZF8xLnouc3RyaW5nKCkuZGVzY3JpYmUoXCJUaGUgdG9rZW4gc3ltYm9sXCIpLFxuICAgIHRvdGFsU3VwcGx5OiB6b2RfMS56LmN1c3RvbSgpLmRlc2NyaWJlKFwiVGhlIHRvdGFsIHN1cHBseSBvZiB0b2tlbnMgdG8gbWludFwiKSxcbn0pXG4gICAgLnN0cmlwKClcbiAgICAuZGVzY3JpYmUoXCJJbnN0cnVjdGlvbnMgZm9yIGRlcGxveWluZyBhIHRva2VuXCIpO1xuLyoqXG4gKiBJbnB1dCBzY2hlbWEgZm9yIHJlcXVlc3QgZmF1Y2V0IGZ1bmRzIGFjdGlvbi5cbiAqL1xuZXhwb3J0cy5SZXF1ZXN0RmF1Y2V0RnVuZHNTY2hlbWEgPSB6b2RfMS56XG4gICAgLm9iamVjdCh7XG4gICAgYXNzZXRJZDogem9kXzEuei5zdHJpbmcoKS5vcHRpb25hbCgpLmRlc2NyaWJlKFwiVGhlIG9wdGlvbmFsIGFzc2V0IElEIHRvIHJlcXVlc3QgZnJvbSBmYXVjZXRcIiksXG59KVxuICAgIC5zdHJpcCgpXG4gICAgLmRlc2NyaWJlKFwiSW5zdHJ1Y3Rpb25zIGZvciByZXF1ZXN0aW5nIGZhdWNldCBmdW5kc1wiKTtcbi8qKlxuICogSW5wdXQgc2NoZW1hIGZvciB0cmFkZSBhY3Rpb24uXG4gKi9cbmV4cG9ydHMuVHJhZGVTY2hlbWEgPSB6b2RfMS56XG4gICAgLm9iamVjdCh7XG4gICAgYW1vdW50OiB6b2RfMS56LmN1c3RvbSgpLmRlc2NyaWJlKFwiVGhlIGFtb3VudCBvZiB0aGUgZnJvbSBhc3NldCB0byB0cmFkZVwiKSxcbiAgICBmcm9tQXNzZXRJZDogem9kXzEuei5zdHJpbmcoKS5kZXNjcmliZShcIlRoZSBmcm9tIGFzc2V0IElEIHRvIHRyYWRlXCIpLFxuICAgIHRvQXNzZXRJZDogem9kXzEuei5zdHJpbmcoKS5kZXNjcmliZShcIlRoZSB0byBhc3NldCBJRCB0byByZWNlaXZlIGZyb20gdGhlIHRyYWRlXCIpLFxufSlcbiAgICAuc3RyaXAoKVxuICAgIC5kZXNjcmliZShcIkluc3RydWN0aW9ucyBmb3IgdHJhZGluZyBhc3NldHNcIik7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJUcmFkZVNjaGVtYSIsIlJlcXVlc3RGYXVjZXRGdW5kc1NjaGVtYSIsIkRlcGxveVRva2VuU2NoZW1hIiwiRGVwbG95TmZ0U2NoZW1hIiwiRGVwbG95Q29udHJhY3RTY2hlbWEiLCJBZGRyZXNzUmVwdXRhdGlvblNjaGVtYSIsInpvZF8xIiwicmVxdWlyZSIsImNvbnN0YW50c18xIiwieiIsIm9iamVjdCIsImFkZHJlc3MiLCJzdHJpbmciLCJyZWdleCIsImRlc2NyaWJlIiwibmV0d29yayIsInN0cmlwIiwic29saWRpdHlWZXJzaW9uIiwiZW51bSIsImtleXMiLCJTb2xpZGl0eVZlcnNpb25zIiwic29saWRpdHlJbnB1dEpzb24iLCJjb250cmFjdE5hbWUiLCJjb25zdHJ1Y3RvckFyZ3MiLCJyZWNvcmQiLCJhbnkiLCJvcHRpb25hbCIsIm5hbWUiLCJzeW1ib2wiLCJiYXNlVVJJIiwidG90YWxTdXBwbHkiLCJjdXN0b20iLCJhc3NldElkIiwiYW1vdW50IiwiZnJvbUFzc2V0SWQiLCJ0b0Fzc2V0SWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/cdp/schemas.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/customActionProvider.js":
/*!********************************************************************!*\
  !*** ../../agentkit/dist/action-providers/customActionProvider.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n/* eslint-disable @typescript-eslint/no-explicit-any */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.customActionProvider = exports.CustomActionProvider = void 0;\nconst actionDecorator_1 = __webpack_require__(/*! ./actionDecorator */ \"(rsc)/../../agentkit/dist/action-providers/actionDecorator.js\");\nconst actionProvider_1 = __webpack_require__(/*! ./actionProvider */ \"(rsc)/../../agentkit/dist/action-providers/actionProvider.js\");\nconst wallet_providers_1 = __webpack_require__(/*! ../wallet-providers */ \"(rsc)/../../agentkit/dist/wallet-providers/index.js\");\n/**\n * CustomActionProvider is a custom action provider that allows for custom action registration\n */ class CustomActionProvider extends actionProvider_1.ActionProvider {\n    /**\n     * Creates a new CustomActionProvider that dynamically adds decorated action methods\n     *\n     * @param actions - Array of custom actions to be added to the provider\n     */ constructor(actions){\n        super(\"custom\", []);\n        actions.forEach(({ name, description, schema, invoke })=>{\n            // Check if the invoke function expects a wallet provider\n            const takesWalletProvider = invoke.length === 2;\n            // Define the method on the prototype with the correct signature\n            Object.defineProperty(CustomActionProvider.prototype, name, {\n                value: takesWalletProvider ? async function(walletProvider, args) {\n                    const parsedArgs = schema.parse(args);\n                    return await invoke(walletProvider, parsedArgs);\n                } : async function(args) {\n                    const parsedArgs = schema.parse(args);\n                    return await invoke(parsedArgs);\n                },\n                configurable: true,\n                writable: true,\n                enumerable: true\n            });\n            // Manually set the parameter metadata\n            const paramTypes = takesWalletProvider ? [\n                wallet_providers_1.WalletProvider,\n                Object\n            ] : [\n                Object\n            ];\n            Reflect.defineMetadata(\"design:paramtypes\", paramTypes, CustomActionProvider.prototype, name);\n            // Apply the decorator using original name\n            const decoratedMethod = (0, actionDecorator_1.CreateAction)({\n                name,\n                description,\n                schema\n            })(CustomActionProvider.prototype, name, Object.getOwnPropertyDescriptor(CustomActionProvider.prototype, name));\n            // Add the decorated method to the instance\n            Object.defineProperty(this, name, {\n                value: decoratedMethod,\n                configurable: true,\n                writable: true\n            });\n        });\n    }\n    /**\n     * Custom action providers are supported on all networks\n     *\n     * @param _ - The network to checkpointSaver\n     * @returns true\n     */ supportsNetwork(_) {\n        return true;\n    }\n}\nexports.CustomActionProvider = CustomActionProvider;\nconst customActionProvider = (actions)=>new CustomActionProvider(Array.isArray(actions) ? actions : [\n        actions\n    ]);\nexports.customActionProvider = customActionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2N1c3RvbUFjdGlvblByb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IscURBQXFELEdBQ3JEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsNEJBQTRCLEdBQUdBLDRCQUE0QixHQUFHLEtBQUs7QUFDbkUsTUFBTUksb0JBQW9CQyxtQkFBT0EsQ0FBQyx3RkFBbUI7QUFDckQsTUFBTUMsbUJBQW1CRCxtQkFBT0EsQ0FBQyxzRkFBa0I7QUFDbkQsTUFBTUUscUJBQXFCRixtQkFBT0EsQ0FBQyxnRkFBcUI7QUFDeEQ7O0NBRUMsR0FDRCxNQUFNRiw2QkFBNkJHLGlCQUFpQkUsY0FBYztJQUM5RDs7OztLQUlDLEdBQ0RDLFlBQVlDLE9BQU8sQ0FBRTtRQUNqQixLQUFLLENBQUMsVUFBVSxFQUFFO1FBQ2xCQSxRQUFRQyxPQUFPLENBQUMsQ0FBQyxFQUFFQyxJQUFJLEVBQUVDLFdBQVcsRUFBRUMsTUFBTSxFQUFFQyxNQUFNLEVBQUU7WUFDbEQseURBQXlEO1lBQ3pELE1BQU1DLHNCQUFzQkQsT0FBT0UsTUFBTSxLQUFLO1lBQzlDLGdFQUFnRTtZQUNoRW5CLE9BQU9DLGNBQWMsQ0FBQ0kscUJBQXFCZSxTQUFTLEVBQUVOLE1BQU07Z0JBQ3hEWCxPQUFPZSxzQkFDRCxlQUFnQkcsY0FBYyxFQUFFQyxJQUFJO29CQUNsQyxNQUFNQyxhQUFhUCxPQUFPUSxLQUFLLENBQUNGO29CQUNoQyxPQUFPLE1BQU1MLE9BQU9JLGdCQUFnQkU7Z0JBQ3hDLElBQ0UsZUFBZ0JELElBQUk7b0JBQ2xCLE1BQU1DLGFBQWFQLE9BQU9RLEtBQUssQ0FBQ0Y7b0JBQ2hDLE9BQU8sTUFBTUwsT0FBT007Z0JBQ3hCO2dCQUNKRSxjQUFjO2dCQUNkQyxVQUFVO2dCQUNWQyxZQUFZO1lBQ2hCO1lBQ0Esc0NBQXNDO1lBQ3RDLE1BQU1DLGFBQWFWLHNCQUFzQjtnQkFBQ1QsbUJBQW1Cb0IsY0FBYztnQkFBRTdCO2FBQU8sR0FBRztnQkFBQ0E7YUFBTztZQUMvRjhCLFFBQVFDLGNBQWMsQ0FBQyxxQkFBcUJILFlBQVl2QixxQkFBcUJlLFNBQVMsRUFBRU47WUFDeEYsMENBQTBDO1lBQzFDLE1BQU1rQixrQkFBa0IsQ0FBQyxHQUFHMUIsa0JBQWtCMkIsWUFBWSxFQUFFO2dCQUN4RG5CO2dCQUNBQztnQkFDQUM7WUFDSixHQUFHWCxxQkFBcUJlLFNBQVMsRUFBRU4sTUFBTWQsT0FBT2tDLHdCQUF3QixDQUFDN0IscUJBQXFCZSxTQUFTLEVBQUVOO1lBQ3pHLDJDQUEyQztZQUMzQ2QsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRWEsTUFBTTtnQkFDOUJYLE9BQU82QjtnQkFDUFAsY0FBYztnQkFDZEMsVUFBVTtZQUNkO1FBQ0o7SUFDSjtJQUNBOzs7OztLQUtDLEdBQ0RTLGdCQUFnQkMsQ0FBQyxFQUFFO1FBQ2YsT0FBTztJQUNYO0FBQ0o7QUFDQWxDLDRCQUE0QixHQUFHRztBQUMvQixNQUFNRCx1QkFBdUIsQ0FBQ1EsVUFBWSxJQUFJUCxxQkFBcUJnQyxNQUFNQyxPQUFPLENBQUMxQixXQUFXQSxVQUFVO1FBQUNBO0tBQVE7QUFDL0dWLDRCQUE0QixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L2FjdGlvbi1wcm92aWRlcnMvY3VzdG9tQWN0aW9uUHJvdmlkZXIuanM/ZjM2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkgKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3VzdG9tQWN0aW9uUHJvdmlkZXIgPSBleHBvcnRzLkN1c3RvbUFjdGlvblByb3ZpZGVyID0gdm9pZCAwO1xuY29uc3QgYWN0aW9uRGVjb3JhdG9yXzEgPSByZXF1aXJlKFwiLi9hY3Rpb25EZWNvcmF0b3JcIik7XG5jb25zdCBhY3Rpb25Qcm92aWRlcl8xID0gcmVxdWlyZShcIi4vYWN0aW9uUHJvdmlkZXJcIik7XG5jb25zdCB3YWxsZXRfcHJvdmlkZXJzXzEgPSByZXF1aXJlKFwiLi4vd2FsbGV0LXByb3ZpZGVyc1wiKTtcbi8qKlxuICogQ3VzdG9tQWN0aW9uUHJvdmlkZXIgaXMgYSBjdXN0b20gYWN0aW9uIHByb3ZpZGVyIHRoYXQgYWxsb3dzIGZvciBjdXN0b20gYWN0aW9uIHJlZ2lzdHJhdGlvblxuICovXG5jbGFzcyBDdXN0b21BY3Rpb25Qcm92aWRlciBleHRlbmRzIGFjdGlvblByb3ZpZGVyXzEuQWN0aW9uUHJvdmlkZXIge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgQ3VzdG9tQWN0aW9uUHJvdmlkZXIgdGhhdCBkeW5hbWljYWxseSBhZGRzIGRlY29yYXRlZCBhY3Rpb24gbWV0aG9kc1xuICAgICAqXG4gICAgICogQHBhcmFtIGFjdGlvbnMgLSBBcnJheSBvZiBjdXN0b20gYWN0aW9ucyB0byBiZSBhZGRlZCB0byB0aGUgcHJvdmlkZXJcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihhY3Rpb25zKSB7XG4gICAgICAgIHN1cGVyKFwiY3VzdG9tXCIsIFtdKTtcbiAgICAgICAgYWN0aW9ucy5mb3JFYWNoKCh7IG5hbWUsIGRlc2NyaXB0aW9uLCBzY2hlbWEsIGludm9rZSB9KSA9PiB7XG4gICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgaW52b2tlIGZ1bmN0aW9uIGV4cGVjdHMgYSB3YWxsZXQgcHJvdmlkZXJcbiAgICAgICAgICAgIGNvbnN0IHRha2VzV2FsbGV0UHJvdmlkZXIgPSBpbnZva2UubGVuZ3RoID09PSAyO1xuICAgICAgICAgICAgLy8gRGVmaW5lIHRoZSBtZXRob2Qgb24gdGhlIHByb3RvdHlwZSB3aXRoIHRoZSBjb3JyZWN0IHNpZ25hdHVyZVxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEN1c3RvbUFjdGlvblByb3ZpZGVyLnByb3RvdHlwZSwgbmFtZSwge1xuICAgICAgICAgICAgICAgIHZhbHVlOiB0YWtlc1dhbGxldFByb3ZpZGVyXG4gICAgICAgICAgICAgICAgICAgID8gYXN5bmMgZnVuY3Rpb24gKHdhbGxldFByb3ZpZGVyLCBhcmdzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXJzZWRBcmdzID0gc2NoZW1hLnBhcnNlKGFyZ3MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IGludm9rZSh3YWxsZXRQcm92aWRlciwgcGFyc2VkQXJncyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgOiBhc3luYyBmdW5jdGlvbiAoYXJncykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcGFyc2VkQXJncyA9IHNjaGVtYS5wYXJzZShhcmdzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBpbnZva2UocGFyc2VkQXJncyk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIC8vIE1hbnVhbGx5IHNldCB0aGUgcGFyYW1ldGVyIG1ldGFkYXRhXG4gICAgICAgICAgICBjb25zdCBwYXJhbVR5cGVzID0gdGFrZXNXYWxsZXRQcm92aWRlciA/IFt3YWxsZXRfcHJvdmlkZXJzXzEuV2FsbGV0UHJvdmlkZXIsIE9iamVjdF0gOiBbT2JqZWN0XTtcbiAgICAgICAgICAgIFJlZmxlY3QuZGVmaW5lTWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBwYXJhbVR5cGVzLCBDdXN0b21BY3Rpb25Qcm92aWRlci5wcm90b3R5cGUsIG5hbWUpO1xuICAgICAgICAgICAgLy8gQXBwbHkgdGhlIGRlY29yYXRvciB1c2luZyBvcmlnaW5hbCBuYW1lXG4gICAgICAgICAgICBjb25zdCBkZWNvcmF0ZWRNZXRob2QgPSAoMCwgYWN0aW9uRGVjb3JhdG9yXzEuQ3JlYXRlQWN0aW9uKSh7XG4gICAgICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbixcbiAgICAgICAgICAgICAgICBzY2hlbWEsXG4gICAgICAgICAgICB9KShDdXN0b21BY3Rpb25Qcm92aWRlci5wcm90b3R5cGUsIG5hbWUsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoQ3VzdG9tQWN0aW9uUHJvdmlkZXIucHJvdG90eXBlLCBuYW1lKSk7XG4gICAgICAgICAgICAvLyBBZGQgdGhlIGRlY29yYXRlZCBtZXRob2QgdG8gdGhlIGluc3RhbmNlXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgbmFtZSwge1xuICAgICAgICAgICAgICAgIHZhbHVlOiBkZWNvcmF0ZWRNZXRob2QsXG4gICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDdXN0b20gYWN0aW9uIHByb3ZpZGVycyBhcmUgc3VwcG9ydGVkIG9uIGFsbCBuZXR3b3Jrc1xuICAgICAqXG4gICAgICogQHBhcmFtIF8gLSBUaGUgbmV0d29yayB0byBjaGVja3BvaW50U2F2ZXJcbiAgICAgKiBAcmV0dXJucyB0cnVlXG4gICAgICovXG4gICAgc3VwcG9ydHNOZXR3b3JrKF8pIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxufVxuZXhwb3J0cy5DdXN0b21BY3Rpb25Qcm92aWRlciA9IEN1c3RvbUFjdGlvblByb3ZpZGVyO1xuY29uc3QgY3VzdG9tQWN0aW9uUHJvdmlkZXIgPSAoYWN0aW9ucykgPT4gbmV3IEN1c3RvbUFjdGlvblByb3ZpZGVyKEFycmF5LmlzQXJyYXkoYWN0aW9ucykgPyBhY3Rpb25zIDogW2FjdGlvbnNdKTtcbmV4cG9ydHMuY3VzdG9tQWN0aW9uUHJvdmlkZXIgPSBjdXN0b21BY3Rpb25Qcm92aWRlcjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImN1c3RvbUFjdGlvblByb3ZpZGVyIiwiQ3VzdG9tQWN0aW9uUHJvdmlkZXIiLCJhY3Rpb25EZWNvcmF0b3JfMSIsInJlcXVpcmUiLCJhY3Rpb25Qcm92aWRlcl8xIiwid2FsbGV0X3Byb3ZpZGVyc18xIiwiQWN0aW9uUHJvdmlkZXIiLCJjb25zdHJ1Y3RvciIsImFjdGlvbnMiLCJmb3JFYWNoIiwibmFtZSIsImRlc2NyaXB0aW9uIiwic2NoZW1hIiwiaW52b2tlIiwidGFrZXNXYWxsZXRQcm92aWRlciIsImxlbmd0aCIsInByb3RvdHlwZSIsIndhbGxldFByb3ZpZGVyIiwiYXJncyIsInBhcnNlZEFyZ3MiLCJwYXJzZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiZW51bWVyYWJsZSIsInBhcmFtVHlwZXMiLCJXYWxsZXRQcm92aWRlciIsIlJlZmxlY3QiLCJkZWZpbmVNZXRhZGF0YSIsImRlY29yYXRlZE1ldGhvZCIsIkNyZWF0ZUFjdGlvbiIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInN1cHBvcnRzTmV0d29yayIsIl8iLCJBcnJheSIsImlzQXJyYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/customActionProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/erc20/constants.js":
/*!***************************************************************!*\
  !*** ../../agentkit/dist/action-providers/erc20/constants.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.abi = void 0;\nexports.abi = [\n    {\n        type: \"event\",\n        name: \"Approval\",\n        inputs: [\n            {\n                indexed: true,\n                name: \"owner\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                name: \"spender\",\n                type: \"address\"\n            },\n            {\n                indexed: false,\n                name: \"value\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        type: \"event\",\n        name: \"Transfer\",\n        inputs: [\n            {\n                indexed: true,\n                name: \"from\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                name: \"to\",\n                type: \"address\"\n            },\n            {\n                indexed: false,\n                name: \"value\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        type: \"function\",\n        name: \"allowance\",\n        stateMutability: \"view\",\n        inputs: [\n            {\n                name: \"owner\",\n                type: \"address\"\n            },\n            {\n                name: \"spender\",\n                type: \"address\"\n            }\n        ],\n        outputs: [\n            {\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        type: \"function\",\n        name: \"approve\",\n        stateMutability: \"nonpayable\",\n        inputs: [\n            {\n                name: \"spender\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                type: \"uint256\"\n            }\n        ],\n        outputs: [\n            {\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        type: \"function\",\n        name: \"balanceOf\",\n        stateMutability: \"view\",\n        inputs: [\n            {\n                name: \"account\",\n                type: \"address\"\n            }\n        ],\n        outputs: [\n            {\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        type: \"function\",\n        name: \"decimals\",\n        stateMutability: \"view\",\n        inputs: [],\n        outputs: [\n            {\n                type: \"uint8\"\n            }\n        ]\n    },\n    {\n        type: \"function\",\n        name: \"name\",\n        stateMutability: \"view\",\n        inputs: [],\n        outputs: [\n            {\n                type: \"string\"\n            }\n        ]\n    },\n    {\n        type: \"function\",\n        name: \"symbol\",\n        stateMutability: \"view\",\n        inputs: [],\n        outputs: [\n            {\n                type: \"string\"\n            }\n        ]\n    },\n    {\n        type: \"function\",\n        name: \"totalSupply\",\n        stateMutability: \"view\",\n        inputs: [],\n        outputs: [\n            {\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        type: \"function\",\n        name: \"transfer\",\n        stateMutability: \"nonpayable\",\n        inputs: [\n            {\n                name: \"recipient\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                type: \"uint256\"\n            }\n        ],\n        outputs: [\n            {\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        type: \"function\",\n        name: \"transferFrom\",\n        stateMutability: \"nonpayable\",\n        inputs: [\n            {\n                name: \"sender\",\n                type: \"address\"\n            },\n            {\n                name: \"recipient\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                type: \"uint256\"\n            }\n        ],\n        outputs: [\n            {\n                type: \"bool\"\n            }\n        ]\n    }\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/erc20/constants.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/erc20/erc20ActionProvider.js":
/*!*************************************************************************!*\
  !*** ../../agentkit/dist/action-providers/erc20/erc20ActionProvider.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __decorate = (void 0) && (void 0).__decorate || function(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (void 0) && (void 0).__metadata || function(k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.erc20ActionProvider = exports.ERC20ActionProvider = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\nconst actionProvider_1 = __webpack_require__(/*! ../actionProvider */ \"(rsc)/../../agentkit/dist/action-providers/actionProvider.js\");\nconst actionDecorator_1 = __webpack_require__(/*! ../actionDecorator */ \"(rsc)/../../agentkit/dist/action-providers/actionDecorator.js\");\nconst schemas_1 = __webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/erc20/schemas.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(rsc)/../../agentkit/dist/action-providers/erc20/constants.js\");\nconst viem_1 = __webpack_require__(/*! viem */ \"(rsc)/../../../node_modules/viem/_cjs/index.js\");\nconst wallet_providers_1 = __webpack_require__(/*! ../../wallet-providers */ \"(rsc)/../../agentkit/dist/wallet-providers/index.js\");\n/**\n * ERC20ActionProvider is an action provider for ERC20 tokens.\n */ class ERC20ActionProvider extends actionProvider_1.ActionProvider {\n    /**\n     * Constructor for the ERC20ActionProvider.\n     */ constructor(){\n        super(\"erc20\", []);\n        /**\n         * Checks if the ERC20 action provider supports the given network.\n         *\n         * @param _ - The network to check.\n         * @returns True if the ERC20 action provider supports the network, false otherwise.\n         */ this.supportsNetwork = (_)=>true;\n    }\n    /**\n     * Gets the balance of an ERC20 token.\n     *\n     * @param walletProvider - The wallet provider to get the balance from.\n     * @param args - The input arguments for the action.\n     * @returns A message containing the balance.\n     */ async getBalance(walletProvider, args) {\n        try {\n            const balance = await walletProvider.readContract({\n                address: args.contractAddress,\n                abi: constants_1.abi,\n                functionName: \"balanceOf\",\n                args: [\n                    walletProvider.getAddress()\n                ]\n            });\n            return `Balance of ${args.contractAddress} is ${balance}`;\n        } catch (error) {\n            return `Error getting balance: ${error}`;\n        }\n    }\n    /**\n     * Transfers a specified amount of an ERC20 token to a destination onchain.\n     *\n     * @param walletProvider - The wallet provider to transfer the asset from.\n     * @param args - The input arguments for the action.\n     * @returns A message containing the transfer details.\n     */ async transfer(walletProvider, args) {\n        try {\n            const hash = await walletProvider.sendTransaction({\n                to: args.contractAddress,\n                data: (0, viem_1.encodeFunctionData)({\n                    abi: constants_1.abi,\n                    functionName: \"transfer\",\n                    args: [\n                        args.destination,\n                        BigInt(args.amount)\n                    ]\n                })\n            });\n            await walletProvider.waitForTransactionReceipt(hash);\n            return `Transferred ${args.amount} of ${args.contractAddress} to ${args.destination}.\\nTransaction hash for the transfer: ${hash}`;\n        } catch (error) {\n            return `Error transferring the asset: ${error}`;\n        }\n    }\n}\nexports.ERC20ActionProvider = ERC20ActionProvider;\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"get_balance\",\n        description: `\n    This tool will get the balance of an ERC20 asset in the wallet. It takes the contract address as input.\n    `,\n        schema: schemas_1.GetBalanceSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.EvmWalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], ERC20ActionProvider.prototype, \"getBalance\", null);\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"transfer\",\n        description: `\n    This tool will transfer an ERC20 token from the wallet to another onchain address.\n\nIt takes the following inputs:\n- amount: The amount to transfer\n- contractAddress: The contract address of the token to transfer\n- destination: Where to send the funds (can be an onchain address, ENS 'example.eth', or Basename 'example.base.eth')\n\nImportant notes:\n- Ensure sufficient balance of the input asset before transferring\n- When sending native assets (e.g. 'eth' on base-mainnet), ensure there is sufficient balance for the transfer itself AND the gas cost of this transfer\n    `,\n        schema: schemas_1.TransferSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.EvmWalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], ERC20ActionProvider.prototype, \"transfer\", null);\nconst erc20ActionProvider = ()=>new ERC20ActionProvider();\nexports.erc20ActionProvider = erc20ActionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/erc20/erc20ActionProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/erc20/index.js":
/*!***********************************************************!*\
  !*** ../../agentkit/dist/action-providers/erc20/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./erc20ActionProvider */ \"(rsc)/../../agentkit/dist/action-providers/erc20/erc20ActionProvider.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2VyYzIwL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQixJQUFJRyxPQUFPUCxPQUFPUSx3QkFBd0IsQ0FBQ0wsR0FBR0M7SUFDOUMsSUFBSSxDQUFDRyxRQUFTLFVBQVNBLE9BQU8sQ0FBQ0osRUFBRU0sVUFBVSxHQUFHRixLQUFLRyxRQUFRLElBQUlILEtBQUtJLFlBQVksR0FBRztRQUNqRkosT0FBTztZQUFFSyxZQUFZO1lBQU1DLEtBQUs7Z0JBQWEsT0FBT1YsQ0FBQyxDQUFDQyxFQUFFO1lBQUU7UUFBRTtJQUM5RDtJQUNBSixPQUFPYyxjQUFjLENBQUNaLEdBQUdHLElBQUlFO0FBQ2pDLElBQU0sU0FBU0wsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSVcsZUFBZSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFlBQVksSUFBSyxTQUFTWixDQUFDLEVBQUVhLFFBQU87SUFDakUsSUFBSyxJQUFJQyxLQUFLZCxFQUFHLElBQUljLE1BQU0sYUFBYSxDQUFDakIsT0FBT2tCLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNKLFVBQVNDLElBQUlsQixnQkFBZ0JpQixVQUFTYixHQUFHYztBQUMzSDtBQUNBakIsOENBQTZDO0lBQUVxQixPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdETixhQUFhTyxtQkFBT0EsQ0FBQyxzR0FBdUIsR0FBR04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY29pbmJhc2UvY2RwLWxhbmdjaGFpbi1jaGF0Ym90LWV4YW1wbGUvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2VyYzIwL2luZGV4LmpzP2IzNTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9lcmMyMEFjdGlvblByb3ZpZGVyXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6WyJfX2NyZWF0ZUJpbmRpbmciLCJPYmplY3QiLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlc2MiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfX2VzTW9kdWxlIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZGVmaW5lUHJvcGVydHkiLCJfX2V4cG9ydFN0YXIiLCJleHBvcnRzIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInZhbHVlIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/erc20/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/erc20/schemas.js":
/*!*************************************************************!*\
  !*** ../../agentkit/dist/action-providers/erc20/schemas.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetBalanceSchema = exports.TransferSchema = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\n/**\n * Input schema for transfer action.\n */ exports.TransferSchema = zod_1.z.object({\n    amount: zod_1.z.custom().describe(\"The amount of the asset to transfer\"),\n    contractAddress: zod_1.z.string().describe(\"The contract address of the token to transfer\"),\n    destination: zod_1.z.string().describe(\"The destination to transfer the funds\")\n}).strip().describe(\"Instructions for transferring assets\");\n/**\n * Input schema for get balance action.\n */ exports.GetBalanceSchema = zod_1.z.object({\n    contractAddress: zod_1.z.string().describe(\"The contract address of the token to get the balance for\")\n}).strip().describe(\"Instructions for getting wallet balance\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2VyYzIwL3NjaGVtYXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHdCQUF3QixHQUFHQSxzQkFBc0IsR0FBRyxLQUFLO0FBQ3pELE1BQU1JLFFBQVFDLG1CQUFPQSxDQUFDLHlEQUFLO0FBQzNCOztDQUVDLEdBQ0RMLHNCQUFzQixHQUFHSSxNQUFNRSxDQUFDLENBQzNCQyxNQUFNLENBQUM7SUFDUkMsUUFBUUosTUFBTUUsQ0FBQyxDQUFDRyxNQUFNLEdBQUdDLFFBQVEsQ0FBQztJQUNsQ0MsaUJBQWlCUCxNQUFNRSxDQUFDLENBQUNNLE1BQU0sR0FBR0YsUUFBUSxDQUFDO0lBQzNDRyxhQUFhVCxNQUFNRSxDQUFDLENBQUNNLE1BQU0sR0FBR0YsUUFBUSxDQUFDO0FBQzNDLEdBQ0tJLEtBQUssR0FDTEosUUFBUSxDQUFDO0FBQ2Q7O0NBRUMsR0FDRFYsd0JBQXdCLEdBQUdJLE1BQU1FLENBQUMsQ0FDN0JDLE1BQU0sQ0FBQztJQUNSSSxpQkFBaUJQLE1BQU1FLENBQUMsQ0FDbkJNLE1BQU0sR0FDTkYsUUFBUSxDQUFDO0FBQ2xCLEdBQ0tJLEtBQUssR0FDTEosUUFBUSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNvaW5iYXNlL2NkcC1sYW5nY2hhaW4tY2hhdGJvdC1leGFtcGxlLy4uLy4uL2FnZW50a2l0L2Rpc3QvYWN0aW9uLXByb3ZpZGVycy9lcmMyMC9zY2hlbWFzLmpzP2JiYmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkdldEJhbGFuY2VTY2hlbWEgPSBleHBvcnRzLlRyYW5zZmVyU2NoZW1hID0gdm9pZCAwO1xuY29uc3Qgem9kXzEgPSByZXF1aXJlKFwiem9kXCIpO1xuLyoqXG4gKiBJbnB1dCBzY2hlbWEgZm9yIHRyYW5zZmVyIGFjdGlvbi5cbiAqL1xuZXhwb3J0cy5UcmFuc2ZlclNjaGVtYSA9IHpvZF8xLnpcbiAgICAub2JqZWN0KHtcbiAgICBhbW91bnQ6IHpvZF8xLnouY3VzdG9tKCkuZGVzY3JpYmUoXCJUaGUgYW1vdW50IG9mIHRoZSBhc3NldCB0byB0cmFuc2ZlclwiKSxcbiAgICBjb250cmFjdEFkZHJlc3M6IHpvZF8xLnouc3RyaW5nKCkuZGVzY3JpYmUoXCJUaGUgY29udHJhY3QgYWRkcmVzcyBvZiB0aGUgdG9rZW4gdG8gdHJhbnNmZXJcIiksXG4gICAgZGVzdGluYXRpb246IHpvZF8xLnouc3RyaW5nKCkuZGVzY3JpYmUoXCJUaGUgZGVzdGluYXRpb24gdG8gdHJhbnNmZXIgdGhlIGZ1bmRzXCIpLFxufSlcbiAgICAuc3RyaXAoKVxuICAgIC5kZXNjcmliZShcIkluc3RydWN0aW9ucyBmb3IgdHJhbnNmZXJyaW5nIGFzc2V0c1wiKTtcbi8qKlxuICogSW5wdXQgc2NoZW1hIGZvciBnZXQgYmFsYW5jZSBhY3Rpb24uXG4gKi9cbmV4cG9ydHMuR2V0QmFsYW5jZVNjaGVtYSA9IHpvZF8xLnpcbiAgICAub2JqZWN0KHtcbiAgICBjb250cmFjdEFkZHJlc3M6IHpvZF8xLnpcbiAgICAgICAgLnN0cmluZygpXG4gICAgICAgIC5kZXNjcmliZShcIlRoZSBjb250cmFjdCBhZGRyZXNzIG9mIHRoZSB0b2tlbiB0byBnZXQgdGhlIGJhbGFuY2UgZm9yXCIpLFxufSlcbiAgICAuc3RyaXAoKVxuICAgIC5kZXNjcmliZShcIkluc3RydWN0aW9ucyBmb3IgZ2V0dGluZyB3YWxsZXQgYmFsYW5jZVwiKTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkdldEJhbGFuY2VTY2hlbWEiLCJUcmFuc2ZlclNjaGVtYSIsInpvZF8xIiwicmVxdWlyZSIsInoiLCJvYmplY3QiLCJhbW91bnQiLCJjdXN0b20iLCJkZXNjcmliZSIsImNvbnRyYWN0QWRkcmVzcyIsInN0cmluZyIsImRlc3RpbmF0aW9uIiwic3RyaXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/erc20/schemas.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/erc721/constants.js":
/*!****************************************************************!*\
  !*** ../../agentkit/dist/action-providers/erc721/constants.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ERC721_ABI = void 0;\nexports.ERC721_ABI = [\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"tokenId\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"mint\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes4\",\n                name: \"interfaceId\",\n                type: \"bytes4\"\n            }\n        ],\n        name: \"supportsInterface\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"tokenId\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"Transfer\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"approved\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"tokenId\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"Approval\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"operator\",\n                type: \"address\"\n            },\n            {\n                indexed: false,\n                internalType: \"bool\",\n                name: \"approved\",\n                type: \"bool\"\n            }\n        ],\n        name: \"ApprovalForAll\",\n        type: \"event\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\"\n            }\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"balance\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"tokenId\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"ownerOf\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"tokenId\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"data\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"safeTransferFrom\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"tokenId\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"safeTransferFrom\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"tokenId\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"transferFrom\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"tokenId\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"approve\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"operator\",\n                type: \"address\"\n            },\n            {\n                internalType: \"bool\",\n                name: \"approved\",\n                type: \"bool\"\n            }\n        ],\n        name: \"setApprovalForAll\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"tokenId\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"getApproved\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"operator\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"operator\",\n                type: \"address\"\n            }\n        ],\n        name: \"isApprovedForAll\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    }\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/erc721/constants.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/erc721/erc721ActionProvider.js":
/*!***************************************************************************!*\
  !*** ../../agentkit/dist/action-providers/erc721/erc721ActionProvider.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __decorate = (void 0) && (void 0).__decorate || function(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (void 0) && (void 0).__metadata || function(k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.erc721ActionProvider = exports.Erc721ActionProvider = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\nconst actionProvider_1 = __webpack_require__(/*! ../actionProvider */ \"(rsc)/../../agentkit/dist/action-providers/actionProvider.js\");\nconst wallet_providers_1 = __webpack_require__(/*! ../../wallet-providers */ \"(rsc)/../../agentkit/dist/wallet-providers/index.js\");\nconst actionDecorator_1 = __webpack_require__(/*! ../actionDecorator */ \"(rsc)/../../agentkit/dist/action-providers/actionDecorator.js\");\nconst schemas_1 = __webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/erc721/schemas.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(rsc)/../../agentkit/dist/action-providers/erc721/constants.js\");\nconst viem_1 = __webpack_require__(/*! viem */ \"(rsc)/../../../node_modules/viem/_cjs/index.js\");\n/**\n * Erc721ActionProvider is an action provider for Erc721 contract interactions.\n */ class Erc721ActionProvider extends actionProvider_1.ActionProvider {\n    /**\n     * Constructor for the Erc721ActionProvider class.\n     */ constructor(){\n        super(\"erc721\", []);\n        /**\n         * Checks if the Erc721 action provider supports the given network.\n         *\n         * @param network - The network to check.\n         * @returns True if the Erc721 action provider supports the network, false otherwise.\n         */ this.supportsNetwork = (network)=>network.protocolFamily === \"evm\";\n    }\n    /**\n     * Mints an NFT (ERC-721) to a specified destination address onchain.\n     *\n     * @param walletProvider - The wallet provider to mint the NFT from.\n     * @param args - The input arguments for the action.\n     * @returns A message containing the NFT mint details.\n     */ async mint(walletProvider, args) {\n        try {\n            const data = (0, viem_1.encodeFunctionData)({\n                abi: constants_1.ERC721_ABI,\n                functionName: \"mint\",\n                args: [\n                    args.destination,\n                    1n\n                ]\n            });\n            const hash = await walletProvider.sendTransaction({\n                to: args.contractAddress,\n                data\n            });\n            await walletProvider.waitForTransactionReceipt(hash);\n            return `Successfully minted NFT ${args.contractAddress} to ${args.destination}`;\n        } catch (error) {\n            return `Error minting NFT ${args.contractAddress} to ${args.destination}: ${error}`;\n        }\n    }\n    /**\n     * Transfers an NFT (ERC721 token) to a destination address.\n     *\n     * @param walletProvider - The wallet provider to transfer the NFT from.\n     * @param args - The input arguments for the action.\n     * @returns A message containing the transfer details.\n     */ async transfer(walletProvider, args) {\n        try {\n            const data = (0, viem_1.encodeFunctionData)({\n                abi: constants_1.ERC721_ABI,\n                functionName: \"transferFrom\",\n                args: [\n                    args.fromAddress,\n                    args.destination,\n                    BigInt(args.tokenId)\n                ]\n            });\n            const hash = await walletProvider.sendTransaction({\n                to: args.contractAddress,\n                data\n            });\n            await walletProvider.waitForTransactionReceipt(hash);\n            return `Successfully transferred NFT ${args.contractAddress} with tokenId ${args.tokenId} to ${args.destination}`;\n        } catch (error) {\n            return `Error transferring NFT ${args.contractAddress} with tokenId ${args.tokenId} to ${args.destination}: ${error}`;\n        }\n    }\n    /**\n     * Gets the NFT balance for a given address and contract.\n     *\n     * @param walletProvider - The wallet provider to check the balance with.\n     * @param args - The input arguments for the action.\n     * @returns A message containing the NFT balance details.\n     */ async getBalance(walletProvider, args) {\n        try {\n            const address = args.address || walletProvider.getAddress();\n            const balance = await walletProvider.readContract({\n                address: args.contractAddress,\n                abi: constants_1.ERC721_ABI,\n                functionName: \"balanceOf\",\n                args: [\n                    address\n                ]\n            });\n            return `Balance of NFTs for contract ${args.contractAddress} at address ${address} is ${balance}`;\n        } catch (error) {\n            return `Error getting NFT balance for contract ${args.contractAddress}: ${error}`;\n        }\n    }\n}\nexports.Erc721ActionProvider = Erc721ActionProvider;\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"mint\",\n        description: `\nThis tool will mint an NFT (ERC-721) to a specified destination address onchain via a contract invocation. \nIt takes the contract address of the NFT onchain and the destination address onchain that will receive the NFT as inputs. \nDo not use the contract address as the destination address. If you are unsure of the destination address, please ask the user before proceeding.\n`,\n        schema: schemas_1.MintSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.EvmWalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], Erc721ActionProvider.prototype, \"mint\", null);\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"transfer\",\n        description: `\nThis tool will transfer an NFT (ERC721 token) from the wallet to another onchain address.\n\nIt takes the following inputs:\n- contractAddress: The NFT contract address\n- tokenId: The ID of the specific NFT to transfer\n- destination: Onchain address to send the NFT\n\nImportant notes:\n- Ensure you have ownership of the NFT before attempting transfer\n- Ensure there is sufficient native token balance for gas fees\n- The wallet must either own the NFT or have approval to transfer it\n`,\n        schema: schemas_1.TransferSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.EvmWalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], Erc721ActionProvider.prototype, \"transfer\", null);\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"get_balance\",\n        description: `\nThis tool will check the NFT (ERC721 token) balance for a given address.\n\nIt takes the following inputs:\n- contractAddress: The NFT contract address to check balance for\n- address: (Optional) The address to check NFT balance for. If not provided, uses the wallet's address\n`,\n        schema: schemas_1.GetBalanceSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.EvmWalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], Erc721ActionProvider.prototype, \"getBalance\", null);\nconst erc721ActionProvider = ()=>new Erc721ActionProvider();\nexports.erc721ActionProvider = erc721ActionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/erc721/erc721ActionProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/erc721/index.js":
/*!************************************************************!*\
  !*** ../../agentkit/dist/action-providers/erc721/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./erc721ActionProvider */ \"(rsc)/../../agentkit/dist/action-providers/erc721/erc721ActionProvider.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2VyYzcyMS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0IsSUFBSUcsT0FBT1AsT0FBT1Esd0JBQXdCLENBQUNMLEdBQUdDO0lBQzlDLElBQUksQ0FBQ0csUUFBUyxVQUFTQSxPQUFPLENBQUNKLEVBQUVNLFVBQVUsR0FBR0YsS0FBS0csUUFBUSxJQUFJSCxLQUFLSSxZQUFZLEdBQUc7UUFDakZKLE9BQU87WUFBRUssWUFBWTtZQUFNQyxLQUFLO2dCQUFhLE9BQU9WLENBQUMsQ0FBQ0MsRUFBRTtZQUFFO1FBQUU7SUFDOUQ7SUFDQUosT0FBT2MsY0FBYyxDQUFDWixHQUFHRyxJQUFJRTtBQUNqQyxJQUFNLFNBQVNMLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlXLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBU1osQ0FBQyxFQUFFYSxRQUFPO0lBQ2pFLElBQUssSUFBSUMsS0FBS2QsRUFBRyxJQUFJYyxNQUFNLGFBQWEsQ0FBQ2pCLE9BQU9rQixTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixVQUFTQyxJQUFJbEIsZ0JBQWdCaUIsVUFBU2IsR0FBR2M7QUFDM0g7QUFDQWpCLDhDQUE2QztJQUFFcUIsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RE4sYUFBYU8sbUJBQU9BLENBQUMseUdBQXdCLEdBQUdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNvaW5iYXNlL2NkcC1sYW5nY2hhaW4tY2hhdGJvdC1leGFtcGxlLy4uLy4uL2FnZW50a2l0L2Rpc3QvYWN0aW9uLXByb3ZpZGVycy9lcmM3MjEvaW5kZXguanM/ODUxMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2VyYzcyMUFjdGlvblByb3ZpZGVyXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6WyJfX2NyZWF0ZUJpbmRpbmciLCJPYmplY3QiLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlc2MiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfX2VzTW9kdWxlIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZGVmaW5lUHJvcGVydHkiLCJfX2V4cG9ydFN0YXIiLCJleHBvcnRzIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInZhbHVlIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/erc721/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/erc721/schemas.js":
/*!**************************************************************!*\
  !*** ../../agentkit/dist/action-providers/erc721/schemas.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.TransferSchema = exports.MintSchema = exports.GetBalanceSchema = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\n/**\n * Input schema for get NFT (ERC721) balance action.\n */ exports.GetBalanceSchema = zod_1.z.object({\n    contractAddress: zod_1.z.string().describe(\"The NFT contract address to check balance for\"),\n    address: zod_1.z.string().optional().describe(\"The address to check NFT balance for. If not provided, uses the wallet's default address\")\n}).strip().describe(\"Instructions for getting NFT balance\");\n/**\n * Input schema for mint NFT (ERC721) action.\n */ exports.MintSchema = zod_1.z.object({\n    contractAddress: zod_1.z.string().describe(\"The contract address of the NFT to mint\"),\n    destination: zod_1.z.string().describe(\"The onchain destination address that will receive the NFT\")\n}).strip().describe(\"Instructions for minting an NFT\");\n/**\n * Input schema for NFT (ERC721) transfer action.\n */ exports.TransferSchema = zod_1.z.object({\n    contractAddress: zod_1.z.string().describe(\"The NFT contract address to interact with\"),\n    tokenId: zod_1.z.string().describe(\"The ID of the NFT to transfer\"),\n    destination: zod_1.z.string().describe(\"The destination to transfer the NFT, e.g. `0x58dBecc0894Ab4C24F98a0e684c989eD07e4e027`, `example.eth`, `example.base.eth`\"),\n    fromAddress: zod_1.z.string().optional().describe(\"The address to transfer from. If not provided, defaults to the wallet's default address\")\n}).strip().describe(\"Input schema for transferring an NFT\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2VyYzcyMS9zY2hlbWFzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxzQkFBc0IsR0FBR0Esa0JBQWtCLEdBQUdBLHdCQUF3QixHQUFHLEtBQUs7QUFDOUUsTUFBTUssUUFBUUMsbUJBQU9BLENBQUMseURBQUs7QUFDM0I7O0NBRUMsR0FDRE4sd0JBQXdCLEdBQUdLLE1BQU1FLENBQUMsQ0FDN0JDLE1BQU0sQ0FBQztJQUNSQyxpQkFBaUJKLE1BQU1FLENBQUMsQ0FBQ0csTUFBTSxHQUFHQyxRQUFRLENBQUM7SUFDM0NDLFNBQVNQLE1BQU1FLENBQUMsQ0FDWEcsTUFBTSxHQUNORyxRQUFRLEdBQ1JGLFFBQVEsQ0FBQztBQUNsQixHQUNLRyxLQUFLLEdBQ0xILFFBQVEsQ0FBQztBQUNkOztDQUVDLEdBQ0RYLGtCQUFrQixHQUFHSyxNQUFNRSxDQUFDLENBQ3ZCQyxNQUFNLENBQUM7SUFDUkMsaUJBQWlCSixNQUFNRSxDQUFDLENBQUNHLE1BQU0sR0FBR0MsUUFBUSxDQUFDO0lBQzNDSSxhQUFhVixNQUFNRSxDQUFDLENBQUNHLE1BQU0sR0FBR0MsUUFBUSxDQUFDO0FBQzNDLEdBQ0tHLEtBQUssR0FDTEgsUUFBUSxDQUFDO0FBQ2Q7O0NBRUMsR0FDRFgsc0JBQXNCLEdBQUdLLE1BQU1FLENBQUMsQ0FDM0JDLE1BQU0sQ0FBQztJQUNSQyxpQkFBaUJKLE1BQU1FLENBQUMsQ0FBQ0csTUFBTSxHQUFHQyxRQUFRLENBQUM7SUFDM0NLLFNBQVNYLE1BQU1FLENBQUMsQ0FBQ0csTUFBTSxHQUFHQyxRQUFRLENBQUM7SUFDbkNJLGFBQWFWLE1BQU1FLENBQUMsQ0FDZkcsTUFBTSxHQUNOQyxRQUFRLENBQUM7SUFDZE0sYUFBYVosTUFBTUUsQ0FBQyxDQUNmRyxNQUFNLEdBQ05HLFFBQVEsR0FDUkYsUUFBUSxDQUFDO0FBQ2xCLEdBQ0tHLEtBQUssR0FDTEgsUUFBUSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNvaW5iYXNlL2NkcC1sYW5nY2hhaW4tY2hhdGJvdC1leGFtcGxlLy4uLy4uL2FnZW50a2l0L2Rpc3QvYWN0aW9uLXByb3ZpZGVycy9lcmM3MjEvc2NoZW1hcy5qcz82YTA5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UcmFuc2ZlclNjaGVtYSA9IGV4cG9ydHMuTWludFNjaGVtYSA9IGV4cG9ydHMuR2V0QmFsYW5jZVNjaGVtYSA9IHZvaWQgMDtcbmNvbnN0IHpvZF8xID0gcmVxdWlyZShcInpvZFwiKTtcbi8qKlxuICogSW5wdXQgc2NoZW1hIGZvciBnZXQgTkZUIChFUkM3MjEpIGJhbGFuY2UgYWN0aW9uLlxuICovXG5leHBvcnRzLkdldEJhbGFuY2VTY2hlbWEgPSB6b2RfMS56XG4gICAgLm9iamVjdCh7XG4gICAgY29udHJhY3RBZGRyZXNzOiB6b2RfMS56LnN0cmluZygpLmRlc2NyaWJlKFwiVGhlIE5GVCBjb250cmFjdCBhZGRyZXNzIHRvIGNoZWNrIGJhbGFuY2UgZm9yXCIpLFxuICAgIGFkZHJlc3M6IHpvZF8xLnpcbiAgICAgICAgLnN0cmluZygpXG4gICAgICAgIC5vcHRpb25hbCgpXG4gICAgICAgIC5kZXNjcmliZShcIlRoZSBhZGRyZXNzIHRvIGNoZWNrIE5GVCBiYWxhbmNlIGZvci4gSWYgbm90IHByb3ZpZGVkLCB1c2VzIHRoZSB3YWxsZXQncyBkZWZhdWx0IGFkZHJlc3NcIiksXG59KVxuICAgIC5zdHJpcCgpXG4gICAgLmRlc2NyaWJlKFwiSW5zdHJ1Y3Rpb25zIGZvciBnZXR0aW5nIE5GVCBiYWxhbmNlXCIpO1xuLyoqXG4gKiBJbnB1dCBzY2hlbWEgZm9yIG1pbnQgTkZUIChFUkM3MjEpIGFjdGlvbi5cbiAqL1xuZXhwb3J0cy5NaW50U2NoZW1hID0gem9kXzEuelxuICAgIC5vYmplY3Qoe1xuICAgIGNvbnRyYWN0QWRkcmVzczogem9kXzEuei5zdHJpbmcoKS5kZXNjcmliZShcIlRoZSBjb250cmFjdCBhZGRyZXNzIG9mIHRoZSBORlQgdG8gbWludFwiKSxcbiAgICBkZXN0aW5hdGlvbjogem9kXzEuei5zdHJpbmcoKS5kZXNjcmliZShcIlRoZSBvbmNoYWluIGRlc3RpbmF0aW9uIGFkZHJlc3MgdGhhdCB3aWxsIHJlY2VpdmUgdGhlIE5GVFwiKSxcbn0pXG4gICAgLnN0cmlwKClcbiAgICAuZGVzY3JpYmUoXCJJbnN0cnVjdGlvbnMgZm9yIG1pbnRpbmcgYW4gTkZUXCIpO1xuLyoqXG4gKiBJbnB1dCBzY2hlbWEgZm9yIE5GVCAoRVJDNzIxKSB0cmFuc2ZlciBhY3Rpb24uXG4gKi9cbmV4cG9ydHMuVHJhbnNmZXJTY2hlbWEgPSB6b2RfMS56XG4gICAgLm9iamVjdCh7XG4gICAgY29udHJhY3RBZGRyZXNzOiB6b2RfMS56LnN0cmluZygpLmRlc2NyaWJlKFwiVGhlIE5GVCBjb250cmFjdCBhZGRyZXNzIHRvIGludGVyYWN0IHdpdGhcIiksXG4gICAgdG9rZW5JZDogem9kXzEuei5zdHJpbmcoKS5kZXNjcmliZShcIlRoZSBJRCBvZiB0aGUgTkZUIHRvIHRyYW5zZmVyXCIpLFxuICAgIGRlc3RpbmF0aW9uOiB6b2RfMS56XG4gICAgICAgIC5zdHJpbmcoKVxuICAgICAgICAuZGVzY3JpYmUoXCJUaGUgZGVzdGluYXRpb24gdG8gdHJhbnNmZXIgdGhlIE5GVCwgZS5nLiBgMHg1OGRCZWNjMDg5NEFiNEMyNEY5OGEwZTY4NGM5ODllRDA3ZTRlMDI3YCwgYGV4YW1wbGUuZXRoYCwgYGV4YW1wbGUuYmFzZS5ldGhgXCIpLFxuICAgIGZyb21BZGRyZXNzOiB6b2RfMS56XG4gICAgICAgIC5zdHJpbmcoKVxuICAgICAgICAub3B0aW9uYWwoKVxuICAgICAgICAuZGVzY3JpYmUoXCJUaGUgYWRkcmVzcyB0byB0cmFuc2ZlciBmcm9tLiBJZiBub3QgcHJvdmlkZWQsIGRlZmF1bHRzIHRvIHRoZSB3YWxsZXQncyBkZWZhdWx0IGFkZHJlc3NcIiksXG59KVxuICAgIC5zdHJpcCgpXG4gICAgLmRlc2NyaWJlKFwiSW5wdXQgc2NoZW1hIGZvciB0cmFuc2ZlcnJpbmcgYW4gTkZUXCIpO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVHJhbnNmZXJTY2hlbWEiLCJNaW50U2NoZW1hIiwiR2V0QmFsYW5jZVNjaGVtYSIsInpvZF8xIiwicmVxdWlyZSIsInoiLCJvYmplY3QiLCJjb250cmFjdEFkZHJlc3MiLCJzdHJpbmciLCJkZXNjcmliZSIsImFkZHJlc3MiLCJvcHRpb25hbCIsInN0cmlwIiwiZGVzdGluYXRpb24iLCJ0b2tlbklkIiwiZnJvbUFkZHJlc3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/erc721/schemas.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/farcaster/farcasterActionProvider.js":
/*!*********************************************************************************!*\
  !*** ../../agentkit/dist/action-providers/farcaster/farcasterActionProvider.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __decorate = (void 0) && (void 0).__decorate || function(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (void 0) && (void 0).__metadata || function(k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.farcasterActionProvider = exports.FarcasterActionProvider = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\nconst actionProvider_1 = __webpack_require__(/*! ../actionProvider */ \"(rsc)/../../agentkit/dist/action-providers/actionProvider.js\");\nconst actionDecorator_1 = __webpack_require__(/*! ../actionDecorator */ \"(rsc)/../../agentkit/dist/action-providers/actionDecorator.js\");\nconst schemas_1 = __webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/farcaster/schemas.js\");\n/**\n * FarcasterActionProvider is an action provider for Farcaster.\n */ class FarcasterActionProvider extends actionProvider_1.ActionProvider {\n    /**\n     * Constructor for the FarcasterActionProvider class.\n     *\n     * @param config - The configuration options for the FarcasterActionProvider.\n     */ constructor(config = {}){\n        super(\"farcaster\", []);\n        /**\n         * Checks if the Farcaster action provider supports the given network.\n         *\n         * @param _ - The network to check.\n         * @returns True if the Farcaster action provider supports the network, false otherwise.\n         */ this.supportsNetwork = (_)=>true;\n        const neynarApiKey = config.neynarApiKey || process.env.NEYNAR_API_KEY;\n        const signerUuid = config.signerUuid || process.env.NEYNAR_MANAGER_SIGNER;\n        const agentFid = config.agentFid || process.env.AGENT_FID;\n        if (!neynarApiKey) {\n            throw new Error(\"NEYNAR_API_KEY is not configured.\");\n        }\n        if (!signerUuid) {\n            throw new Error(\"NEYNAR_MANAGER_SIGNER is not configured.\");\n        }\n        if (!agentFid) {\n            throw new Error(\"AGENT_FID is not configured.\");\n        }\n        this.neynarApiKey = neynarApiKey;\n        this.signerUuid = signerUuid;\n        this.agentFid = agentFid;\n    }\n    /**\n     * Retrieves agent's Farcaster account details.\n     *\n     * @param _ - The input arguments for the action.\n     * @returns A message containing account details for the agent's Farcaster account.\n     */ async accountDetails(_) {\n        try {\n            const headers = {\n                accept: \"application/json\",\n                \"x-api-key\": this.neynarApiKey,\n                \"x-neynar-experimental\": \"true\"\n            };\n            const response = await fetch(`https://api.neynar.com/v2/farcaster/user/bulk?fids=${this.agentFid}`, {\n                method: \"GET\",\n                headers\n            });\n            const { users } = await response.json();\n            return `Successfully retrieved Farcaster account details:\\n${JSON.stringify(users[0])}`;\n        } catch (error) {\n            return `Error retrieving Farcaster account details:\\n${error}`;\n        }\n    }\n    /**\n     * Posts a cast on Farcaster.\n     *\n     * @param args - The input arguments for the action.\n     * @returns A message indicating the success or failure of the cast posting.\n     */ async postCast(args) {\n        try {\n            const headers = {\n                api_key: this.neynarApiKey,\n                \"Content-Type\": \"application/json\"\n            };\n            const response = await fetch(\"https://api.neynar.com/v2/farcaster/cast\", {\n                method: \"POST\",\n                headers,\n                body: JSON.stringify({\n                    signer_uuid: this.signerUuid,\n                    text: args.castText\n                })\n            });\n            const data = await response.json();\n            return `Successfully posted cast to Farcaster:\\n${JSON.stringify(data)}`;\n        } catch (error) {\n            return `Error posting to Farcaster:\\n${error}`;\n        }\n    }\n}\nexports.FarcasterActionProvider = FarcasterActionProvider;\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"account_details\",\n        description: `\nThis tool will retrieve the account details for the agent's Farcaster account.\nThe tool takes the FID of the agent's account.\n\nA successful response will return a message with the API response as a JSON payload:\n    { \"object\": \"user\", \"fid\": 193,\" username\": \"derek\", \"display_name\": \"Derek\", ... }\n\nA failure response will return a message with the Farcaster API request error:\n    Unable to retrieve account details.\n`,\n        schema: schemas_1.FarcasterAccountDetailsSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], FarcasterActionProvider.prototype, \"accountDetails\", null);\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"post_cast\",\n        description: `\nThis tool will post a cast to Farcaster. The tool takes the text of the cast as input. Casts can be maximum 280 characters.\n\nA successful response will return a message with the API response as a JSON payload:\n    {}\n\nA failure response will return a message with the Farcaster API request error:\n    You are not allowed to post a cast with duplicate content.\n`,\n        schema: schemas_1.FarcasterPostCastSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], FarcasterActionProvider.prototype, \"postCast\", null);\nconst farcasterActionProvider = (config = {})=>new FarcasterActionProvider(config);\nexports.farcasterActionProvider = farcasterActionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/farcaster/farcasterActionProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/farcaster/index.js":
/*!***************************************************************!*\
  !*** ../../agentkit/dist/action-providers/farcaster/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/farcaster/schemas.js\"), exports);\n__exportStar(__webpack_require__(/*! ./farcasterActionProvider */ \"(rsc)/../../agentkit/dist/action-providers/farcaster/farcasterActionProvider.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2ZhcmNhc3Rlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0IsSUFBSUcsT0FBT1AsT0FBT1Esd0JBQXdCLENBQUNMLEdBQUdDO0lBQzlDLElBQUksQ0FBQ0csUUFBUyxVQUFTQSxPQUFPLENBQUNKLEVBQUVNLFVBQVUsR0FBR0YsS0FBS0csUUFBUSxJQUFJSCxLQUFLSSxZQUFZLEdBQUc7UUFDakZKLE9BQU87WUFBRUssWUFBWTtZQUFNQyxLQUFLO2dCQUFhLE9BQU9WLENBQUMsQ0FBQ0MsRUFBRTtZQUFFO1FBQUU7SUFDOUQ7SUFDQUosT0FBT2MsY0FBYyxDQUFDWixHQUFHRyxJQUFJRTtBQUNqQyxJQUFNLFNBQVNMLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlXLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBU1osQ0FBQyxFQUFFYSxRQUFPO0lBQ2pFLElBQUssSUFBSUMsS0FBS2QsRUFBRyxJQUFJYyxNQUFNLGFBQWEsQ0FBQ2pCLE9BQU9rQixTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixVQUFTQyxJQUFJbEIsZ0JBQWdCaUIsVUFBU2IsR0FBR2M7QUFDM0g7QUFDQWpCLDhDQUE2QztJQUFFcUIsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RE4sYUFBYU8sbUJBQU9BLENBQUMsa0ZBQVcsR0FBR047QUFDbkNELGFBQWFPLG1CQUFPQSxDQUFDLGtIQUEyQixHQUFHTiIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L2FjdGlvbi1wcm92aWRlcnMvZmFyY2FzdGVyL2luZGV4LmpzP2EwMWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zY2hlbWFzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9mYXJjYXN0ZXJBY3Rpb25Qcm92aWRlclwiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19lc01vZHVsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsImRlZmluZVByb3BlcnR5IiwiX19leHBvcnRTdGFyIiwiZXhwb3J0cyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ2YWx1ZSIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/farcaster/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/farcaster/schemas.js":
/*!*****************************************************************!*\
  !*** ../../agentkit/dist/action-providers/farcaster/schemas.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.FarcasterPostCastSchema = exports.FarcasterAccountDetailsSchema = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\n/**\n * Input argument schema for the account_details action.\n */ exports.FarcasterAccountDetailsSchema = zod_1.z.object({}).strip().describe(\"Input schema for retrieving account details\");\n/**\n * Input argument schema for the post cast action.\n */ exports.FarcasterPostCastSchema = zod_1.z.object({\n    castText: zod_1.z.string().max(280, \"Cast text must be a maximum of 280 characters.\")\n}).strip().describe(\"Input schema for posting a text-based cast\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2ZhcmNhc3Rlci9zY2hlbWFzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwrQkFBK0IsR0FBR0EscUNBQXFDLEdBQUcsS0FBSztBQUMvRSxNQUFNSSxRQUFRQyxtQkFBT0EsQ0FBQyx5REFBSztBQUMzQjs7Q0FFQyxHQUNETCxxQ0FBcUMsR0FBR0ksTUFBTUUsQ0FBQyxDQUMxQ0MsTUFBTSxDQUFDLENBQUMsR0FDUkMsS0FBSyxHQUNMQyxRQUFRLENBQUM7QUFDZDs7Q0FFQyxHQUNEVCwrQkFBK0IsR0FBR0ksTUFBTUUsQ0FBQyxDQUNwQ0MsTUFBTSxDQUFDO0lBQ1JHLFVBQVVOLE1BQU1FLENBQUMsQ0FBQ0ssTUFBTSxHQUFHQyxHQUFHLENBQUMsS0FBSztBQUN4QyxHQUNLSixLQUFLLEdBQ0xDLFFBQVEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L2FjdGlvbi1wcm92aWRlcnMvZmFyY2FzdGVyL3NjaGVtYXMuanM/MTgwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRmFyY2FzdGVyUG9zdENhc3RTY2hlbWEgPSBleHBvcnRzLkZhcmNhc3RlckFjY291bnREZXRhaWxzU2NoZW1hID0gdm9pZCAwO1xuY29uc3Qgem9kXzEgPSByZXF1aXJlKFwiem9kXCIpO1xuLyoqXG4gKiBJbnB1dCBhcmd1bWVudCBzY2hlbWEgZm9yIHRoZSBhY2NvdW50X2RldGFpbHMgYWN0aW9uLlxuICovXG5leHBvcnRzLkZhcmNhc3RlckFjY291bnREZXRhaWxzU2NoZW1hID0gem9kXzEuelxuICAgIC5vYmplY3Qoe30pXG4gICAgLnN0cmlwKClcbiAgICAuZGVzY3JpYmUoXCJJbnB1dCBzY2hlbWEgZm9yIHJldHJpZXZpbmcgYWNjb3VudCBkZXRhaWxzXCIpO1xuLyoqXG4gKiBJbnB1dCBhcmd1bWVudCBzY2hlbWEgZm9yIHRoZSBwb3N0IGNhc3QgYWN0aW9uLlxuICovXG5leHBvcnRzLkZhcmNhc3RlclBvc3RDYXN0U2NoZW1hID0gem9kXzEuelxuICAgIC5vYmplY3Qoe1xuICAgIGNhc3RUZXh0OiB6b2RfMS56LnN0cmluZygpLm1heCgyODAsIFwiQ2FzdCB0ZXh0IG11c3QgYmUgYSBtYXhpbXVtIG9mIDI4MCBjaGFyYWN0ZXJzLlwiKSxcbn0pXG4gICAgLnN0cmlwKClcbiAgICAuZGVzY3JpYmUoXCJJbnB1dCBzY2hlbWEgZm9yIHBvc3RpbmcgYSB0ZXh0LWJhc2VkIGNhc3RcIik7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJGYXJjYXN0ZXJQb3N0Q2FzdFNjaGVtYSIsIkZhcmNhc3RlckFjY291bnREZXRhaWxzU2NoZW1hIiwiem9kXzEiLCJyZXF1aXJlIiwieiIsIm9iamVjdCIsInN0cmlwIiwiZGVzY3JpYmUiLCJjYXN0VGV4dCIsInN0cmluZyIsIm1heCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/farcaster/schemas.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/index.js":
/*!*****************************************************!*\
  !*** ../../agentkit/dist/action-providers/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./actionDecorator */ \"(rsc)/../../agentkit/dist/action-providers/actionDecorator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./actionProvider */ \"(rsc)/../../agentkit/dist/action-providers/actionProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./pyth */ \"(rsc)/../../agentkit/dist/action-providers/pyth/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./cdp */ \"(rsc)/../../agentkit/dist/action-providers/cdp/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./weth */ \"(rsc)/../../agentkit/dist/action-providers/weth/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./erc20 */ \"(rsc)/../../agentkit/dist/action-providers/erc20/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./erc721 */ \"(rsc)/../../agentkit/dist/action-providers/erc721/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./morpho */ \"(rsc)/../../agentkit/dist/action-providers/morpho/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./basename */ \"(rsc)/../../agentkit/dist/action-providers/basename/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./farcaster */ \"(rsc)/../../agentkit/dist/action-providers/farcaster/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./twitter */ \"(rsc)/../../agentkit/dist/action-providers/twitter/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./wallet */ \"(rsc)/../../agentkit/dist/action-providers/wallet/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./customActionProvider */ \"(rsc)/../../agentkit/dist/action-providers/customActionProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./alchemy */ \"(rsc)/../../agentkit/dist/action-providers/alchemy/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./moonwell */ \"(rsc)/../../agentkit/dist/action-providers/moonwell/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQixJQUFJRyxPQUFPUCxPQUFPUSx3QkFBd0IsQ0FBQ0wsR0FBR0M7SUFDOUMsSUFBSSxDQUFDRyxRQUFTLFVBQVNBLE9BQU8sQ0FBQ0osRUFBRU0sVUFBVSxHQUFHRixLQUFLRyxRQUFRLElBQUlILEtBQUtJLFlBQVksR0FBRztRQUNqRkosT0FBTztZQUFFSyxZQUFZO1lBQU1DLEtBQUs7Z0JBQWEsT0FBT1YsQ0FBQyxDQUFDQyxFQUFFO1lBQUU7UUFBRTtJQUM5RDtJQUNBSixPQUFPYyxjQUFjLENBQUNaLEdBQUdHLElBQUlFO0FBQ2pDLElBQU0sU0FBU0wsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSVcsZUFBZSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFlBQVksSUFBSyxTQUFTWixDQUFDLEVBQUVhLFFBQU87SUFDakUsSUFBSyxJQUFJQyxLQUFLZCxFQUFHLElBQUljLE1BQU0sYUFBYSxDQUFDakIsT0FBT2tCLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNKLFVBQVNDLElBQUlsQixnQkFBZ0JpQixVQUFTYixHQUFHYztBQUMzSDtBQUNBakIsOENBQTZDO0lBQUVxQixPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdETixhQUFhTyxtQkFBT0EsQ0FBQyx3RkFBbUIsR0FBR047QUFDM0NELGFBQWFPLG1CQUFPQSxDQUFDLHNGQUFrQixHQUFHTjtBQUMxQ0QsYUFBYU8sbUJBQU9BLENBQUMsd0VBQVEsR0FBR047QUFDaENELGFBQWFPLG1CQUFPQSxDQUFDLHNFQUFPLEdBQUdOO0FBQy9CRCxhQUFhTyxtQkFBT0EsQ0FBQyx3RUFBUSxHQUFHTjtBQUNoQ0QsYUFBYU8sbUJBQU9BLENBQUMsMEVBQVMsR0FBR047QUFDakNELGFBQWFPLG1CQUFPQSxDQUFDLDRFQUFVLEdBQUdOO0FBQ2xDRCxhQUFhTyxtQkFBT0EsQ0FBQyw0RUFBVSxHQUFHTjtBQUNsQ0QsYUFBYU8sbUJBQU9BLENBQUMsZ0ZBQVksR0FBR047QUFDcENELGFBQWFPLG1CQUFPQSxDQUFDLGtGQUFhLEdBQUdOO0FBQ3JDRCxhQUFhTyxtQkFBT0EsQ0FBQyw4RUFBVyxHQUFHTjtBQUNuQ0QsYUFBYU8sbUJBQU9BLENBQUMsNEVBQVUsR0FBR047QUFDbENELGFBQWFPLG1CQUFPQSxDQUFDLGtHQUF3QixHQUFHTjtBQUNoREQsYUFBYU8sbUJBQU9BLENBQUMsOEVBQVcsR0FBR047QUFDbkNELGFBQWFPLG1CQUFPQSxDQUFDLGdGQUFZLEdBQUdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNvaW5iYXNlL2NkcC1sYW5nY2hhaW4tY2hhdGJvdC1leGFtcGxlLy4uLy4uL2FnZW50a2l0L2Rpc3QvYWN0aW9uLXByb3ZpZGVycy9pbmRleC5qcz85NTY4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYWN0aW9uRGVjb3JhdG9yXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hY3Rpb25Qcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcHl0aFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY2RwXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi93ZXRoXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9lcmMyMFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXJjNzIxXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9tb3JwaG9cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2Jhc2VuYW1lXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9mYXJjYXN0ZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R3aXR0ZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3dhbGxldFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY3VzdG9tQWN0aW9uUHJvdmlkZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FsY2hlbXlcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL21vb253ZWxsXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6WyJfX2NyZWF0ZUJpbmRpbmciLCJPYmplY3QiLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlc2MiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfX2VzTW9kdWxlIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZGVmaW5lUHJvcGVydHkiLCJfX2V4cG9ydFN0YXIiLCJleHBvcnRzIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInZhbHVlIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/moonwell/constants.js":
/*!******************************************************************!*\
  !*** ../../agentkit/dist/action-providers/moonwell/constants.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.MTOKEN_ABI = exports.ETH_ROUTER_ABI = exports.MTOKENS_UNDERLYING_DECIMALS = exports.TOKEN_DECIMALS = exports.WETH_ROUTER_ADDRESS = exports.MOONWELL_BASE_SEPOLIA_ADDRESSES = exports.MOONWELL_BASE_ADDRESSES = void 0;\nexports.MOONWELL_BASE_ADDRESSES = {\n    \"0xEdc817A28E8B93B03976FBd4a3dDBc9f7D176c22\": \"MOONWELL_USDC\",\n    \"0x73b06D8d18De422E269645eaCe15400DE7462417\": \"MOONWELL_DAI\",\n    \"0x628ff693426583D9a7FB391E54366292F509D457\": \"MOONWELL_WETH\",\n    \"0x3bf93770f2d4a794c3d9EBEfBAeBAE2a8f09A5E5\": \"MOONWELL_cbETH\",\n    \"0x627Fe393Bc6EdDA28e99AE648fD6fF362514304b\": \"MOONWELL_wstETH\",\n    \"0x73902f619CEB9B31FD8EFecf435CbDf89E369Ba6\": \"MOONWELL_AERO\",\n    \"0xb8051464C8c92209C92F3a4CD9C73746C4c3CFb3\": \"MOONWELL_weETH\",\n    \"0xF877ACaFA28c19b96727966690b2f44d35aD5976\": \"MOONWELL_cbBTC\",\n    \"0xb682c840B5F4FC58B20769E691A6fa1305A501a2\": \"MOONWELL_EURC\",\n    \"0xfC41B49d064Ac646015b459C522820DB9472F4B5\": \"MOONWELL_wrsETH\",\n    \"0xdC7810B47eAAb250De623F0eE07764afa5F71ED1\": \"MOONWELL_WELL\",\n    \"0xb6419c6C2e60c4025D6D06eE4F913ce89425a357\": \"MOONWELL_USDS\",\n    \"0x9A858ebfF1bEb0D3495BB0e2897c1528eD84A218\": \"MOONWELL_TBTC\",\n    \"0x70778cfcFC475c7eA0f24cC625Baf6EaE475D0c9\": \"WETH_ROUTER\"\n};\nexports.MOONWELL_BASE_SEPOLIA_ADDRESSES = {\n    \"0x876852425331a113d8E432eFFB3aC5BEf38f033a\": \"MOONWELL_USDBC\",\n    \"0x5302EbD8BC32435C823c2e22B04Cd6c45f593e89\": \"MOONWELL_cbETH\",\n    \"0x2F39a349A79492a70E152760ce7123A1933eCf28\": \"MOONWELL_WETH\"\n};\nexports.WETH_ROUTER_ADDRESS = \"0x70778cfcFC475c7eA0f24cC625Baf6EaE475D0c9\";\n// Token decimals mapping\nexports.TOKEN_DECIMALS = {\n    \"0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913\": 6,\n    \"0x60a3E35Cc302bFA44Cb288Bc5a4F316Fdb1adb42\": 6,\n    \"0x04C0599Ae5A44757c0af6F9eC3b93da8976c150A\": 18,\n    \"0xEDfa23602D0EC14714057867A78d01e94176BEA0\": 18,\n    \"0x236aa50979D5f3De3Bd1Eeb40E81137F22ab794b\": 18,\n    \"0xA88594D404727625A9437C3f886C7643872296AE\": 18,\n    \"0x820C137fa70C8691f0e44Dc420a5e53c168921Dc\": 18,\n    \"0x50c5725949A6F0c72E6C4a641F24049A917DB0Cb\": 18,\n    \"0x4200000000000000000000000000000000000006\": 18,\n    \"0x2Ae3F1Ec7F1F5012CFEab0185bfc7aa3cf0DEc22\": 18,\n    \"0xc1CBa3fCea344f92D9239c08C0568f6F2F0ee452\": 18,\n    \"0x940181a94a35a4569e4529a3cdfb74e38fd98631\": 18,\n    \"0x0000000000000000000000000000000000000000\": 18\n};\nexports.MTOKENS_UNDERLYING_DECIMALS = {\n    MOONWELL_USDC: 6,\n    MOONWELL_DAI: 18,\n    MOONWELL_WETH: 18,\n    MOONWELL_cbETH: 18,\n    MOONWELL_wstETH: 18,\n    MOONWELL_AERO: 18,\n    MOONWELL_weETH: 18,\n    MOONWELL_cbBTC: 18,\n    MOONWELL_EURC: 6,\n    MOONWELL_wrsETH: 18,\n    MOONWELL_WELL: 18,\n    MOONWELL_USDS: 18,\n    MOONWELL_TBTC: 18\n};\nexports.ETH_ROUTER_ABI = [\n    {\n        name: \"mint\",\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"receiver\",\n                type: \"address\"\n            }\n        ],\n        outputs: [],\n        stateMutability: \"payable\",\n        type: \"function\"\n    }\n];\nexports.MTOKEN_ABI = [\n    {\n        type: \"function\",\n        name: \"mint\",\n        inputs: [\n            {\n                name: \"mintAmount\",\n                type: \"uint256\",\n                internalType: \"uint256\"\n            }\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n                internalType: \"uint256\"\n            }\n        ],\n        stateMutability: \"nonpayable\"\n    },\n    {\n        type: \"function\",\n        name: \"redeemUnderlying\",\n        inputs: [\n            {\n                name: \"redeemAmount\",\n                type: \"uint256\",\n                internalType: \"uint256\"\n            }\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n                internalType: \"uint256\"\n            }\n        ],\n        stateMutability: \"nonpayable\"\n    }\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/moonwell/constants.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/moonwell/index.js":
/*!**************************************************************!*\
  !*** ../../agentkit/dist/action-providers/moonwell/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.moonwellActionProvider = void 0;\nvar moonwellActionProvider_1 = __webpack_require__(/*! ./moonwellActionProvider */ \"(rsc)/../../agentkit/dist/action-providers/moonwell/moonwellActionProvider.js\");\nObject.defineProperty(exports, \"moonwellActionProvider\", ({\n    enumerable: true,\n    get: function() {\n        return moonwellActionProvider_1.moonwellActionProvider;\n    }\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL21vb253ZWxsL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCw4QkFBOEIsR0FBRyxLQUFLO0FBQ3RDLElBQUlHLDJCQUEyQkMsbUJBQU9BLENBQUMsK0dBQTBCO0FBQ2pFTiwwREFBeUQ7SUFBRU8sWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT0gseUJBQXlCRCxzQkFBc0I7SUFBRTtBQUFFLENBQUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L2FjdGlvbi1wcm92aWRlcnMvbW9vbndlbGwvaW5kZXguanM/NjJlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubW9vbndlbGxBY3Rpb25Qcm92aWRlciA9IHZvaWQgMDtcbnZhciBtb29ud2VsbEFjdGlvblByb3ZpZGVyXzEgPSByZXF1aXJlKFwiLi9tb29ud2VsbEFjdGlvblByb3ZpZGVyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwibW9vbndlbGxBY3Rpb25Qcm92aWRlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9vbndlbGxBY3Rpb25Qcm92aWRlcl8xLm1vb253ZWxsQWN0aW9uUHJvdmlkZXI7IH0gfSk7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb29ud2VsbEFjdGlvblByb3ZpZGVyIiwibW9vbndlbGxBY3Rpb25Qcm92aWRlcl8xIiwicmVxdWlyZSIsImVudW1lcmFibGUiLCJnZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/moonwell/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/moonwell/moonwellActionProvider.js":
/*!*******************************************************************************!*\
  !*** ../../agentkit/dist/action-providers/moonwell/moonwellActionProvider.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __decorate = (void 0) && (void 0).__decorate || function(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (void 0) && (void 0).__metadata || function(k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.moonwellActionProvider = exports.MoonwellActionProvider = exports.SUPPORTED_NETWORKS = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\nconst decimal_js_1 = __webpack_require__(/*! decimal.js */ \"(rsc)/../../../node_modules/decimal.js/decimal.js\");\nconst viem_1 = __webpack_require__(/*! viem */ \"(rsc)/../../../node_modules/viem/_cjs/index.js\");\nconst actionProvider_1 = __webpack_require__(/*! ../actionProvider */ \"(rsc)/../../agentkit/dist/action-providers/actionProvider.js\");\nconst wallet_providers_1 = __webpack_require__(/*! ../../wallet-providers */ \"(rsc)/../../agentkit/dist/wallet-providers/index.js\");\nconst actionDecorator_1 = __webpack_require__(/*! ../actionDecorator */ \"(rsc)/../../agentkit/dist/action-providers/actionDecorator.js\");\nconst utils_1 = __webpack_require__(/*! ../../utils */ \"(rsc)/../../agentkit/dist/utils.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(rsc)/../../agentkit/dist/action-providers/moonwell/constants.js\");\nconst schemas_1 = __webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/moonwell/schemas.js\");\nexports.SUPPORTED_NETWORKS = [\n    \"base-mainnet\",\n    \"base-sepolia\"\n];\n/**\n * MoonwellActionProvider is an action provider for Moonwell MToken interactions.\n */ class MoonwellActionProvider extends actionProvider_1.ActionProvider {\n    /**\n     * Constructor for the MoonwellActionProvider class.\n     */ constructor(){\n        super(\"moonwell\", []);\n        /**\n         * Checks if the Moonwell action provider supports the given network.\n         *\n         * @param network - The network to check.\n         * @returns True if the Moonwell action provider supports the network, false otherwise.\n         */ this.supportsNetwork = (network)=>network.protocolFamily === \"evm\" && exports.SUPPORTED_NETWORKS.includes(network.networkId);\n    }\n    /**\n     * Deposits assets into a Moonwell MToken\n     *\n     * @param wallet - The wallet instance to execute the transaction\n     * @param args - The input arguments for the action\n     * @returns A success message with transaction details or an error message\n     */ async mint(wallet, args) {\n        const assets = new decimal_js_1.Decimal(args.assets);\n        if (assets.comparedTo(new decimal_js_1.Decimal(0.0)) != 1) {\n            return \"Error: Assets amount must be greater than 0\";\n        }\n        const network = wallet.getNetwork();\n        const networkObject = network.networkId === \"base-mainnet\" ? constants_1.MOONWELL_BASE_ADDRESSES : constants_1.MOONWELL_BASE_SEPOLIA_ADDRESSES;\n        if (!networkObject[args.mTokenAddress]) {\n            return \"Error: Invalid MToken address\";\n        }\n        try {\n            // Handle different token decimals\n            let atomicAssets;\n            const userAddress = wallet.getAddress();\n            if (network.networkId === \"base-mainnet\" && \"MOONWELL_WETH\" === networkObject[args.mTokenAddress]) {\n                // For ETH minting, use parseEther (18 decimals)\n                atomicAssets = (0, viem_1.parseEther)(args.assets);\n            } else {\n                // For other tokens, use the correct decimals\n                const decimals = constants_1.TOKEN_DECIMALS[args.tokenAddress];\n                if (!decimals) {\n                    return `Error: Unsupported token address ${args.tokenAddress}. Please verify the token address is correct.`;\n                }\n                atomicAssets = (0, viem_1.parseUnits)(args.assets, decimals);\n            }\n            // Check if this is a WETH mint on mainnet\n            if (network.networkId === \"base-mainnet\" && \"MOONWELL_WETH\" === networkObject[args.mTokenAddress]) {\n                // Use the router for ETH mints - no approval needed since we're sending native ETH\n                const data = (0, viem_1.encodeFunctionData)({\n                    abi: constants_1.ETH_ROUTER_ABI,\n                    functionName: \"mint\",\n                    args: [\n                        userAddress\n                    ]\n                });\n                const txHash = await wallet.sendTransaction({\n                    to: constants_1.WETH_ROUTER_ADDRESS,\n                    data,\n                    value: atomicAssets\n                });\n                const receipt = await wallet.waitForTransactionReceipt(txHash);\n                return `Deposited ${args.assets} ETH to Moonwell WETH via router with transaction hash: ${txHash}\\nTransaction receipt: ${JSON.stringify(receipt, (_, value)=>typeof value === \"bigint\" ? value.toString() : value)}`;\n            } else {\n                // For all other tokens, we need approval first\n                const approvalResult = await (0, utils_1.approve)(wallet, args.tokenAddress, args.mTokenAddress, atomicAssets);\n                if (approvalResult.startsWith(\"Error\")) {\n                    return `Error approving Moonwell MToken as spender: ${approvalResult}`;\n                }\n                const data = (0, viem_1.encodeFunctionData)({\n                    abi: constants_1.MTOKEN_ABI,\n                    functionName: \"mint\",\n                    args: [\n                        atomicAssets\n                    ]\n                });\n                const txHash = await wallet.sendTransaction({\n                    to: args.mTokenAddress,\n                    data,\n                    value: 0n\n                });\n                const receipt = await wallet.waitForTransactionReceipt(txHash);\n                if (!receipt) {\n                    throw new Error(\"No receipt received for mint transaction\");\n                }\n                if (receipt.status !== \"success\") {\n                    throw new Error(`Mint transaction failed with status ${receipt.status}`);\n                }\n                return `Deposited ${args.assets} to Moonwell MToken ${args.mTokenAddress} with transaction hash: ${txHash}\\nTransaction receipt: ${JSON.stringify(receipt, (_, value)=>typeof value === \"bigint\" ? value.toString() : value)}`;\n            }\n        } catch (error) {\n            console.error(\"DEBUG - Mint error:\", error);\n            if (error instanceof Error) {\n                return `Error minting Moonwell MToken: ${error.message}`;\n            }\n            return `Error minting Moonwell MToken: ${error}`;\n        }\n    }\n    /**\n     * Redeems assets from a Moonwell MToken\n     *\n     * @param wallet - The wallet instance to execute the transaction\n     * @param args - The input arguments for the action\n     * @returns A success message with transaction details or an error message\n     */ async redeem(wallet, args) {\n        const assets = new decimal_js_1.Decimal(args.assets);\n        if (assets.comparedTo(new decimal_js_1.Decimal(0.0)) != 1) {\n            return \"Error: Assets amount must be greater than 0\";\n        }\n        const network = wallet.getNetwork();\n        const networkObject = network.networkId === \"base-mainnet\" ? constants_1.MOONWELL_BASE_ADDRESSES : constants_1.MOONWELL_BASE_SEPOLIA_ADDRESSES;\n        if (!networkObject[args.mTokenAddress]) {\n            return \"Error: Invalid MToken address\";\n        }\n        try {\n            // Handle different token decimals\n            const decimals = constants_1.MTOKENS_UNDERLYING_DECIMALS[constants_1.MOONWELL_BASE_ADDRESSES[args.mTokenAddress]];\n            if (!decimals) {\n                return `Error: Unsupported token address ${args.mTokenAddress}. Please verify the token address is correct.`;\n            }\n            const atomicAssets = (0, viem_1.parseUnits)(args.assets, decimals);\n            const data = (0, viem_1.encodeFunctionData)({\n                abi: constants_1.MTOKEN_ABI,\n                functionName: \"redeemUnderlying\",\n                args: [\n                    atomicAssets\n                ]\n            });\n            const txHash = await wallet.sendTransaction({\n                to: args.mTokenAddress,\n                data,\n                value: 0n\n            });\n            const receipt = await wallet.waitForTransactionReceipt(txHash);\n            if (!receipt) {\n                throw new Error(\"No receipt received for redeem transaction\");\n            }\n            if (receipt.status !== \"success\") {\n                throw new Error(`Redeem transaction failed with status ${receipt.status}`);\n            }\n            return `Redeemed ${args.assets} from Moonwell MToken ${args.mTokenAddress} with transaction hash: ${txHash}\\nTransaction receipt: ${JSON.stringify(receipt, (_, value)=>typeof value === \"bigint\" ? value.toString() : value)}`;\n        } catch (error) {\n            console.error(\"DEBUG - Redeem error:\", error);\n            if (error instanceof Error) {\n                return `Error redeeming from Moonwell MToken: ${error.message}`;\n            }\n            return `Error redeeming from Moonwell MToken: ${error}`;\n        }\n    }\n}\nexports.MoonwellActionProvider = MoonwellActionProvider;\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"mint\",\n        description: `\nThis tool allows minting assets into a Moonwell MToken. \n\nIt takes:\n- mTokenAddress: The address of the Moonwell MToken to mint to\n- assets: The amount of assets that will be approved to spend by the mToken in whole units\n  Examples for WETH:\n  - 1 WETH\n  - 0.1 WETH\n  - 0.01 WETH\n  Examples for cbETH:\n  - 1 cbETH\n  - 0.1 cbETH\n  - 0.01 cbETH\n  Examples for USDC:\n  - 1 USDC\n  - 0.1 USDC\n  - 0.01 USDC\n- tokenAddress: The address of the token to approve\n\nImportant notes:\n- Make sure to use the exact amount provided. Do not convert units for assets for this action.\n- Please use a token address (example 0x4200000000000000000000000000000000000006) for the tokenAddress field.\n- This tool handles token approval. If requested to mint on Moonwell, do not use any other actions to approve tokens.\n`,\n        schema: schemas_1.MintSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.EvmWalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], MoonwellActionProvider.prototype, \"mint\", null);\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"redeem\",\n        description: `\nThis tool allows redeeming assets from a Moonwell MToken. \n\nIt takes:\n- mTokenAddress: The address of the Moonwell MToken to redeem from\n- assets: The amount of assets to redeem in whole units\n  Examples for WETH:\n  - 1 WETH\n  - 0.1 WETH\n  - 0.01 WETH\n  Examples for cbETH:\n  - 1 cbETH\n  - 0.1 cbETH\n  - 0.01 cbETH\n  Examples for USDC:\n  - 1 USDC\n  - 0.1 USDC\n  - 0.01 USDC\n\nImportant notes:\n- Make sure to use the exact amount provided. Do not convert units for assets for this action.\n- Please use a token address (example 0x4200000000000000000000000000000000000006) for the tokenAddress field.\n`,\n        schema: schemas_1.RedeemSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.EvmWalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], MoonwellActionProvider.prototype, \"redeem\", null);\nconst moonwellActionProvider = ()=>new MoonwellActionProvider();\nexports.moonwellActionProvider = moonwellActionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/moonwell/moonwellActionProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/moonwell/schemas.js":
/*!****************************************************************!*\
  !*** ../../agentkit/dist/action-providers/moonwell/schemas.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.RedeemSchema = exports.MintSchema = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\n/**\n * Input schema for Moonwell MToken mint action.\n */ exports.MintSchema = zod_1.z.object({\n    assets: zod_1.z.string().regex(/^\\d+(\\.\\d+)?$/, \"Must be a valid integer or decimal value\").describe(\"The quantity of assets to use to mint, in whole units\"),\n    tokenAddress: zod_1.z.string().regex(/^0x[a-fA-F0-9]{40}$/, \"Invalid Ethereum address format\").describe(\"The address of the assets token to approve for minting\"),\n    mTokenAddress: zod_1.z.string().regex(/^0x[a-fA-F0-9]{40}$/, \"Invalid Ethereum address format\").describe(\"The address of the Moonwell MToken to mint from\")\n}).describe(\"Input schema for Moonwell MToken mint action\");\n/**\n * Input schema for Moonwell MToken redeem action.\n */ exports.RedeemSchema = zod_1.z.object({\n    mTokenAddress: zod_1.z.string().regex(/^0x[a-fA-F0-9]{40}$/, \"Invalid Ethereum address format\").describe(\"The address of the Moonwell MToken to redeem from\"),\n    assets: zod_1.z.string().regex(/^\\d+(\\.\\d+)?$/, \"Must be a valid integer or decimal value\").describe(\"The quantity of assets to redeem, in whole units\")\n}).strip().describe(\"Input schema for Moonwell MToken redeem action\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL21vb253ZWxsL3NjaGVtYXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG9CQUFvQixHQUFHQSxrQkFBa0IsR0FBRyxLQUFLO0FBQ2pELE1BQU1JLFFBQVFDLG1CQUFPQSxDQUFDLHlEQUFLO0FBQzNCOztDQUVDLEdBQ0RMLGtCQUFrQixHQUFHSSxNQUFNRSxDQUFDLENBQ3ZCQyxNQUFNLENBQUM7SUFDUkMsUUFBUUosTUFBTUUsQ0FBQyxDQUNWRyxNQUFNLEdBQ05DLEtBQUssQ0FBQyxpQkFBaUIsNENBQ3ZCQyxRQUFRLENBQUM7SUFDZEMsY0FBY1IsTUFBTUUsQ0FBQyxDQUNoQkcsTUFBTSxHQUNOQyxLQUFLLENBQUMsdUJBQXVCLG1DQUM3QkMsUUFBUSxDQUFDO0lBQ2RFLGVBQWVULE1BQU1FLENBQUMsQ0FDakJHLE1BQU0sR0FDTkMsS0FBSyxDQUFDLHVCQUF1QixtQ0FDN0JDLFFBQVEsQ0FBQztBQUNsQixHQUNLQSxRQUFRLENBQUM7QUFDZDs7Q0FFQyxHQUNEWCxvQkFBb0IsR0FBR0ksTUFBTUUsQ0FBQyxDQUN6QkMsTUFBTSxDQUFDO0lBQ1JNLGVBQWVULE1BQU1FLENBQUMsQ0FDakJHLE1BQU0sR0FDTkMsS0FBSyxDQUFDLHVCQUF1QixtQ0FDN0JDLFFBQVEsQ0FBQztJQUNkSCxRQUFRSixNQUFNRSxDQUFDLENBQ1ZHLE1BQU0sR0FDTkMsS0FBSyxDQUFDLGlCQUFpQiw0Q0FDdkJDLFFBQVEsQ0FBQztBQUNsQixHQUNLRyxLQUFLLEdBQ0xILFFBQVEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L2FjdGlvbi1wcm92aWRlcnMvbW9vbndlbGwvc2NoZW1hcy5qcz8xMmQ3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SZWRlZW1TY2hlbWEgPSBleHBvcnRzLk1pbnRTY2hlbWEgPSB2b2lkIDA7XG5jb25zdCB6b2RfMSA9IHJlcXVpcmUoXCJ6b2RcIik7XG4vKipcbiAqIElucHV0IHNjaGVtYSBmb3IgTW9vbndlbGwgTVRva2VuIG1pbnQgYWN0aW9uLlxuICovXG5leHBvcnRzLk1pbnRTY2hlbWEgPSB6b2RfMS56XG4gICAgLm9iamVjdCh7XG4gICAgYXNzZXRzOiB6b2RfMS56XG4gICAgICAgIC5zdHJpbmcoKVxuICAgICAgICAucmVnZXgoL15cXGQrKFxcLlxcZCspPyQvLCBcIk11c3QgYmUgYSB2YWxpZCBpbnRlZ2VyIG9yIGRlY2ltYWwgdmFsdWVcIilcbiAgICAgICAgLmRlc2NyaWJlKFwiVGhlIHF1YW50aXR5IG9mIGFzc2V0cyB0byB1c2UgdG8gbWludCwgaW4gd2hvbGUgdW5pdHNcIiksXG4gICAgdG9rZW5BZGRyZXNzOiB6b2RfMS56XG4gICAgICAgIC5zdHJpbmcoKVxuICAgICAgICAucmVnZXgoL14weFthLWZBLUYwLTldezQwfSQvLCBcIkludmFsaWQgRXRoZXJldW0gYWRkcmVzcyBmb3JtYXRcIilcbiAgICAgICAgLmRlc2NyaWJlKFwiVGhlIGFkZHJlc3Mgb2YgdGhlIGFzc2V0cyB0b2tlbiB0byBhcHByb3ZlIGZvciBtaW50aW5nXCIpLFxuICAgIG1Ub2tlbkFkZHJlc3M6IHpvZF8xLnpcbiAgICAgICAgLnN0cmluZygpXG4gICAgICAgIC5yZWdleCgvXjB4W2EtZkEtRjAtOV17NDB9JC8sIFwiSW52YWxpZCBFdGhlcmV1bSBhZGRyZXNzIGZvcm1hdFwiKVxuICAgICAgICAuZGVzY3JpYmUoXCJUaGUgYWRkcmVzcyBvZiB0aGUgTW9vbndlbGwgTVRva2VuIHRvIG1pbnQgZnJvbVwiKSxcbn0pXG4gICAgLmRlc2NyaWJlKFwiSW5wdXQgc2NoZW1hIGZvciBNb29ud2VsbCBNVG9rZW4gbWludCBhY3Rpb25cIik7XG4vKipcbiAqIElucHV0IHNjaGVtYSBmb3IgTW9vbndlbGwgTVRva2VuIHJlZGVlbSBhY3Rpb24uXG4gKi9cbmV4cG9ydHMuUmVkZWVtU2NoZW1hID0gem9kXzEuelxuICAgIC5vYmplY3Qoe1xuICAgIG1Ub2tlbkFkZHJlc3M6IHpvZF8xLnpcbiAgICAgICAgLnN0cmluZygpXG4gICAgICAgIC5yZWdleCgvXjB4W2EtZkEtRjAtOV17NDB9JC8sIFwiSW52YWxpZCBFdGhlcmV1bSBhZGRyZXNzIGZvcm1hdFwiKVxuICAgICAgICAuZGVzY3JpYmUoXCJUaGUgYWRkcmVzcyBvZiB0aGUgTW9vbndlbGwgTVRva2VuIHRvIHJlZGVlbSBmcm9tXCIpLFxuICAgIGFzc2V0czogem9kXzEuelxuICAgICAgICAuc3RyaW5nKClcbiAgICAgICAgLnJlZ2V4KC9eXFxkKyhcXC5cXGQrKT8kLywgXCJNdXN0IGJlIGEgdmFsaWQgaW50ZWdlciBvciBkZWNpbWFsIHZhbHVlXCIpXG4gICAgICAgIC5kZXNjcmliZShcIlRoZSBxdWFudGl0eSBvZiBhc3NldHMgdG8gcmVkZWVtLCBpbiB3aG9sZSB1bml0c1wiKSxcbn0pXG4gICAgLnN0cmlwKClcbiAgICAuZGVzY3JpYmUoXCJJbnB1dCBzY2hlbWEgZm9yIE1vb253ZWxsIE1Ub2tlbiByZWRlZW0gYWN0aW9uXCIpO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiUmVkZWVtU2NoZW1hIiwiTWludFNjaGVtYSIsInpvZF8xIiwicmVxdWlyZSIsInoiLCJvYmplY3QiLCJhc3NldHMiLCJzdHJpbmciLCJyZWdleCIsImRlc2NyaWJlIiwidG9rZW5BZGRyZXNzIiwibVRva2VuQWRkcmVzcyIsInN0cmlwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/moonwell/schemas.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/morpho/constants.js":
/*!****************************************************************!*\
  !*** ../../agentkit/dist/action-providers/morpho/constants.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.METAMORPHO_ABI = exports.MORPHO_BASE_ADDRESS = void 0;\nexports.MORPHO_BASE_ADDRESS = \"0xBBBBBbbBBb9cC5e90e3b3Af64bdAF62C37EEFFCb\";\nexports.METAMORPHO_ABI = [\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"assets\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"address\",\n                name: \"receiver\",\n                type: \"address\"\n            }\n        ],\n        name: \"deposit\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"shares\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"assets\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"address\",\n                name: \"receiver\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\"\n            }\n        ],\n        name: \"withdraw\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"shares\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    }\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL21vcnBoby9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQixHQUFHQSwyQkFBMkIsR0FBRyxLQUFLO0FBQzVEQSwyQkFBMkIsR0FBRztBQUM5QkEsc0JBQXNCLEdBQUc7SUFDckI7UUFDSUksUUFBUTtZQUNKO2dCQUFFQyxjQUFjO2dCQUFXQyxNQUFNO2dCQUFVQyxNQUFNO1lBQVU7WUFDM0Q7Z0JBQUVGLGNBQWM7Z0JBQVdDLE1BQU07Z0JBQVlDLE1BQU07WUFBVTtTQUNoRTtRQUNERCxNQUFNO1FBQ05FLFNBQVM7WUFBQztnQkFBRUgsY0FBYztnQkFBV0MsTUFBTTtnQkFBVUMsTUFBTTtZQUFVO1NBQUU7UUFDdkVFLGlCQUFpQjtRQUNqQkYsTUFBTTtJQUNWO0lBQ0E7UUFDSUgsUUFBUTtZQUNKO2dCQUFFQyxjQUFjO2dCQUFXQyxNQUFNO2dCQUFVQyxNQUFNO1lBQVU7WUFDM0Q7Z0JBQUVGLGNBQWM7Z0JBQVdDLE1BQU07Z0JBQVlDLE1BQU07WUFBVTtZQUM3RDtnQkFBRUYsY0FBYztnQkFBV0MsTUFBTTtnQkFBU0MsTUFBTTtZQUFVO1NBQzdEO1FBQ0RELE1BQU07UUFDTkUsU0FBUztZQUFDO2dCQUFFSCxjQUFjO2dCQUFXQyxNQUFNO2dCQUFVQyxNQUFNO1lBQVU7U0FBRTtRQUN2RUUsaUJBQWlCO1FBQ2pCRixNQUFNO0lBQ1Y7Q0FDSCIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L2FjdGlvbi1wcm92aWRlcnMvbW9ycGhvL2NvbnN0YW50cy5qcz9hODI0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NRVRBTU9SUEhPX0FCSSA9IGV4cG9ydHMuTU9SUEhPX0JBU0VfQUREUkVTUyA9IHZvaWQgMDtcbmV4cG9ydHMuTU9SUEhPX0JBU0VfQUREUkVTUyA9IFwiMHhCQkJCQmJiQkJiOWNDNWU5MGUzYjNBZjY0YmRBRjYyQzM3RUVGRkNiXCI7XG5leHBvcnRzLk1FVEFNT1JQSE9fQUJJID0gW1xuICAgIHtcbiAgICAgICAgaW5wdXRzOiBbXG4gICAgICAgICAgICB7IGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsIG5hbWU6IFwiYXNzZXRzXCIsIHR5cGU6IFwidWludDI1NlwiIH0sXG4gICAgICAgICAgICB7IGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsIG5hbWU6IFwicmVjZWl2ZXJcIiwgdHlwZTogXCJhZGRyZXNzXCIgfSxcbiAgICAgICAgXSxcbiAgICAgICAgbmFtZTogXCJkZXBvc2l0XCIsXG4gICAgICAgIG91dHB1dHM6IFt7IGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsIG5hbWU6IFwic2hhcmVzXCIsIHR5cGU6IFwidWludDI1NlwiIH1dLFxuICAgICAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgICAgICB0eXBlOiBcImZ1bmN0aW9uXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGlucHV0czogW1xuICAgICAgICAgICAgeyBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLCBuYW1lOiBcImFzc2V0c1wiLCB0eXBlOiBcInVpbnQyNTZcIiB9LFxuICAgICAgICAgICAgeyBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLCBuYW1lOiBcInJlY2VpdmVyXCIsIHR5cGU6IFwiYWRkcmVzc1wiIH0sXG4gICAgICAgICAgICB7IGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsIG5hbWU6IFwib3duZXJcIiwgdHlwZTogXCJhZGRyZXNzXCIgfSxcbiAgICAgICAgXSxcbiAgICAgICAgbmFtZTogXCJ3aXRoZHJhd1wiLFxuICAgICAgICBvdXRwdXRzOiBbeyBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLCBuYW1lOiBcInNoYXJlc1wiLCB0eXBlOiBcInVpbnQyNTZcIiB9XSxcbiAgICAgICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICAgICAgdHlwZTogXCJmdW5jdGlvblwiLFxuICAgIH0sXG5dO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiTUVUQU1PUlBIT19BQkkiLCJNT1JQSE9fQkFTRV9BRERSRVNTIiwiaW5wdXRzIiwiaW50ZXJuYWxUeXBlIiwibmFtZSIsInR5cGUiLCJvdXRwdXRzIiwic3RhdGVNdXRhYmlsaXR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/morpho/constants.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/morpho/index.js":
/*!************************************************************!*\
  !*** ../../agentkit/dist/action-providers/morpho/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/morpho/schemas.js\"), exports);\n__exportStar(__webpack_require__(/*! ./morphoActionProvider */ \"(rsc)/../../agentkit/dist/action-providers/morpho/morphoActionProvider.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL21vcnBoby9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0IsSUFBSUcsT0FBT1AsT0FBT1Esd0JBQXdCLENBQUNMLEdBQUdDO0lBQzlDLElBQUksQ0FBQ0csUUFBUyxVQUFTQSxPQUFPLENBQUNKLEVBQUVNLFVBQVUsR0FBR0YsS0FBS0csUUFBUSxJQUFJSCxLQUFLSSxZQUFZLEdBQUc7UUFDakZKLE9BQU87WUFBRUssWUFBWTtZQUFNQyxLQUFLO2dCQUFhLE9BQU9WLENBQUMsQ0FBQ0MsRUFBRTtZQUFFO1FBQUU7SUFDOUQ7SUFDQUosT0FBT2MsY0FBYyxDQUFDWixHQUFHRyxJQUFJRTtBQUNqQyxJQUFNLFNBQVNMLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlXLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBU1osQ0FBQyxFQUFFYSxRQUFPO0lBQ2pFLElBQUssSUFBSUMsS0FBS2QsRUFBRyxJQUFJYyxNQUFNLGFBQWEsQ0FBQ2pCLE9BQU9rQixTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixVQUFTQyxJQUFJbEIsZ0JBQWdCaUIsVUFBU2IsR0FBR2M7QUFDM0g7QUFDQWpCLDhDQUE2QztJQUFFcUIsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RE4sYUFBYU8sbUJBQU9BLENBQUMsK0VBQVcsR0FBR047QUFDbkNELGFBQWFPLG1CQUFPQSxDQUFDLHlHQUF3QixHQUFHTiIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L2FjdGlvbi1wcm92aWRlcnMvbW9ycGhvL2luZGV4LmpzPzU1M2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zY2hlbWFzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9tb3JwaG9BY3Rpb25Qcm92aWRlclwiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19lc01vZHVsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsImRlZmluZVByb3BlcnR5IiwiX19leHBvcnRTdGFyIiwiZXhwb3J0cyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ2YWx1ZSIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/morpho/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/morpho/morphoActionProvider.js":
/*!***************************************************************************!*\
  !*** ../../agentkit/dist/action-providers/morpho/morphoActionProvider.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __decorate = (void 0) && (void 0).__decorate || function(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (void 0) && (void 0).__metadata || function(k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.morphoActionProvider = exports.MorphoActionProvider = exports.SUPPORTED_NETWORKS = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\nconst decimal_js_1 = __webpack_require__(/*! decimal.js */ \"(rsc)/../../../node_modules/decimal.js/decimal.js\");\nconst viem_1 = __webpack_require__(/*! viem */ \"(rsc)/../../../node_modules/viem/_cjs/index.js\");\nconst actionProvider_1 = __webpack_require__(/*! ../actionProvider */ \"(rsc)/../../agentkit/dist/action-providers/actionProvider.js\");\nconst wallet_providers_1 = __webpack_require__(/*! ../../wallet-providers */ \"(rsc)/../../agentkit/dist/wallet-providers/index.js\");\nconst actionDecorator_1 = __webpack_require__(/*! ../actionDecorator */ \"(rsc)/../../agentkit/dist/action-providers/actionDecorator.js\");\nconst utils_1 = __webpack_require__(/*! ../../utils */ \"(rsc)/../../agentkit/dist/utils.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(rsc)/../../agentkit/dist/action-providers/morpho/constants.js\");\nconst schemas_1 = __webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/morpho/schemas.js\");\nexports.SUPPORTED_NETWORKS = [\n    \"base-mainnet\",\n    \"base-sepolia\"\n];\n/**\n * MorphoActionProvider is an action provider for Morpho Vault interactions.\n */ class MorphoActionProvider extends actionProvider_1.ActionProvider {\n    /**\n     * Constructor for the MorphoActionProvider class.\n     */ constructor(){\n        super(\"morpho\", []);\n        /**\n         * Checks if the Morpho action provider supports the given network.\n         *\n         * @param network - The network to check.\n         * @returns True if the Morpho action provider supports the network, false otherwise.\n         */ this.supportsNetwork = (network)=>network.protocolFamily === \"evm\" && exports.SUPPORTED_NETWORKS.includes(network.networkId);\n    }\n    /**\n     * Deposits assets into a Morpho Vault\n     *\n     * @param wallet - The wallet instance to execute the transaction\n     * @param args - The input arguments for the action\n     * @returns A success message with transaction details or an error message\n     */ async deposit(wallet, args) {\n        const assets = new decimal_js_1.Decimal(args.assets);\n        if (assets.comparedTo(new decimal_js_1.Decimal(0.0)) != 1) {\n            return \"Error: Assets amount must be greater than 0\";\n        }\n        try {\n            const atomicAssets = (0, viem_1.parseEther)(args.assets);\n            const approvalResult = await (0, utils_1.approve)(wallet, args.tokenAddress, args.vaultAddress, atomicAssets);\n            if (approvalResult.startsWith(\"Error\")) {\n                return `Error approving Morpho Vault as spender: ${approvalResult}`;\n            }\n            const data = (0, viem_1.encodeFunctionData)({\n                abi: constants_1.METAMORPHO_ABI,\n                functionName: \"deposit\",\n                args: [\n                    atomicAssets,\n                    args.receiver\n                ]\n            });\n            const txHash = await wallet.sendTransaction({\n                to: args.vaultAddress,\n                data\n            });\n            const receipt = await wallet.waitForTransactionReceipt(txHash);\n            return `Deposited ${args.assets} to Morpho Vault ${args.vaultAddress} with transaction hash: ${txHash}\\nTransaction receipt: ${JSON.stringify(receipt)}`;\n        } catch (error) {\n            return `Error depositing to Morpho Vault: ${error}`;\n        }\n    }\n    /**\n     * Withdraws assets from a Morpho Vault\n     *\n     * @param wallet - The wallet instance to execute the transaction\n     * @param args - The input arguments for the action\n     * @returns A success message with transaction details or an error message\n     */ async withdraw(wallet, args) {\n        if (BigInt(args.assets) <= 0) {\n            return \"Error: Assets amount must be greater than 0\";\n        }\n        try {\n            const data = (0, viem_1.encodeFunctionData)({\n                abi: constants_1.METAMORPHO_ABI,\n                functionName: \"withdraw\",\n                args: [\n                    BigInt(args.assets),\n                    args.receiver,\n                    args.receiver\n                ]\n            });\n            const txHash = await wallet.sendTransaction({\n                to: args.vaultAddress,\n                data\n            });\n            const receipt = await wallet.waitForTransactionReceipt(txHash);\n            return `Withdrawn ${args.assets} from Morpho Vault ${args.vaultAddress} with transaction hash: ${txHash}\\nTransaction receipt: ${JSON.stringify(receipt)}`;\n        } catch (error) {\n            return `Error withdrawing from Morpho Vault: ${error}`;\n        }\n    }\n}\nexports.MorphoActionProvider = MorphoActionProvider;\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"deposit\",\n        description: `\nThis tool allows depositing assets into a Morpho Vault. \n\nIt takes:\n- vaultAddress: The address of the Morpho Vault to deposit to\n- assets: The amount of assets to deposit in whole units\n  Examples for WETH:\n  - 1 WETH\n  - 0.1 WETH\n  - 0.01 WETH\n- receiver: The address to receive the shares\n- tokenAddress: The address of the token to approve\n\nImportant notes:\n- Make sure to use the exact amount provided. Do not convert units for assets for this action.\n- Please use a token address (example 0x4200000000000000000000000000000000000006) for the tokenAddress field.\n`,\n        schema: schemas_1.DepositSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.EvmWalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], MorphoActionProvider.prototype, \"deposit\", null);\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"withdraw\",\n        description: `\nThis tool allows withdrawing assets from a Morpho Vault. It takes:\n\n- vaultAddress: The address of the Morpho Vault to withdraw from\n- assets: The amount of assets to withdraw in atomic units (wei)\n- receiver: The address to receive the shares\n`,\n        schema: schemas_1.WithdrawSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.EvmWalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], MorphoActionProvider.prototype, \"withdraw\", null);\nconst morphoActionProvider = ()=>new MorphoActionProvider();\nexports.morphoActionProvider = morphoActionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/morpho/morphoActionProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/morpho/schemas.js":
/*!**************************************************************!*\
  !*** ../../agentkit/dist/action-providers/morpho/schemas.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.WithdrawSchema = exports.DepositSchema = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\n/**\n * Input schema for Morpho Vault deposit action.\n */ exports.DepositSchema = zod_1.z.object({\n    assets: zod_1.z.string().regex(/^\\d+(\\.\\d+)?$/, \"Must be a valid integer or decimal value\").describe(\"The quantity of assets to deposit, in whole units\"),\n    receiver: zod_1.z.string().regex(/^0x[a-fA-F0-9]{40}$/, \"Invalid Ethereum address format\").describe(\"The address that will own the position on the vault which will receive the shares\"),\n    tokenAddress: zod_1.z.string().regex(/^0x[a-fA-F0-9]{40}$/, \"Invalid Ethereum address format\").describe(\"The address of the assets token to approve for deposit\"),\n    vaultAddress: zod_1.z.string().regex(/^0x[a-fA-F0-9]{40}$/, \"Invalid Ethereum address format\").describe(\"The address of the Morpho Vault to deposit to\")\n}).describe(\"Input schema for Morpho Vault deposit action\");\n/**\n * Input schema for Morpho Vault withdraw action.\n */ exports.WithdrawSchema = zod_1.z.object({\n    vaultAddress: zod_1.z.string().regex(/^0x[a-fA-F0-9]{40}$/, \"Invalid Ethereum address format\").describe(\"The address of the Morpho Vault to withdraw from\"),\n    assets: zod_1.z.string().regex(/^\\d+$/, \"Must be a valid whole number\").describe(\"The amount of assets to withdraw in atomic units e.g. 1\"),\n    receiver: zod_1.z.string().regex(/^0x[a-fA-F0-9]{40}$/, \"Invalid Ethereum address format\").describe(\"The address to receive the shares\")\n}).strip().describe(\"Input schema for Morpho Vault withdraw action\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL21vcnBoby9zY2hlbWFzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxzQkFBc0IsR0FBR0EscUJBQXFCLEdBQUcsS0FBSztBQUN0RCxNQUFNSSxRQUFRQyxtQkFBT0EsQ0FBQyx5REFBSztBQUMzQjs7Q0FFQyxHQUNETCxxQkFBcUIsR0FBR0ksTUFBTUUsQ0FBQyxDQUMxQkMsTUFBTSxDQUFDO0lBQ1JDLFFBQVFKLE1BQU1FLENBQUMsQ0FDVkcsTUFBTSxHQUNOQyxLQUFLLENBQUMsaUJBQWlCLDRDQUN2QkMsUUFBUSxDQUFDO0lBQ2RDLFVBQVVSLE1BQU1FLENBQUMsQ0FDWkcsTUFBTSxHQUNOQyxLQUFLLENBQUMsdUJBQXVCLG1DQUM3QkMsUUFBUSxDQUFDO0lBQ2RFLGNBQWNULE1BQU1FLENBQUMsQ0FDaEJHLE1BQU0sR0FDTkMsS0FBSyxDQUFDLHVCQUF1QixtQ0FDN0JDLFFBQVEsQ0FBQztJQUNkRyxjQUFjVixNQUFNRSxDQUFDLENBQ2hCRyxNQUFNLEdBQ05DLEtBQUssQ0FBQyx1QkFBdUIsbUNBQzdCQyxRQUFRLENBQUM7QUFDbEIsR0FDS0EsUUFBUSxDQUFDO0FBQ2Q7O0NBRUMsR0FDRFgsc0JBQXNCLEdBQUdJLE1BQU1FLENBQUMsQ0FDM0JDLE1BQU0sQ0FBQztJQUNSTyxjQUFjVixNQUFNRSxDQUFDLENBQ2hCRyxNQUFNLEdBQ05DLEtBQUssQ0FBQyx1QkFBdUIsbUNBQzdCQyxRQUFRLENBQUM7SUFDZEgsUUFBUUosTUFBTUUsQ0FBQyxDQUNWRyxNQUFNLEdBQ05DLEtBQUssQ0FBQyxTQUFTLGdDQUNmQyxRQUFRLENBQUM7SUFDZEMsVUFBVVIsTUFBTUUsQ0FBQyxDQUNaRyxNQUFNLEdBQ05DLEtBQUssQ0FBQyx1QkFBdUIsbUNBQzdCQyxRQUFRLENBQUM7QUFDbEIsR0FDS0ksS0FBSyxHQUNMSixRQUFRLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY29pbmJhc2UvY2RwLWxhbmdjaGFpbi1jaGF0Ym90LWV4YW1wbGUvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL21vcnBoby9zY2hlbWFzLmpzP2JhNjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLldpdGhkcmF3U2NoZW1hID0gZXhwb3J0cy5EZXBvc2l0U2NoZW1hID0gdm9pZCAwO1xuY29uc3Qgem9kXzEgPSByZXF1aXJlKFwiem9kXCIpO1xuLyoqXG4gKiBJbnB1dCBzY2hlbWEgZm9yIE1vcnBobyBWYXVsdCBkZXBvc2l0IGFjdGlvbi5cbiAqL1xuZXhwb3J0cy5EZXBvc2l0U2NoZW1hID0gem9kXzEuelxuICAgIC5vYmplY3Qoe1xuICAgIGFzc2V0czogem9kXzEuelxuICAgICAgICAuc3RyaW5nKClcbiAgICAgICAgLnJlZ2V4KC9eXFxkKyhcXC5cXGQrKT8kLywgXCJNdXN0IGJlIGEgdmFsaWQgaW50ZWdlciBvciBkZWNpbWFsIHZhbHVlXCIpXG4gICAgICAgIC5kZXNjcmliZShcIlRoZSBxdWFudGl0eSBvZiBhc3NldHMgdG8gZGVwb3NpdCwgaW4gd2hvbGUgdW5pdHNcIiksXG4gICAgcmVjZWl2ZXI6IHpvZF8xLnpcbiAgICAgICAgLnN0cmluZygpXG4gICAgICAgIC5yZWdleCgvXjB4W2EtZkEtRjAtOV17NDB9JC8sIFwiSW52YWxpZCBFdGhlcmV1bSBhZGRyZXNzIGZvcm1hdFwiKVxuICAgICAgICAuZGVzY3JpYmUoXCJUaGUgYWRkcmVzcyB0aGF0IHdpbGwgb3duIHRoZSBwb3NpdGlvbiBvbiB0aGUgdmF1bHQgd2hpY2ggd2lsbCByZWNlaXZlIHRoZSBzaGFyZXNcIiksXG4gICAgdG9rZW5BZGRyZXNzOiB6b2RfMS56XG4gICAgICAgIC5zdHJpbmcoKVxuICAgICAgICAucmVnZXgoL14weFthLWZBLUYwLTldezQwfSQvLCBcIkludmFsaWQgRXRoZXJldW0gYWRkcmVzcyBmb3JtYXRcIilcbiAgICAgICAgLmRlc2NyaWJlKFwiVGhlIGFkZHJlc3Mgb2YgdGhlIGFzc2V0cyB0b2tlbiB0byBhcHByb3ZlIGZvciBkZXBvc2l0XCIpLFxuICAgIHZhdWx0QWRkcmVzczogem9kXzEuelxuICAgICAgICAuc3RyaW5nKClcbiAgICAgICAgLnJlZ2V4KC9eMHhbYS1mQS1GMC05XXs0MH0kLywgXCJJbnZhbGlkIEV0aGVyZXVtIGFkZHJlc3MgZm9ybWF0XCIpXG4gICAgICAgIC5kZXNjcmliZShcIlRoZSBhZGRyZXNzIG9mIHRoZSBNb3JwaG8gVmF1bHQgdG8gZGVwb3NpdCB0b1wiKSxcbn0pXG4gICAgLmRlc2NyaWJlKFwiSW5wdXQgc2NoZW1hIGZvciBNb3JwaG8gVmF1bHQgZGVwb3NpdCBhY3Rpb25cIik7XG4vKipcbiAqIElucHV0IHNjaGVtYSBmb3IgTW9ycGhvIFZhdWx0IHdpdGhkcmF3IGFjdGlvbi5cbiAqL1xuZXhwb3J0cy5XaXRoZHJhd1NjaGVtYSA9IHpvZF8xLnpcbiAgICAub2JqZWN0KHtcbiAgICB2YXVsdEFkZHJlc3M6IHpvZF8xLnpcbiAgICAgICAgLnN0cmluZygpXG4gICAgICAgIC5yZWdleCgvXjB4W2EtZkEtRjAtOV17NDB9JC8sIFwiSW52YWxpZCBFdGhlcmV1bSBhZGRyZXNzIGZvcm1hdFwiKVxuICAgICAgICAuZGVzY3JpYmUoXCJUaGUgYWRkcmVzcyBvZiB0aGUgTW9ycGhvIFZhdWx0IHRvIHdpdGhkcmF3IGZyb21cIiksXG4gICAgYXNzZXRzOiB6b2RfMS56XG4gICAgICAgIC5zdHJpbmcoKVxuICAgICAgICAucmVnZXgoL15cXGQrJC8sIFwiTXVzdCBiZSBhIHZhbGlkIHdob2xlIG51bWJlclwiKVxuICAgICAgICAuZGVzY3JpYmUoXCJUaGUgYW1vdW50IG9mIGFzc2V0cyB0byB3aXRoZHJhdyBpbiBhdG9taWMgdW5pdHMgZS5nLiAxXCIpLFxuICAgIHJlY2VpdmVyOiB6b2RfMS56XG4gICAgICAgIC5zdHJpbmcoKVxuICAgICAgICAucmVnZXgoL14weFthLWZBLUYwLTldezQwfSQvLCBcIkludmFsaWQgRXRoZXJldW0gYWRkcmVzcyBmb3JtYXRcIilcbiAgICAgICAgLmRlc2NyaWJlKFwiVGhlIGFkZHJlc3MgdG8gcmVjZWl2ZSB0aGUgc2hhcmVzXCIpLFxufSlcbiAgICAuc3RyaXAoKVxuICAgIC5kZXNjcmliZShcIklucHV0IHNjaGVtYSBmb3IgTW9ycGhvIFZhdWx0IHdpdGhkcmF3IGFjdGlvblwiKTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIldpdGhkcmF3U2NoZW1hIiwiRGVwb3NpdFNjaGVtYSIsInpvZF8xIiwicmVxdWlyZSIsInoiLCJvYmplY3QiLCJhc3NldHMiLCJzdHJpbmciLCJyZWdleCIsImRlc2NyaWJlIiwicmVjZWl2ZXIiLCJ0b2tlbkFkZHJlc3MiLCJ2YXVsdEFkZHJlc3MiLCJzdHJpcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/morpho/schemas.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/pyth/index.js":
/*!**********************************************************!*\
  !*** ../../agentkit/dist/action-providers/pyth/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./pythActionProvider */ \"(rsc)/../../agentkit/dist/action-providers/pyth/pythActionProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/pyth/schemas.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL3B5dGgvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQU1DLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQzFGLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCLElBQUlHLE9BQU9QLE9BQU9RLHdCQUF3QixDQUFDTCxHQUFHQztJQUM5QyxJQUFJLENBQUNHLFFBQVMsVUFBU0EsT0FBTyxDQUFDSixFQUFFTSxVQUFVLEdBQUdGLEtBQUtHLFFBQVEsSUFBSUgsS0FBS0ksWUFBWSxHQUFHO1FBQ2pGSixPQUFPO1lBQUVLLFlBQVk7WUFBTUMsS0FBSztnQkFBYSxPQUFPVixDQUFDLENBQUNDLEVBQUU7WUFBRTtRQUFFO0lBQzlEO0lBQ0FKLE9BQU9jLGNBQWMsQ0FBQ1osR0FBR0csSUFBSUU7QUFDakMsSUFBTSxTQUFTTCxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJVyxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVNaLENBQUMsRUFBRWEsUUFBTztJQUNqRSxJQUFLLElBQUlDLEtBQUtkLEVBQUcsSUFBSWMsTUFBTSxhQUFhLENBQUNqQixPQUFPa0IsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0osVUFBU0MsSUFBSWxCLGdCQUFnQmlCLFVBQVNiLEdBQUdjO0FBQzNIO0FBQ0FqQiw4Q0FBNkM7SUFBRXFCLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0ROLGFBQWFPLG1CQUFPQSxDQUFDLG1HQUFzQixHQUFHTjtBQUM5Q0QsYUFBYU8sbUJBQU9BLENBQUMsNkVBQVcsR0FBR04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY29pbmJhc2UvY2RwLWxhbmdjaGFpbi1jaGF0Ym90LWV4YW1wbGUvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL3B5dGgvaW5kZXguanM/YWZjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3B5dGhBY3Rpb25Qcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2NoZW1hc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19lc01vZHVsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsImRlZmluZVByb3BlcnR5IiwiX19leHBvcnRTdGFyIiwiZXhwb3J0cyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ2YWx1ZSIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/pyth/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/pyth/pythActionProvider.js":
/*!***********************************************************************!*\
  !*** ../../agentkit/dist/action-providers/pyth/pythActionProvider.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __decorate = (void 0) && (void 0).__decorate || function(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (void 0) && (void 0).__metadata || function(k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.pythActionProvider = exports.PythActionProvider = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\nconst actionProvider_1 = __webpack_require__(/*! ../actionProvider */ \"(rsc)/../../agentkit/dist/action-providers/actionProvider.js\");\nconst actionDecorator_1 = __webpack_require__(/*! ../actionDecorator */ \"(rsc)/../../agentkit/dist/action-providers/actionDecorator.js\");\nconst schemas_1 = __webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/pyth/schemas.js\");\n/**\n * PythActionProvider is an action provider for Pyth.\n */ class PythActionProvider extends actionProvider_1.ActionProvider {\n    /**\n     * Constructs a new PythActionProvider.\n     */ constructor(){\n        super(\"pyth\", []);\n        /**\n         * Checks if the Pyth action provider supports the given network.\n         *\n         * @returns True if the Pyth action provider supports the network, false otherwise.\n         */ this.supportsNetwork = ()=>true;\n    }\n    /**\n     * Fetch the price feed ID for a given token symbol from Pyth.\n     *\n     * @param args - The arguments for the action.\n     * @returns The price feed ID as a string.\n     */ async fetchPriceFeed(args) {\n        const url = `https://hermes.pyth.network/v2/price_feeds?query=${args.tokenSymbol}&asset_type=crypto`;\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (data.length === 0) {\n            throw new Error(`No price feed found for ${args.tokenSymbol}`);\n        }\n        const filteredData = data.filter(// eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (item)=>item.attributes.base.toLowerCase() === args.tokenSymbol.toLowerCase());\n        if (filteredData.length === 0) {\n            throw new Error(`No price feed found for ${args.tokenSymbol}`);\n        }\n        return filteredData[0].id;\n    }\n    /**\n     * Fetches the price from Pyth given a Pyth price feed ID.\n     *\n     * @param args - The arguments for the action.\n     * @returns The price as a string.\n     */ async fetchPrice(args) {\n        const url = `https://hermes.pyth.network/v2/updates/price/latest?ids[]=${args.priceFeedID}`;\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const parsedData = data.parsed;\n        if (parsedData.length === 0) {\n            throw new Error(`No price data found for ${args.priceFeedID}`);\n        }\n        const priceInfo = parsedData[0].price;\n        const price = BigInt(priceInfo.price);\n        const exponent = priceInfo.expo;\n        if (exponent < 0) {\n            const adjustedPrice = price * BigInt(100);\n            const divisor = BigInt(10) ** BigInt(-exponent);\n            const scaledPrice = adjustedPrice / BigInt(divisor);\n            const priceStr = scaledPrice.toString();\n            const formattedPrice = `${priceStr.slice(0, -2)}.${priceStr.slice(-2)}`;\n            return formattedPrice.startsWith(\".\") ? `0${formattedPrice}` : formattedPrice;\n        }\n        const scaledPrice = price / BigInt(10) ** BigInt(exponent);\n        return scaledPrice.toString();\n    }\n}\nexports.PythActionProvider = PythActionProvider;\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"fetch_price_feed\",\n        description: \"Fetch the price feed ID for a given token symbol from Pyth.\",\n        schema: schemas_1.PythFetchPriceFeedIDSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], PythActionProvider.prototype, \"fetchPriceFeed\", null);\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"fetch_price\",\n        description: `Fetch the price of a given price feed from Pyth.\n\nInputs:\n- Pyth price feed ID\n\nImportant notes:\n- Do not assume that a random ID is a Pyth price feed ID. If you are confused, ask a clarifying question.\n- This action only fetches price inputs from Pyth price feeds. No other source.\n- If you are asked to fetch the price from Pyth for a ticker symbol such as BTC, you must first use the pyth_fetch_price_feed_id\naction to retrieve the price feed ID before invoking the pyth_Fetch_price action\n`,\n        schema: schemas_1.PythFetchPriceSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], PythActionProvider.prototype, \"fetchPrice\", null);\nconst pythActionProvider = ()=>new PythActionProvider();\nexports.pythActionProvider = pythActionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/pyth/pythActionProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/pyth/schemas.js":
/*!************************************************************!*\
  !*** ../../agentkit/dist/action-providers/pyth/schemas.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.PythFetchPriceSchema = exports.PythFetchPriceFeedIDSchema = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\n/**\n * Input schema for Pyth fetch price feed ID action.\n */ exports.PythFetchPriceFeedIDSchema = zod_1.z.object({\n    tokenSymbol: zod_1.z.string().describe(\"The token symbol to fetch the price feed ID for\")\n}).strict();\n/**\n * Input schema for Pyth fetch price action.\n */ exports.PythFetchPriceSchema = zod_1.z.object({\n    priceFeedID: zod_1.z.string().describe(\"The price feed ID to fetch the price for\")\n}).strict();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL3B5dGgvc2NoZW1hcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsNEJBQTRCLEdBQUdBLGtDQUFrQyxHQUFHLEtBQUs7QUFDekUsTUFBTUksUUFBUUMsbUJBQU9BLENBQUMseURBQUs7QUFDM0I7O0NBRUMsR0FDREwsa0NBQWtDLEdBQUdJLE1BQU1FLENBQUMsQ0FDdkNDLE1BQU0sQ0FBQztJQUNSQyxhQUFhSixNQUFNRSxDQUFDLENBQUNHLE1BQU0sR0FBR0MsUUFBUSxDQUFDO0FBQzNDLEdBQ0tDLE1BQU07QUFDWDs7Q0FFQyxHQUNEWCw0QkFBNEIsR0FBR0ksTUFBTUUsQ0FBQyxDQUNqQ0MsTUFBTSxDQUFDO0lBQ1JLLGFBQWFSLE1BQU1FLENBQUMsQ0FBQ0csTUFBTSxHQUFHQyxRQUFRLENBQUM7QUFDM0MsR0FDS0MsTUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L2FjdGlvbi1wcm92aWRlcnMvcHl0aC9zY2hlbWFzLmpzPzk2YjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlB5dGhGZXRjaFByaWNlU2NoZW1hID0gZXhwb3J0cy5QeXRoRmV0Y2hQcmljZUZlZWRJRFNjaGVtYSA9IHZvaWQgMDtcbmNvbnN0IHpvZF8xID0gcmVxdWlyZShcInpvZFwiKTtcbi8qKlxuICogSW5wdXQgc2NoZW1hIGZvciBQeXRoIGZldGNoIHByaWNlIGZlZWQgSUQgYWN0aW9uLlxuICovXG5leHBvcnRzLlB5dGhGZXRjaFByaWNlRmVlZElEU2NoZW1hID0gem9kXzEuelxuICAgIC5vYmplY3Qoe1xuICAgIHRva2VuU3ltYm9sOiB6b2RfMS56LnN0cmluZygpLmRlc2NyaWJlKFwiVGhlIHRva2VuIHN5bWJvbCB0byBmZXRjaCB0aGUgcHJpY2UgZmVlZCBJRCBmb3JcIiksXG59KVxuICAgIC5zdHJpY3QoKTtcbi8qKlxuICogSW5wdXQgc2NoZW1hIGZvciBQeXRoIGZldGNoIHByaWNlIGFjdGlvbi5cbiAqL1xuZXhwb3J0cy5QeXRoRmV0Y2hQcmljZVNjaGVtYSA9IHpvZF8xLnpcbiAgICAub2JqZWN0KHtcbiAgICBwcmljZUZlZWRJRDogem9kXzEuei5zdHJpbmcoKS5kZXNjcmliZShcIlRoZSBwcmljZSBmZWVkIElEIHRvIGZldGNoIHRoZSBwcmljZSBmb3JcIiksXG59KVxuICAgIC5zdHJpY3QoKTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlB5dGhGZXRjaFByaWNlU2NoZW1hIiwiUHl0aEZldGNoUHJpY2VGZWVkSURTY2hlbWEiLCJ6b2RfMSIsInJlcXVpcmUiLCJ6Iiwib2JqZWN0IiwidG9rZW5TeW1ib2wiLCJzdHJpbmciLCJkZXNjcmliZSIsInN0cmljdCIsInByaWNlRmVlZElEIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/pyth/schemas.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/twitter/index.js":
/*!*************************************************************!*\
  !*** ../../agentkit/dist/action-providers/twitter/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/twitter/schemas.js\"), exports);\n__exportStar(__webpack_require__(/*! ./twitterActionProvider */ \"(rsc)/../../agentkit/dist/action-providers/twitter/twitterActionProvider.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL3R3aXR0ZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQU1DLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQzFGLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCLElBQUlHLE9BQU9QLE9BQU9RLHdCQUF3QixDQUFDTCxHQUFHQztJQUM5QyxJQUFJLENBQUNHLFFBQVMsVUFBU0EsT0FBTyxDQUFDSixFQUFFTSxVQUFVLEdBQUdGLEtBQUtHLFFBQVEsSUFBSUgsS0FBS0ksWUFBWSxHQUFHO1FBQ2pGSixPQUFPO1lBQUVLLFlBQVk7WUFBTUMsS0FBSztnQkFBYSxPQUFPVixDQUFDLENBQUNDLEVBQUU7WUFBRTtRQUFFO0lBQzlEO0lBQ0FKLE9BQU9jLGNBQWMsQ0FBQ1osR0FBR0csSUFBSUU7QUFDakMsSUFBTSxTQUFTTCxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJVyxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVNaLENBQUMsRUFBRWEsUUFBTztJQUNqRSxJQUFLLElBQUlDLEtBQUtkLEVBQUcsSUFBSWMsTUFBTSxhQUFhLENBQUNqQixPQUFPa0IsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0osVUFBU0MsSUFBSWxCLGdCQUFnQmlCLFVBQVNiLEdBQUdjO0FBQzNIO0FBQ0FqQiw4Q0FBNkM7SUFBRXFCLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0ROLGFBQWFPLG1CQUFPQSxDQUFDLGdGQUFXLEdBQUdOO0FBQ25DRCxhQUFhTyxtQkFBT0EsQ0FBQyw0R0FBeUIsR0FBR04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY29pbmJhc2UvY2RwLWxhbmdjaGFpbi1jaGF0Ym90LWV4YW1wbGUvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL3R3aXR0ZXIvaW5kZXguanM/ZTNhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NjaGVtYXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R3aXR0ZXJBY3Rpb25Qcm92aWRlclwiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19lc01vZHVsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsImRlZmluZVByb3BlcnR5IiwiX19leHBvcnRTdGFyIiwiZXhwb3J0cyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ2YWx1ZSIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/twitter/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/twitter/schemas.js":
/*!***************************************************************!*\
  !*** ../../agentkit/dist/action-providers/twitter/schemas.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.TwitterPostTweetReplySchema = exports.TwitterPostTweetSchema = exports.TwitterAccountMentionsSchema = exports.TwitterAccountDetailsSchema = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\n/**\n * Input schema for retrieving account details.\n */ exports.TwitterAccountDetailsSchema = zod_1.z.object({}).strip().describe(\"Input schema for retrieving account details\");\n/**\n * Input schema for retrieving account mentions.\n */ exports.TwitterAccountMentionsSchema = zod_1.z.object({\n    userId: zod_1.z.string().min(1, \"Account ID is required.\").describe(\"The Twitter (X) user id to return mentions for\")\n}).strip().describe(\"Input schema for retrieving account mentions\");\n/**\n * Input schema for posting a tweet.\n */ exports.TwitterPostTweetSchema = zod_1.z.object({\n    tweet: zod_1.z.string().max(280, \"Tweet must be a maximum of 280 characters.\")\n}).strip().describe(\"Input schema for posting a tweet\");\n/**\n * Input schema for posting a tweet reply.\n */ exports.TwitterPostTweetReplySchema = zod_1.z.object({\n    tweetId: zod_1.z.string().describe(\"The id of the tweet to reply to\"),\n    tweetReply: zod_1.z.string().max(280, \"The reply to the tweet which must be a maximum of 280 characters.\")\n}).strip().describe(\"Input schema for posting a tweet reply\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL3R3aXR0ZXIvc2NoZW1hcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsbUNBQW1DLEdBQUdBLDhCQUE4QixHQUFHQSxvQ0FBb0MsR0FBR0EsbUNBQW1DLEdBQUcsS0FBSztBQUN6SixNQUFNTSxRQUFRQyxtQkFBT0EsQ0FBQyx5REFBSztBQUMzQjs7Q0FFQyxHQUNEUCxtQ0FBbUMsR0FBR00sTUFBTUUsQ0FBQyxDQUN4Q0MsTUFBTSxDQUFDLENBQUMsR0FDUkMsS0FBSyxHQUNMQyxRQUFRLENBQUM7QUFDZDs7Q0FFQyxHQUNEWCxvQ0FBb0MsR0FBR00sTUFBTUUsQ0FBQyxDQUN6Q0MsTUFBTSxDQUFDO0lBQ1JHLFFBQVFOLE1BQU1FLENBQUMsQ0FDVkssTUFBTSxHQUNOQyxHQUFHLENBQUMsR0FBRywyQkFDUEgsUUFBUSxDQUFDO0FBQ2xCLEdBQ0tELEtBQUssR0FDTEMsUUFBUSxDQUFDO0FBQ2Q7O0NBRUMsR0FDRFgsOEJBQThCLEdBQUdNLE1BQU1FLENBQUMsQ0FDbkNDLE1BQU0sQ0FBQztJQUNSTSxPQUFPVCxNQUFNRSxDQUFDLENBQUNLLE1BQU0sR0FBR0csR0FBRyxDQUFDLEtBQUs7QUFDckMsR0FDS04sS0FBSyxHQUNMQyxRQUFRLENBQUM7QUFDZDs7Q0FFQyxHQUNEWCxtQ0FBbUMsR0FBR00sTUFBTUUsQ0FBQyxDQUN4Q0MsTUFBTSxDQUFDO0lBQ1JRLFNBQVNYLE1BQU1FLENBQUMsQ0FBQ0ssTUFBTSxHQUFHRixRQUFRLENBQUM7SUFDbkNPLFlBQVlaLE1BQU1FLENBQUMsQ0FDZEssTUFBTSxHQUNORyxHQUFHLENBQUMsS0FBSztBQUNsQixHQUNLTixLQUFLLEdBQ0xDLFFBQVEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L2FjdGlvbi1wcm92aWRlcnMvdHdpdHRlci9zY2hlbWFzLmpzPzcyZjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlR3aXR0ZXJQb3N0VHdlZXRSZXBseVNjaGVtYSA9IGV4cG9ydHMuVHdpdHRlclBvc3RUd2VldFNjaGVtYSA9IGV4cG9ydHMuVHdpdHRlckFjY291bnRNZW50aW9uc1NjaGVtYSA9IGV4cG9ydHMuVHdpdHRlckFjY291bnREZXRhaWxzU2NoZW1hID0gdm9pZCAwO1xuY29uc3Qgem9kXzEgPSByZXF1aXJlKFwiem9kXCIpO1xuLyoqXG4gKiBJbnB1dCBzY2hlbWEgZm9yIHJldHJpZXZpbmcgYWNjb3VudCBkZXRhaWxzLlxuICovXG5leHBvcnRzLlR3aXR0ZXJBY2NvdW50RGV0YWlsc1NjaGVtYSA9IHpvZF8xLnpcbiAgICAub2JqZWN0KHt9KVxuICAgIC5zdHJpcCgpXG4gICAgLmRlc2NyaWJlKFwiSW5wdXQgc2NoZW1hIGZvciByZXRyaWV2aW5nIGFjY291bnQgZGV0YWlsc1wiKTtcbi8qKlxuICogSW5wdXQgc2NoZW1hIGZvciByZXRyaWV2aW5nIGFjY291bnQgbWVudGlvbnMuXG4gKi9cbmV4cG9ydHMuVHdpdHRlckFjY291bnRNZW50aW9uc1NjaGVtYSA9IHpvZF8xLnpcbiAgICAub2JqZWN0KHtcbiAgICB1c2VySWQ6IHpvZF8xLnpcbiAgICAgICAgLnN0cmluZygpXG4gICAgICAgIC5taW4oMSwgXCJBY2NvdW50IElEIGlzIHJlcXVpcmVkLlwiKVxuICAgICAgICAuZGVzY3JpYmUoXCJUaGUgVHdpdHRlciAoWCkgdXNlciBpZCB0byByZXR1cm4gbWVudGlvbnMgZm9yXCIpLFxufSlcbiAgICAuc3RyaXAoKVxuICAgIC5kZXNjcmliZShcIklucHV0IHNjaGVtYSBmb3IgcmV0cmlldmluZyBhY2NvdW50IG1lbnRpb25zXCIpO1xuLyoqXG4gKiBJbnB1dCBzY2hlbWEgZm9yIHBvc3RpbmcgYSB0d2VldC5cbiAqL1xuZXhwb3J0cy5Ud2l0dGVyUG9zdFR3ZWV0U2NoZW1hID0gem9kXzEuelxuICAgIC5vYmplY3Qoe1xuICAgIHR3ZWV0OiB6b2RfMS56LnN0cmluZygpLm1heCgyODAsIFwiVHdlZXQgbXVzdCBiZSBhIG1heGltdW0gb2YgMjgwIGNoYXJhY3RlcnMuXCIpLFxufSlcbiAgICAuc3RyaXAoKVxuICAgIC5kZXNjcmliZShcIklucHV0IHNjaGVtYSBmb3IgcG9zdGluZyBhIHR3ZWV0XCIpO1xuLyoqXG4gKiBJbnB1dCBzY2hlbWEgZm9yIHBvc3RpbmcgYSB0d2VldCByZXBseS5cbiAqL1xuZXhwb3J0cy5Ud2l0dGVyUG9zdFR3ZWV0UmVwbHlTY2hlbWEgPSB6b2RfMS56XG4gICAgLm9iamVjdCh7XG4gICAgdHdlZXRJZDogem9kXzEuei5zdHJpbmcoKS5kZXNjcmliZShcIlRoZSBpZCBvZiB0aGUgdHdlZXQgdG8gcmVwbHkgdG9cIiksXG4gICAgdHdlZXRSZXBseTogem9kXzEuelxuICAgICAgICAuc3RyaW5nKClcbiAgICAgICAgLm1heCgyODAsIFwiVGhlIHJlcGx5IHRvIHRoZSB0d2VldCB3aGljaCBtdXN0IGJlIGEgbWF4aW11bSBvZiAyODAgY2hhcmFjdGVycy5cIiksXG59KVxuICAgIC5zdHJpcCgpXG4gICAgLmRlc2NyaWJlKFwiSW5wdXQgc2NoZW1hIGZvciBwb3N0aW5nIGEgdHdlZXQgcmVwbHlcIik7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJUd2l0dGVyUG9zdFR3ZWV0UmVwbHlTY2hlbWEiLCJUd2l0dGVyUG9zdFR3ZWV0U2NoZW1hIiwiVHdpdHRlckFjY291bnRNZW50aW9uc1NjaGVtYSIsIlR3aXR0ZXJBY2NvdW50RGV0YWlsc1NjaGVtYSIsInpvZF8xIiwicmVxdWlyZSIsInoiLCJvYmplY3QiLCJzdHJpcCIsImRlc2NyaWJlIiwidXNlcklkIiwic3RyaW5nIiwibWluIiwidHdlZXQiLCJtYXgiLCJ0d2VldElkIiwidHdlZXRSZXBseSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/twitter/schemas.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/twitter/twitterActionProvider.js":
/*!*****************************************************************************!*\
  !*** ../../agentkit/dist/action-providers/twitter/twitterActionProvider.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __decorate = (void 0) && (void 0).__decorate || function(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (void 0) && (void 0).__metadata || function(k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.twitterActionProvider = exports.TwitterActionProvider = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\nconst actionProvider_1 = __webpack_require__(/*! ../actionProvider */ \"(rsc)/../../agentkit/dist/action-providers/actionProvider.js\");\nconst actionDecorator_1 = __webpack_require__(/*! ../actionDecorator */ \"(rsc)/../../agentkit/dist/action-providers/actionDecorator.js\");\nconst twitter_api_v2_1 = __webpack_require__(/*! twitter-api-v2 */ \"(rsc)/../../../node_modules/twitter-api-v2/dist/esm/index.js\");\nconst schemas_1 = __webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/twitter/schemas.js\");\n/**\n * TwitterActionProvider is an action provider for Twitter (X) interactions.\n *\n * @augments ActionProvider\n */ class TwitterActionProvider extends actionProvider_1.ActionProvider {\n    /**\n     * Constructor for the TwitterActionProvider class.\n     *\n     * @param config - The configuration options for the TwitterActionProvider\n     */ constructor(config = {}){\n        super(\"twitter\", []);\n        config.apiKey || (config.apiKey = process.env.TWITTER_API_KEY);\n        config.apiSecret || (config.apiSecret = process.env.TWITTER_API_SECRET);\n        config.accessToken || (config.accessToken = process.env.TWITTER_ACCESS_TOKEN);\n        config.accessTokenSecret || (config.accessTokenSecret = process.env.TWITTER_ACCESS_TOKEN_SECRET);\n        if (!config.apiKey) {\n            throw new Error(\"TWITTER_API_KEY is not configured.\");\n        }\n        if (!config.apiSecret) {\n            throw new Error(\"TWITTER_API_SECRET is not configured.\");\n        }\n        if (!config.accessToken) {\n            throw new Error(\"TWITTER_ACCESS_TOKEN is not configured.\");\n        }\n        if (!config.accessTokenSecret) {\n            throw new Error(\"TWITTER_ACCESS_TOKEN_SECRET is not configured.\");\n        }\n        this.client = new twitter_api_v2_1.TwitterApi({\n            appKey: config.apiKey,\n            appSecret: config.apiSecret,\n            accessToken: config.accessToken,\n            accessSecret: config.accessTokenSecret\n        });\n    }\n    /**\n     * Get account details for the currently authenticated Twitter (X) user.\n     *\n     * @param _ - Empty parameter object (not used)\n     * @returns A JSON string containing the account details or error message\n     */ async accountDetails(_) {\n        try {\n            const response = await this.client.v2.me();\n            response.data.url = `https://x.com/${response.data.username}`;\n            return `Successfully retrieved authenticated user account details:\\n${JSON.stringify(response)}`;\n        } catch (error) {\n            return `Error retrieving authenticated user account details: ${error}`;\n        }\n    }\n    /**\n     * Get mentions for a specified Twitter (X) user.\n     *\n     * @param args - The arguments containing userId\n     * @returns A JSON string containing the mentions or error message\n     */ async accountMentions(args) {\n        try {\n            const response = await this.client.v2.userMentionTimeline(args.userId);\n            return `Successfully retrieved account mentions:\\n${JSON.stringify(response)}`;\n        } catch (error) {\n            return `Error retrieving authenticated account mentions: ${error}`;\n        }\n    }\n    /**\n     * Post a tweet on Twitter (X).\n     *\n     * @param args - The arguments containing the tweet text\n     * @returns A JSON string containing the posted tweet details or error message\n     */ async postTweet(args) {\n        try {\n            const response = await this.client.v2.tweet(args.tweet);\n            return `Successfully posted to Twitter:\\n${JSON.stringify(response)}`;\n        } catch (error) {\n            return `Error posting to Twitter:\\n${error}`;\n        }\n    }\n    /**\n     * Post a reply to a tweet on Twitter (X).\n     *\n     * @param args - The arguments containing the reply text and tweet ID\n     * @returns A JSON string containing the posted reply details or error message\n     */ async postTweetReply(args) {\n        try {\n            const response = await this.client.v2.tweet(args.tweetReply, {\n                reply: {\n                    in_reply_to_tweet_id: args.tweetId\n                }\n            });\n            return `Successfully posted reply to Twitter:\\n${JSON.stringify(response)}`;\n        } catch (error) {\n            return `Error posting reply to Twitter: ${error}`;\n        }\n    }\n    /**\n     * Checks if the Twitter action provider supports the given network.\n     * Twitter actions don't depend on blockchain networks, so always return true.\n     *\n     * @param _ - The network to check (not used)\n     * @returns Always returns true as Twitter actions are network-independent\n     */ supportsNetwork(_) {\n        return true;\n    }\n}\nexports.TwitterActionProvider = TwitterActionProvider;\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"account_details\",\n        description: `\nThis tool will return account details for the currently authenticated Twitter (X) user context.\n\nA successful response will return a message with the api response as a json payload:\n    {\"data\": {\"id\": \"1853889445319331840\", \"name\": \"CDP AgentKit\", \"username\": \"CDPAgentKit\"}}\n\nA failure response will return a message with a Twitter API request error:\n    Error retrieving authenticated user account: 429 Too Many Requests`,\n        schema: schemas_1.TwitterAccountDetailsSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], TwitterActionProvider.prototype, \"accountDetails\", null);\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"account_mentions\",\n        description: `\nThis tool will return mentions for the specified Twitter (X) user id.\n\nA successful response will return a message with the API response as a JSON payload:\n    {\"data\": [{\"id\": \"1857479287504584856\", \"text\": \"@CDPAgentKit reply\"}]}\n\nA failure response will return a message with the Twitter API request error:\n    Error retrieving user mentions: 429 Too Many Requests`,\n        schema: schemas_1.TwitterAccountMentionsSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], TwitterActionProvider.prototype, \"accountMentions\", null);\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"post_tweet\",\n        description: `\nThis tool will post a tweet on Twitter. The tool takes the text of the tweet as input. Tweets can be maximum 280 characters.\n\nA successful response will return a message with the API response as a JSON payload:\n    {\"data\": {\"text\": \"hello, world!\", \"id\": \"0123456789012345678\", \"edit_history_tweet_ids\": [\"0123456789012345678\"]}}\n\nA failure response will return a message with the Twitter API request error:\n    You are not allowed to create a Tweet with duplicate content.`,\n        schema: schemas_1.TwitterPostTweetSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], TwitterActionProvider.prototype, \"postTweet\", null);\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"post_tweet_reply\",\n        description: `\nThis tool will post a tweet on Twitter. The tool takes the text of the tweet as input. Tweets can be maximum 280 characters.\n\nA successful response will return a message with the API response as a JSON payload:\n    {\"data\": {\"text\": \"hello, world!\", \"id\": \"0123456789012345678\", \"edit_history_tweet_ids\": [\"0123456789012345678\"]}}\n\nA failure response will return a message with the Twitter API request error:\n    You are not allowed to create a Tweet with duplicate content.`,\n        schema: schemas_1.TwitterPostTweetReplySchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], TwitterActionProvider.prototype, \"postTweetReply\", null);\n/**\n * Factory function to create a new TwitterActionProvider instance.\n *\n * @param config - The configuration options for the TwitterActionProvider\n * @returns A new instance of TwitterActionProvider\n */ const twitterActionProvider = (config = {})=>new TwitterActionProvider(config);\nexports.twitterActionProvider = twitterActionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/twitter/twitterActionProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/wallet/index.js":
/*!************************************************************!*\
  !*** ../../agentkit/dist/action-providers/wallet/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./walletActionProvider */ \"(rsc)/../../agentkit/dist/action-providers/wallet/walletActionProvider.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL3dhbGxldC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0IsSUFBSUcsT0FBT1AsT0FBT1Esd0JBQXdCLENBQUNMLEdBQUdDO0lBQzlDLElBQUksQ0FBQ0csUUFBUyxVQUFTQSxPQUFPLENBQUNKLEVBQUVNLFVBQVUsR0FBR0YsS0FBS0csUUFBUSxJQUFJSCxLQUFLSSxZQUFZLEdBQUc7UUFDakZKLE9BQU87WUFBRUssWUFBWTtZQUFNQyxLQUFLO2dCQUFhLE9BQU9WLENBQUMsQ0FBQ0MsRUFBRTtZQUFFO1FBQUU7SUFDOUQ7SUFDQUosT0FBT2MsY0FBYyxDQUFDWixHQUFHRyxJQUFJRTtBQUNqQyxJQUFNLFNBQVNMLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlXLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBU1osQ0FBQyxFQUFFYSxRQUFPO0lBQ2pFLElBQUssSUFBSUMsS0FBS2QsRUFBRyxJQUFJYyxNQUFNLGFBQWEsQ0FBQ2pCLE9BQU9rQixTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixVQUFTQyxJQUFJbEIsZ0JBQWdCaUIsVUFBU2IsR0FBR2M7QUFDM0g7QUFDQWpCLDhDQUE2QztJQUFFcUIsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RE4sYUFBYU8sbUJBQU9BLENBQUMseUdBQXdCLEdBQUdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNvaW5iYXNlL2NkcC1sYW5nY2hhaW4tY2hhdGJvdC1leGFtcGxlLy4uLy4uL2FnZW50a2l0L2Rpc3QvYWN0aW9uLXByb3ZpZGVycy93YWxsZXQvaW5kZXguanM/MmMyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3dhbGxldEFjdGlvblByb3ZpZGVyXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6WyJfX2NyZWF0ZUJpbmRpbmciLCJPYmplY3QiLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlc2MiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfX2VzTW9kdWxlIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZGVmaW5lUHJvcGVydHkiLCJfX2V4cG9ydFN0YXIiLCJleHBvcnRzIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInZhbHVlIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/wallet/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/wallet/schemas.js":
/*!**************************************************************!*\
  !*** ../../agentkit/dist/action-providers/wallet/schemas.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.NativeTransferSchema = exports.GetWalletDetailsSchema = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\n/**\n * Schema for the get_wallet_details action.\n * This action doesn't require any input parameters, so we use an empty object schema.\n */ exports.GetWalletDetailsSchema = zod_1.z.object({});\n/**\n * Input schema for native transfer action.\n */ exports.NativeTransferSchema = zod_1.z.object({\n    to: zod_1.z.string().describe(\"The destination address to receive the funds\"),\n    value: zod_1.z.string().describe(\"The amount to transfer in whole units e.g. 1 ETH or 0.00001 ETH\")\n}).strip().describe(\"Instructions for transferring native tokens\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL3dhbGxldC9zY2hlbWFzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCw0QkFBNEIsR0FBR0EsOEJBQThCLEdBQUcsS0FBSztBQUNyRSxNQUFNSSxRQUFRQyxtQkFBT0EsQ0FBQyx5REFBSztBQUMzQjs7O0NBR0MsR0FDREwsOEJBQThCLEdBQUdJLE1BQU1FLENBQUMsQ0FBQ0MsTUFBTSxDQUFDLENBQUM7QUFDakQ7O0NBRUMsR0FDRFAsNEJBQTRCLEdBQUdJLE1BQU1FLENBQUMsQ0FDakNDLE1BQU0sQ0FBQztJQUNSQyxJQUFJSixNQUFNRSxDQUFDLENBQUNHLE1BQU0sR0FBR0MsUUFBUSxDQUFDO0lBQzlCVCxPQUFPRyxNQUFNRSxDQUFDLENBQUNHLE1BQU0sR0FBR0MsUUFBUSxDQUFDO0FBQ3JDLEdBQ0tDLEtBQUssR0FDTEQsUUFBUSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNvaW5iYXNlL2NkcC1sYW5nY2hhaW4tY2hhdGJvdC1leGFtcGxlLy4uLy4uL2FnZW50a2l0L2Rpc3QvYWN0aW9uLXByb3ZpZGVycy93YWxsZXQvc2NoZW1hcy5qcz9hM2UyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5OYXRpdmVUcmFuc2ZlclNjaGVtYSA9IGV4cG9ydHMuR2V0V2FsbGV0RGV0YWlsc1NjaGVtYSA9IHZvaWQgMDtcbmNvbnN0IHpvZF8xID0gcmVxdWlyZShcInpvZFwiKTtcbi8qKlxuICogU2NoZW1hIGZvciB0aGUgZ2V0X3dhbGxldF9kZXRhaWxzIGFjdGlvbi5cbiAqIFRoaXMgYWN0aW9uIGRvZXNuJ3QgcmVxdWlyZSBhbnkgaW5wdXQgcGFyYW1ldGVycywgc28gd2UgdXNlIGFuIGVtcHR5IG9iamVjdCBzY2hlbWEuXG4gKi9cbmV4cG9ydHMuR2V0V2FsbGV0RGV0YWlsc1NjaGVtYSA9IHpvZF8xLnoub2JqZWN0KHt9KTtcbi8qKlxuICogSW5wdXQgc2NoZW1hIGZvciBuYXRpdmUgdHJhbnNmZXIgYWN0aW9uLlxuICovXG5leHBvcnRzLk5hdGl2ZVRyYW5zZmVyU2NoZW1hID0gem9kXzEuelxuICAgIC5vYmplY3Qoe1xuICAgIHRvOiB6b2RfMS56LnN0cmluZygpLmRlc2NyaWJlKFwiVGhlIGRlc3RpbmF0aW9uIGFkZHJlc3MgdG8gcmVjZWl2ZSB0aGUgZnVuZHNcIiksXG4gICAgdmFsdWU6IHpvZF8xLnouc3RyaW5nKCkuZGVzY3JpYmUoXCJUaGUgYW1vdW50IHRvIHRyYW5zZmVyIGluIHdob2xlIHVuaXRzIGUuZy4gMSBFVEggb3IgMC4wMDAwMSBFVEhcIiksXG59KVxuICAgIC5zdHJpcCgpXG4gICAgLmRlc2NyaWJlKFwiSW5zdHJ1Y3Rpb25zIGZvciB0cmFuc2ZlcnJpbmcgbmF0aXZlIHRva2Vuc1wiKTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIk5hdGl2ZVRyYW5zZmVyU2NoZW1hIiwiR2V0V2FsbGV0RGV0YWlsc1NjaGVtYSIsInpvZF8xIiwicmVxdWlyZSIsInoiLCJvYmplY3QiLCJ0byIsInN0cmluZyIsImRlc2NyaWJlIiwic3RyaXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/wallet/schemas.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/wallet/walletActionProvider.js":
/*!***************************************************************************!*\
  !*** ../../agentkit/dist/action-providers/wallet/walletActionProvider.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __decorate = (void 0) && (void 0).__decorate || function(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (void 0) && (void 0).__metadata || function(k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.walletActionProvider = exports.WalletActionProvider = void 0;\nconst decimal_js_1 = __webpack_require__(/*! decimal.js */ \"(rsc)/../../../node_modules/decimal.js/decimal.js\");\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\nconst actionDecorator_1 = __webpack_require__(/*! ../actionDecorator */ \"(rsc)/../../agentkit/dist/action-providers/actionDecorator.js\");\nconst actionProvider_1 = __webpack_require__(/*! ../actionProvider */ \"(rsc)/../../agentkit/dist/action-providers/actionProvider.js\");\nconst wallet_providers_1 = __webpack_require__(/*! ../../wallet-providers */ \"(rsc)/../../agentkit/dist/wallet-providers/index.js\");\nconst schemas_1 = __webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/wallet/schemas.js\");\n/**\n * WalletActionProvider provides actions for getting basic wallet information.\n */ class WalletActionProvider extends actionProvider_1.ActionProvider {\n    /**\n     * Constructor for the WalletActionProvider.\n     */ constructor(){\n        super(\"wallet\", []);\n        /**\n         * Checks if the wallet action provider supports the given network.\n         * Since wallet actions are network-agnostic, this always returns true.\n         *\n         * @param _ - The network to check.\n         * @returns True, as wallet actions are supported on all networks.\n         */ this.supportsNetwork = (_)=>true;\n    }\n    /**\n     * Gets the details of the connected wallet including address, network, and balance.\n     *\n     * @param walletProvider - The wallet provider to get the details from.\n     * @param _ - Empty args object (not used).\n     * @returns A formatted string containing the wallet details.\n     */ async getWalletDetails(walletProvider, _) {\n        try {\n            const address = walletProvider.getAddress();\n            const network = walletProvider.getNetwork();\n            const balance = await walletProvider.getBalance();\n            const name = walletProvider.getName();\n            // Convert balance from Wei to ETH using Decimal for precision\n            const ethBalance = new decimal_js_1.Decimal(balance.toString()).div(new decimal_js_1.Decimal(10).pow(18));\n            return `Wallet Details:\n- Provider: ${name}\n- Address: ${address}\n- Network: \n  * Protocol Family: ${network.protocolFamily}\n  * Network ID: ${network.networkId || \"N/A\"}\n  * Chain ID: ${network.chainId || \"N/A\"}\n- ETH Balance: ${ethBalance.toFixed(6)} ETH\n- Native Balance: ${balance.toString()} WEI`;\n        } catch (error) {\n            return `Error getting wallet details: ${error}`;\n        }\n    }\n    /**\n     * Transfers a specified amount of an asset to a destination onchain.\n     *\n     * @param walletProvider - The wallet provider to transfer from.\n     * @param args - The input arguments for the action.\n     * @returns A message containing the transfer details.\n     */ async nativeTransfer(walletProvider, args) {\n        try {\n            const result = await walletProvider.nativeTransfer(args.to, args.value);\n            return `Transferred ${args.value} ETH to ${args.to}.\\nTransaction hash: ${result}`;\n        } catch (error) {\n            return `Error transferring the asset: ${error}`;\n        }\n    }\n}\nexports.WalletActionProvider = WalletActionProvider;\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"get_wallet_details\",\n        description: `\n    This tool will return the details of the connected wallet including:\n    - Wallet address\n    - Network information (protocol family, network ID, chain ID)\n    - ETH token balance\n    - Native token balance\n    - Wallet provider name\n    `,\n        schema: schemas_1.GetWalletDetailsSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.WalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], WalletActionProvider.prototype, \"getWalletDetails\", null);\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"native_transfer\",\n        description: `\nThis tool will transfer native tokens from the wallet to another onchain address.\n\nIt takes the following inputs:\n- amount: The amount to transfer in whole units e.g. 1 ETH or 0.00001 ETH\n- destination: The address to receive the funds\n\nImportant notes:\n- Ensure sufficient balance of the input asset before transferring\n- Ensure there is sufficient native token balance for gas fees\n`,\n        schema: schemas_1.NativeTransferSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.WalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], WalletActionProvider.prototype, \"nativeTransfer\", null);\n/**\n * Factory function to create a new WalletActionProvider instance.\n *\n * @returns A new WalletActionProvider instance.\n */ const walletActionProvider = ()=>new WalletActionProvider();\nexports.walletActionProvider = walletActionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/wallet/walletActionProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/weth/constants.js":
/*!**************************************************************!*\
  !*** ../../agentkit/dist/action-providers/weth/constants.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.WETH_ABI = exports.WETH_ADDRESS = void 0;\nexports.WETH_ADDRESS = \"0x4200000000000000000000000000000000000006\";\nexports.WETH_ABI = [\n    {\n        inputs: [],\n        name: \"deposit\",\n        outputs: [],\n        stateMutability: \"payable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                name: \"account\",\n                type: \"address\"\n            }\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    }\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL3dldGgvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQkFBZ0IsR0FBR0Esb0JBQW9CLEdBQUcsS0FBSztBQUMvQ0Esb0JBQW9CLEdBQUc7QUFDdkJBLGdCQUFnQixHQUFHO0lBQ2Y7UUFDSUksUUFBUSxFQUFFO1FBQ1ZDLE1BQU07UUFDTkMsU0FBUyxFQUFFO1FBQ1hDLGlCQUFpQjtRQUNqQkMsTUFBTTtJQUNWO0lBQ0E7UUFDSUosUUFBUTtZQUNKO2dCQUNJQyxNQUFNO2dCQUNORyxNQUFNO1lBQ1Y7U0FDSDtRQUNESCxNQUFNO1FBQ05DLFNBQVM7WUFDTDtnQkFDSUUsTUFBTTtZQUNWO1NBQ0g7UUFDREQsaUJBQWlCO1FBQ2pCQyxNQUFNO0lBQ1Y7Q0FDSCIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L2FjdGlvbi1wcm92aWRlcnMvd2V0aC9jb25zdGFudHMuanM/YTkyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuV0VUSF9BQkkgPSBleHBvcnRzLldFVEhfQUREUkVTUyA9IHZvaWQgMDtcbmV4cG9ydHMuV0VUSF9BRERSRVNTID0gXCIweDQyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDZcIjtcbmV4cG9ydHMuV0VUSF9BQkkgPSBbXG4gICAge1xuICAgICAgICBpbnB1dHM6IFtdLFxuICAgICAgICBuYW1lOiBcImRlcG9zaXRcIixcbiAgICAgICAgb3V0cHV0czogW10sXG4gICAgICAgIHN0YXRlTXV0YWJpbGl0eTogXCJwYXlhYmxlXCIsXG4gICAgICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgaW5wdXRzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJhY2NvdW50XCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICBuYW1lOiBcImJhbGFuY2VPZlwiLFxuICAgICAgICBvdXRwdXRzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgICAgICB0eXBlOiBcImZ1bmN0aW9uXCIsXG4gICAgfSxcbl07XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJXRVRIX0FCSSIsIldFVEhfQUREUkVTUyIsImlucHV0cyIsIm5hbWUiLCJvdXRwdXRzIiwic3RhdGVNdXRhYmlsaXR5IiwidHlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/weth/constants.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/weth/index.js":
/*!**********************************************************!*\
  !*** ../../agentkit/dist/action-providers/weth/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./wethActionProvider */ \"(rsc)/../../agentkit/dist/action-providers/weth/wethActionProvider.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL3dldGgvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQU1DLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQzFGLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCLElBQUlHLE9BQU9QLE9BQU9RLHdCQUF3QixDQUFDTCxHQUFHQztJQUM5QyxJQUFJLENBQUNHLFFBQVMsVUFBU0EsT0FBTyxDQUFDSixFQUFFTSxVQUFVLEdBQUdGLEtBQUtHLFFBQVEsSUFBSUgsS0FBS0ksWUFBWSxHQUFHO1FBQ2pGSixPQUFPO1lBQUVLLFlBQVk7WUFBTUMsS0FBSztnQkFBYSxPQUFPVixDQUFDLENBQUNDLEVBQUU7WUFBRTtRQUFFO0lBQzlEO0lBQ0FKLE9BQU9jLGNBQWMsQ0FBQ1osR0FBR0csSUFBSUU7QUFDakMsSUFBTSxTQUFTTCxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJVyxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVNaLENBQUMsRUFBRWEsUUFBTztJQUNqRSxJQUFLLElBQUlDLEtBQUtkLEVBQUcsSUFBSWMsTUFBTSxhQUFhLENBQUNqQixPQUFPa0IsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0osVUFBU0MsSUFBSWxCLGdCQUFnQmlCLFVBQVNiLEdBQUdjO0FBQzNIO0FBQ0FqQiw4Q0FBNkM7SUFBRXFCLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0ROLGFBQWFPLG1CQUFPQSxDQUFDLG1HQUFzQixHQUFHTiIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L2FjdGlvbi1wcm92aWRlcnMvd2V0aC9pbmRleC5qcz9lZmFmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vd2V0aEFjdGlvblByb3ZpZGVyXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6WyJfX2NyZWF0ZUJpbmRpbmciLCJPYmplY3QiLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlc2MiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfX2VzTW9kdWxlIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZGVmaW5lUHJvcGVydHkiLCJfX2V4cG9ydFN0YXIiLCJleHBvcnRzIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInZhbHVlIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/weth/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/weth/schemas.js":
/*!************************************************************!*\
  !*** ../../agentkit/dist/action-providers/weth/schemas.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.WrapEthSchema = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\nexports.WrapEthSchema = zod_1.z.object({\n    amountToWrap: zod_1.z.string().describe(\"Amount of ETH to wrap in wei\")\n}).strip().describe(\"Instructions for wrapping ETH to WETH\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hY3Rpb24tcHJvdmlkZXJzL3dldGgvc2NoZW1hcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQscUJBQXFCLEdBQUcsS0FBSztBQUM3QixNQUFNRyxRQUFRQyxtQkFBT0EsQ0FBQyx5REFBSztBQUMzQkoscUJBQXFCLEdBQUdHLE1BQU1FLENBQUMsQ0FDMUJDLE1BQU0sQ0FBQztJQUNSQyxjQUFjSixNQUFNRSxDQUFDLENBQUNHLE1BQU0sR0FBR0MsUUFBUSxDQUFDO0FBQzVDLEdBQ0tDLEtBQUssR0FDTEQsUUFBUSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNvaW5iYXNlL2NkcC1sYW5nY2hhaW4tY2hhdGJvdC1leGFtcGxlLy4uLy4uL2FnZW50a2l0L2Rpc3QvYWN0aW9uLXByb3ZpZGVycy93ZXRoL3NjaGVtYXMuanM/ZDAxMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuV3JhcEV0aFNjaGVtYSA9IHZvaWQgMDtcbmNvbnN0IHpvZF8xID0gcmVxdWlyZShcInpvZFwiKTtcbmV4cG9ydHMuV3JhcEV0aFNjaGVtYSA9IHpvZF8xLnpcbiAgICAub2JqZWN0KHtcbiAgICBhbW91bnRUb1dyYXA6IHpvZF8xLnouc3RyaW5nKCkuZGVzY3JpYmUoXCJBbW91bnQgb2YgRVRIIHRvIHdyYXAgaW4gd2VpXCIpLFxufSlcbiAgICAuc3RyaXAoKVxuICAgIC5kZXNjcmliZShcIkluc3RydWN0aW9ucyBmb3Igd3JhcHBpbmcgRVRIIHRvIFdFVEhcIik7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJXcmFwRXRoU2NoZW1hIiwiem9kXzEiLCJyZXF1aXJlIiwieiIsIm9iamVjdCIsImFtb3VudFRvV3JhcCIsInN0cmluZyIsImRlc2NyaWJlIiwic3RyaXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/weth/schemas.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/action-providers/weth/wethActionProvider.js":
/*!***********************************************************************!*\
  !*** ../../agentkit/dist/action-providers/weth/wethActionProvider.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __decorate = (void 0) && (void 0).__decorate || function(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (void 0) && (void 0).__metadata || function(k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.wethActionProvider = exports.WethActionProvider = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/../../../node_modules/zod/lib/index.js\");\nconst actionProvider_1 = __webpack_require__(/*! ../actionProvider */ \"(rsc)/../../agentkit/dist/action-providers/actionProvider.js\");\nconst actionDecorator_1 = __webpack_require__(/*! ../actionDecorator */ \"(rsc)/../../agentkit/dist/action-providers/actionDecorator.js\");\nconst schemas_1 = __webpack_require__(/*! ./schemas */ \"(rsc)/../../agentkit/dist/action-providers/weth/schemas.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(rsc)/../../agentkit/dist/action-providers/weth/constants.js\");\nconst viem_1 = __webpack_require__(/*! viem */ \"(rsc)/../../../node_modules/viem/_cjs/index.js\");\nconst wallet_providers_1 = __webpack_require__(/*! ../../wallet-providers */ \"(rsc)/../../agentkit/dist/wallet-providers/index.js\");\n/**\n * WethActionProvider is an action provider for WETH.\n */ class WethActionProvider extends actionProvider_1.ActionProvider {\n    /**\n     * Constructor for the WethActionProvider.\n     */ constructor(){\n        super(\"weth\", []);\n        /**\n         * Checks if the Weth action provider supports the given network.\n         *\n         * @param network - The network to check.\n         * @returns True if the Weth action provider supports the network, false otherwise.\n         */ this.supportsNetwork = (network)=>network.networkId === \"base-mainnet\" || network.networkId === \"base-sepolia\";\n    }\n    /**\n     * Wraps ETH to WETH.\n     *\n     * @param walletProvider - The wallet provider to use for the action.\n     * @param args - The input arguments for the action.\n     * @returns A message containing the transaction hash.\n     */ async wrapEth(walletProvider, args) {\n        try {\n            const hash = await walletProvider.sendTransaction({\n                to: constants_1.WETH_ADDRESS,\n                data: (0, viem_1.encodeFunctionData)({\n                    abi: constants_1.WETH_ABI,\n                    functionName: \"deposit\"\n                }),\n                value: BigInt(args.amountToWrap)\n            });\n            await walletProvider.waitForTransactionReceipt(hash);\n            return `Wrapped ETH with transaction hash: ${hash}`;\n        } catch (error) {\n            return `Error wrapping ETH: ${error}`;\n        }\n    }\n}\nexports.WethActionProvider = WethActionProvider;\n__decorate([\n    (0, actionDecorator_1.CreateAction)({\n        name: \"wrap_eth\",\n        description: `\n    This tool can only be used to wrap ETH to WETH.\nDo not use this tool for any other purpose, or trading other assets.\n\nInputs:\n- Amount of ETH to wrap.\n\nImportant notes:\n- The amount is a string and cannot have any decimal points, since the unit of measurement is wei.\n- Make sure to use the exact amount provided, and if there's any doubt, check by getting more information before continuing with the action.\n- 1 wei = 0.000000000000000001 WETH\n- Minimum purchase amount is 100000000000000 wei (0.0000001 WETH)\n- Only supported on the following networks:\n  - Base Sepolia (ie, 'base-sepolia')\n  - Base Mainnet (ie, 'base', 'base-mainnet')\n`,\n        schema: schemas_1.WrapEthSchema\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [\n        wallet_providers_1.EvmWalletProvider,\n        void 0\n    ]),\n    __metadata(\"design:returntype\", Promise)\n], WethActionProvider.prototype, \"wrapEth\", null);\nconst wethActionProvider = ()=>new WethActionProvider();\nexports.wethActionProvider = wethActionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/action-providers/weth/wethActionProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/agentkit.js":
/*!***************************************!*\
  !*** ../../agentkit/dist/agentkit.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AgentKit = void 0;\nconst wallet_providers_1 = __webpack_require__(/*! ./wallet-providers */ \"(rsc)/../../agentkit/dist/wallet-providers/index.js\");\nconst action_providers_1 = __webpack_require__(/*! ./action-providers */ \"(rsc)/../../agentkit/dist/action-providers/index.js\");\n/**\n * AgentKit\n */ class AgentKit {\n    /**\n     * Initializes a new AgentKit instance\n     *\n     * @param config - Configuration options for the AgentKit\n     * @param config.walletProvider - The wallet provider to use\n     * @param config.actionProviders - The action providers to use\n     * @param config.actions - The actions to use\n     */ constructor(config){\n        this.walletProvider = config.walletProvider;\n        this.actionProviders = config.actionProviders || [\n            (0, action_providers_1.walletActionProvider)()\n        ];\n    }\n    /**\n     * Initializes a new AgentKit instance\n     *\n     * @param config - Configuration options for the AgentKit\n     * @param config.walletProvider - The wallet provider to use\n     * @param config.actionProviders - The action providers to use\n     * @param config.actions - The actions to use\n     *\n     * @returns A new AgentKit instance\n     */ static async from(config = {\n        actionProviders: [\n            (0, action_providers_1.walletActionProvider)()\n        ]\n    }) {\n        let walletProvider = config.walletProvider;\n        if (!config.walletProvider) {\n            if (!config.cdpApiKeyName || !config.cdpApiKeyPrivateKey) {\n                throw new Error(\"cdpApiKeyName and cdpApiKeyPrivateKey are required if not providing a walletProvider\");\n            }\n            walletProvider = await wallet_providers_1.CdpWalletProvider.configureWithWallet({\n                apiKeyName: config.cdpApiKeyName,\n                apiKeyPrivateKey: config.cdpApiKeyPrivateKey\n            });\n        }\n        return new AgentKit({\n            ...config,\n            walletProvider: walletProvider\n        });\n    }\n    /**\n     * Returns the actions available to the AgentKit.\n     *\n     * @returns An array of actions\n     */ getActions() {\n        const actions = [];\n        for (const actionProvider of this.actionProviders){\n            if (actionProvider.supportsNetwork(this.walletProvider.getNetwork())) {\n                actions.push(...actionProvider.getActions(this.walletProvider));\n            }\n        }\n        return actions;\n    }\n}\nexports.AgentKit = AgentKit;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hZ2VudGtpdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZ0JBQWdCLEdBQUcsS0FBSztBQUN4QixNQUFNRyxxQkFBcUJDLG1CQUFPQSxDQUFDLCtFQUFvQjtBQUN2RCxNQUFNQyxxQkFBcUJELG1CQUFPQSxDQUFDLCtFQUFvQjtBQUN2RDs7Q0FFQyxHQUNELE1BQU1GO0lBQ0Y7Ozs7Ozs7S0FPQyxHQUNESSxZQUFZQyxNQUFNLENBQUU7UUFDaEIsSUFBSSxDQUFDQyxjQUFjLEdBQUdELE9BQU9DLGNBQWM7UUFDM0MsSUFBSSxDQUFDQyxlQUFlLEdBQUdGLE9BQU9FLGVBQWUsSUFBSTtZQUFFLElBQUdKLG1CQUFtQkssb0JBQW9CO1NBQUk7SUFDckc7SUFDQTs7Ozs7Ozs7O0tBU0MsR0FDRCxhQUFhQyxLQUFLSixTQUFTO1FBQUVFLGlCQUFpQjtZQUFFLElBQUdKLG1CQUFtQkssb0JBQW9CO1NBQUk7SUFBQyxDQUFDLEVBQUU7UUFDOUYsSUFBSUYsaUJBQWlCRCxPQUFPQyxjQUFjO1FBQzFDLElBQUksQ0FBQ0QsT0FBT0MsY0FBYyxFQUFFO1lBQ3hCLElBQUksQ0FBQ0QsT0FBT0ssYUFBYSxJQUFJLENBQUNMLE9BQU9NLG1CQUFtQixFQUFFO2dCQUN0RCxNQUFNLElBQUlDLE1BQU07WUFDcEI7WUFDQU4saUJBQWlCLE1BQU1MLG1CQUFtQlksaUJBQWlCLENBQUNDLG1CQUFtQixDQUFDO2dCQUM1RUMsWUFBWVYsT0FBT0ssYUFBYTtnQkFDaENNLGtCQUFrQlgsT0FBT00sbUJBQW1CO1lBQ2hEO1FBQ0o7UUFDQSxPQUFPLElBQUlYLFNBQVM7WUFBRSxHQUFHSyxNQUFNO1lBQUVDLGdCQUFnQkE7UUFBZTtJQUNwRTtJQUNBOzs7O0tBSUMsR0FDRFcsYUFBYTtRQUNULE1BQU1DLFVBQVUsRUFBRTtRQUNsQixLQUFLLE1BQU1DLGtCQUFrQixJQUFJLENBQUNaLGVBQWUsQ0FBRTtZQUMvQyxJQUFJWSxlQUFlQyxlQUFlLENBQUMsSUFBSSxDQUFDZCxjQUFjLENBQUNlLFVBQVUsS0FBSztnQkFDbEVILFFBQVFJLElBQUksSUFBSUgsZUFBZUYsVUFBVSxDQUFDLElBQUksQ0FBQ1gsY0FBYztZQUNqRTtRQUNKO1FBQ0EsT0FBT1k7SUFDWDtBQUNKO0FBQ0FwQixnQkFBZ0IsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY29pbmJhc2UvY2RwLWxhbmdjaGFpbi1jaGF0Ym90LWV4YW1wbGUvLi4vLi4vYWdlbnRraXQvZGlzdC9hZ2VudGtpdC5qcz84NjUwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BZ2VudEtpdCA9IHZvaWQgMDtcbmNvbnN0IHdhbGxldF9wcm92aWRlcnNfMSA9IHJlcXVpcmUoXCIuL3dhbGxldC1wcm92aWRlcnNcIik7XG5jb25zdCBhY3Rpb25fcHJvdmlkZXJzXzEgPSByZXF1aXJlKFwiLi9hY3Rpb24tcHJvdmlkZXJzXCIpO1xuLyoqXG4gKiBBZ2VudEtpdFxuICovXG5jbGFzcyBBZ2VudEtpdCB7XG4gICAgLyoqXG4gICAgICogSW5pdGlhbGl6ZXMgYSBuZXcgQWdlbnRLaXQgaW5zdGFuY2VcbiAgICAgKlxuICAgICAqIEBwYXJhbSBjb25maWcgLSBDb25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIHRoZSBBZ2VudEtpdFxuICAgICAqIEBwYXJhbSBjb25maWcud2FsbGV0UHJvdmlkZXIgLSBUaGUgd2FsbGV0IHByb3ZpZGVyIHRvIHVzZVxuICAgICAqIEBwYXJhbSBjb25maWcuYWN0aW9uUHJvdmlkZXJzIC0gVGhlIGFjdGlvbiBwcm92aWRlcnMgdG8gdXNlXG4gICAgICogQHBhcmFtIGNvbmZpZy5hY3Rpb25zIC0gVGhlIGFjdGlvbnMgdG8gdXNlXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgICAgIHRoaXMud2FsbGV0UHJvdmlkZXIgPSBjb25maWcud2FsbGV0UHJvdmlkZXI7XG4gICAgICAgIHRoaXMuYWN0aW9uUHJvdmlkZXJzID0gY29uZmlnLmFjdGlvblByb3ZpZGVycyB8fCBbKDAsIGFjdGlvbl9wcm92aWRlcnNfMS53YWxsZXRBY3Rpb25Qcm92aWRlcikoKV07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemVzIGEgbmV3IEFnZW50S2l0IGluc3RhbmNlXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY29uZmlnIC0gQ29uZmlndXJhdGlvbiBvcHRpb25zIGZvciB0aGUgQWdlbnRLaXRcbiAgICAgKiBAcGFyYW0gY29uZmlnLndhbGxldFByb3ZpZGVyIC0gVGhlIHdhbGxldCBwcm92aWRlciB0byB1c2VcbiAgICAgKiBAcGFyYW0gY29uZmlnLmFjdGlvblByb3ZpZGVycyAtIFRoZSBhY3Rpb24gcHJvdmlkZXJzIHRvIHVzZVxuICAgICAqIEBwYXJhbSBjb25maWcuYWN0aW9ucyAtIFRoZSBhY3Rpb25zIHRvIHVzZVxuICAgICAqXG4gICAgICogQHJldHVybnMgQSBuZXcgQWdlbnRLaXQgaW5zdGFuY2VcbiAgICAgKi9cbiAgICBzdGF0aWMgYXN5bmMgZnJvbShjb25maWcgPSB7IGFjdGlvblByb3ZpZGVyczogWygwLCBhY3Rpb25fcHJvdmlkZXJzXzEud2FsbGV0QWN0aW9uUHJvdmlkZXIpKCldIH0pIHtcbiAgICAgICAgbGV0IHdhbGxldFByb3ZpZGVyID0gY29uZmlnLndhbGxldFByb3ZpZGVyO1xuICAgICAgICBpZiAoIWNvbmZpZy53YWxsZXRQcm92aWRlcikge1xuICAgICAgICAgICAgaWYgKCFjb25maWcuY2RwQXBpS2V5TmFtZSB8fCAhY29uZmlnLmNkcEFwaUtleVByaXZhdGVLZXkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJjZHBBcGlLZXlOYW1lIGFuZCBjZHBBcGlLZXlQcml2YXRlS2V5IGFyZSByZXF1aXJlZCBpZiBub3QgcHJvdmlkaW5nIGEgd2FsbGV0UHJvdmlkZXJcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB3YWxsZXRQcm92aWRlciA9IGF3YWl0IHdhbGxldF9wcm92aWRlcnNfMS5DZHBXYWxsZXRQcm92aWRlci5jb25maWd1cmVXaXRoV2FsbGV0KHtcbiAgICAgICAgICAgICAgICBhcGlLZXlOYW1lOiBjb25maWcuY2RwQXBpS2V5TmFtZSxcbiAgICAgICAgICAgICAgICBhcGlLZXlQcml2YXRlS2V5OiBjb25maWcuY2RwQXBpS2V5UHJpdmF0ZUtleSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgQWdlbnRLaXQoeyAuLi5jb25maWcsIHdhbGxldFByb3ZpZGVyOiB3YWxsZXRQcm92aWRlciB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgYWN0aW9ucyBhdmFpbGFibGUgdG8gdGhlIEFnZW50S2l0LlxuICAgICAqXG4gICAgICogQHJldHVybnMgQW4gYXJyYXkgb2YgYWN0aW9uc1xuICAgICAqL1xuICAgIGdldEFjdGlvbnMoKSB7XG4gICAgICAgIGNvbnN0IGFjdGlvbnMgPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCBhY3Rpb25Qcm92aWRlciBvZiB0aGlzLmFjdGlvblByb3ZpZGVycykge1xuICAgICAgICAgICAgaWYgKGFjdGlvblByb3ZpZGVyLnN1cHBvcnRzTmV0d29yayh0aGlzLndhbGxldFByb3ZpZGVyLmdldE5ldHdvcmsoKSkpIHtcbiAgICAgICAgICAgICAgICBhY3Rpb25zLnB1c2goLi4uYWN0aW9uUHJvdmlkZXIuZ2V0QWN0aW9ucyh0aGlzLndhbGxldFByb3ZpZGVyKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFjdGlvbnM7XG4gICAgfVxufVxuZXhwb3J0cy5BZ2VudEtpdCA9IEFnZW50S2l0O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQWdlbnRLaXQiLCJ3YWxsZXRfcHJvdmlkZXJzXzEiLCJyZXF1aXJlIiwiYWN0aW9uX3Byb3ZpZGVyc18xIiwiY29uc3RydWN0b3IiLCJjb25maWciLCJ3YWxsZXRQcm92aWRlciIsImFjdGlvblByb3ZpZGVycyIsIndhbGxldEFjdGlvblByb3ZpZGVyIiwiZnJvbSIsImNkcEFwaUtleU5hbWUiLCJjZHBBcGlLZXlQcml2YXRlS2V5IiwiRXJyb3IiLCJDZHBXYWxsZXRQcm92aWRlciIsImNvbmZpZ3VyZVdpdGhXYWxsZXQiLCJhcGlLZXlOYW1lIiwiYXBpS2V5UHJpdmF0ZUtleSIsImdldEFjdGlvbnMiLCJhY3Rpb25zIiwiYWN0aW9uUHJvdmlkZXIiLCJzdXBwb3J0c05ldHdvcmsiLCJnZXROZXR3b3JrIiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/agentkit.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/analytics/index.js":
/*!**********************************************!*\
  !*** ../../agentkit/dist/analytics/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./sendAnalyticsEvent */ \"(rsc)/../../agentkit/dist/analytics/sendAnalyticsEvent.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hbmFseXRpY3MvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQU1DLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQzFGLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCLElBQUlHLE9BQU9QLE9BQU9RLHdCQUF3QixDQUFDTCxHQUFHQztJQUM5QyxJQUFJLENBQUNHLFFBQVMsVUFBU0EsT0FBTyxDQUFDSixFQUFFTSxVQUFVLEdBQUdGLEtBQUtHLFFBQVEsSUFBSUgsS0FBS0ksWUFBWSxHQUFHO1FBQ2pGSixPQUFPO1lBQUVLLFlBQVk7WUFBTUMsS0FBSztnQkFBYSxPQUFPVixDQUFDLENBQUNDLEVBQUU7WUFBRTtRQUFFO0lBQzlEO0lBQ0FKLE9BQU9jLGNBQWMsQ0FBQ1osR0FBR0csSUFBSUU7QUFDakMsSUFBTSxTQUFTTCxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJVyxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVNaLENBQUMsRUFBRWEsUUFBTztJQUNqRSxJQUFLLElBQUlDLEtBQUtkLEVBQUcsSUFBSWMsTUFBTSxhQUFhLENBQUNqQixPQUFPa0IsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0osVUFBU0MsSUFBSWxCLGdCQUFnQmlCLFVBQVNiLEdBQUdjO0FBQzNIO0FBQ0FqQiw4Q0FBNkM7SUFBRXFCLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0ROLGFBQWFPLG1CQUFPQSxDQUFDLHVGQUFzQixHQUFHTiIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L2FuYWx5dGljcy9pbmRleC5qcz84NWIwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2VuZEFuYWx5dGljc0V2ZW50XCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6WyJfX2NyZWF0ZUJpbmRpbmciLCJPYmplY3QiLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlc2MiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfX2VzTW9kdWxlIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZGVmaW5lUHJvcGVydHkiLCJfX2V4cG9ydFN0YXIiLCJleHBvcnRzIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInZhbHVlIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/analytics/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/analytics/sendAnalyticsEvent.js":
/*!***********************************************************!*\
  !*** ../../agentkit/dist/analytics/sendAnalyticsEvent.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.sendAnalyticsEvent = sendAnalyticsEvent;\nconst md5_1 = __importDefault(__webpack_require__(/*! md5 */ \"(rsc)/../../../node_modules/md5/md5.js\"));\n/**\n * Sends an analytics event to the default endpoint\n *\n * @param event - The event data containing required action, component and name fields\n * @returns Promise that resolves when the event is sent\n */ async function sendAnalyticsEvent(event) {\n    const timestamp = event.timestamp || Date.now();\n    // Prepare the event with required fields\n    const enhancedEvent = {\n        event_type: event.name,\n        platform: \"server\",\n        event_properties: {\n            component_type: event.component,\n            platform: \"server\",\n            project_name: \"agentkit\",\n            time_start: timestamp,\n            ...event\n        }\n    };\n    const events = [\n        enhancedEvent\n    ];\n    const stringifiedEventData = JSON.stringify(events);\n    const uploadTime = timestamp.toString();\n    // Calculate checksum inline\n    const checksum = (0, md5_1.default)(stringifiedEventData + uploadTime);\n    const analyticsServiceData = {\n        e: stringifiedEventData,\n        checksum\n    };\n    const apiEndpoint = \"https://cca-lite.coinbase.com\";\n    const eventPath = \"/amp\";\n    const eventEndPoint = `${apiEndpoint}${eventPath}`;\n    const response = await fetch(eventEndPoint, {\n        method: \"POST\",\n        mode: \"no-cors\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(analyticsServiceData)\n    });\n    if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9hbmFseXRpY3Mvc2VuZEFuYWx5dGljc0V2ZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFLLFNBQVVDLEdBQUc7SUFDakUsT0FBTyxPQUFRQSxJQUFJQyxVQUFVLEdBQUlELE1BQU07UUFBRSxXQUFXQTtJQUFJO0FBQzVEO0FBQ0FFLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwwQkFBMEIsR0FBR0U7QUFDN0IsTUFBTUMsUUFBUVIsZ0JBQWdCUyxtQkFBT0EsQ0FBQyxtREFBSztBQUMzQzs7Ozs7Q0FLQyxHQUNELGVBQWVGLG1CQUFtQkcsS0FBSztJQUNuQyxNQUFNQyxZQUFZRCxNQUFNQyxTQUFTLElBQUlDLEtBQUtDLEdBQUc7SUFDN0MseUNBQXlDO0lBQ3pDLE1BQU1DLGdCQUFnQjtRQUNsQkMsWUFBWUwsTUFBTU0sSUFBSTtRQUN0QkMsVUFBVTtRQUNWQyxrQkFBa0I7WUFDZEMsZ0JBQWdCVCxNQUFNVSxTQUFTO1lBQy9CSCxVQUFVO1lBQ1ZJLGNBQWM7WUFDZEMsWUFBWVg7WUFDWixHQUFHRCxLQUFLO1FBQ1o7SUFDSjtJQUNBLE1BQU1hLFNBQVM7UUFBQ1Q7S0FBYztJQUM5QixNQUFNVSx1QkFBdUJDLEtBQUtDLFNBQVMsQ0FBQ0g7SUFDNUMsTUFBTUksYUFBYWhCLFVBQVVpQixRQUFRO0lBQ3JDLDRCQUE0QjtJQUM1QixNQUFNQyxXQUFXLENBQUMsR0FBR3JCLE1BQU1zQixPQUFPLEVBQUVOLHVCQUF1Qkc7SUFDM0QsTUFBTUksdUJBQXVCO1FBQ3pCQyxHQUFHUjtRQUNISztJQUNKO0lBQ0EsTUFBTUksY0FBYztJQUNwQixNQUFNQyxZQUFZO0lBQ2xCLE1BQU1DLGdCQUFnQixDQUFDLEVBQUVGLFlBQVksRUFBRUMsVUFBVSxDQUFDO0lBQ2xELE1BQU1FLFdBQVcsTUFBTUMsTUFBTUYsZUFBZTtRQUN4Q0csUUFBUTtRQUNSQyxNQUFNO1FBQ05DLFNBQVM7WUFDTCxnQkFBZ0I7UUFDcEI7UUFDQUMsTUFBTWhCLEtBQUtDLFNBQVMsQ0FBQ0s7SUFDekI7SUFDQSxJQUFJLENBQUNLLFNBQVNNLEVBQUUsRUFBRTtRQUNkLE1BQU0sSUFBSUMsTUFBTSxDQUFDLG9CQUFvQixFQUFFUCxTQUFTUSxNQUFNLENBQUMsQ0FBQztJQUM1RDtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNvaW5iYXNlL2NkcC1sYW5nY2hhaW4tY2hhdGJvdC1leGFtcGxlLy4uLy4uL2FnZW50a2l0L2Rpc3QvYW5hbHl0aWNzL3NlbmRBbmFseXRpY3NFdmVudC5qcz8wZDE1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zZW5kQW5hbHl0aWNzRXZlbnQgPSBzZW5kQW5hbHl0aWNzRXZlbnQ7XG5jb25zdCBtZDVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwibWQ1XCIpKTtcbi8qKlxuICogU2VuZHMgYW4gYW5hbHl0aWNzIGV2ZW50IHRvIHRoZSBkZWZhdWx0IGVuZHBvaW50XG4gKlxuICogQHBhcmFtIGV2ZW50IC0gVGhlIGV2ZW50IGRhdGEgY29udGFpbmluZyByZXF1aXJlZCBhY3Rpb24sIGNvbXBvbmVudCBhbmQgbmFtZSBmaWVsZHNcbiAqIEByZXR1cm5zIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBldmVudCBpcyBzZW50XG4gKi9cbmFzeW5jIGZ1bmN0aW9uIHNlbmRBbmFseXRpY3NFdmVudChldmVudCkge1xuICAgIGNvbnN0IHRpbWVzdGFtcCA9IGV2ZW50LnRpbWVzdGFtcCB8fCBEYXRlLm5vdygpO1xuICAgIC8vIFByZXBhcmUgdGhlIGV2ZW50IHdpdGggcmVxdWlyZWQgZmllbGRzXG4gICAgY29uc3QgZW5oYW5jZWRFdmVudCA9IHtcbiAgICAgICAgZXZlbnRfdHlwZTogZXZlbnQubmFtZSxcbiAgICAgICAgcGxhdGZvcm06IFwic2VydmVyXCIsXG4gICAgICAgIGV2ZW50X3Byb3BlcnRpZXM6IHtcbiAgICAgICAgICAgIGNvbXBvbmVudF90eXBlOiBldmVudC5jb21wb25lbnQsXG4gICAgICAgICAgICBwbGF0Zm9ybTogXCJzZXJ2ZXJcIixcbiAgICAgICAgICAgIHByb2plY3RfbmFtZTogXCJhZ2VudGtpdFwiLFxuICAgICAgICAgICAgdGltZV9zdGFydDogdGltZXN0YW1wLFxuICAgICAgICAgICAgLi4uZXZlbnQsXG4gICAgICAgIH0sXG4gICAgfTtcbiAgICBjb25zdCBldmVudHMgPSBbZW5oYW5jZWRFdmVudF07XG4gICAgY29uc3Qgc3RyaW5naWZpZWRFdmVudERhdGEgPSBKU09OLnN0cmluZ2lmeShldmVudHMpO1xuICAgIGNvbnN0IHVwbG9hZFRpbWUgPSB0aW1lc3RhbXAudG9TdHJpbmcoKTtcbiAgICAvLyBDYWxjdWxhdGUgY2hlY2tzdW0gaW5saW5lXG4gICAgY29uc3QgY2hlY2tzdW0gPSAoMCwgbWQ1XzEuZGVmYXVsdCkoc3RyaW5naWZpZWRFdmVudERhdGEgKyB1cGxvYWRUaW1lKTtcbiAgICBjb25zdCBhbmFseXRpY3NTZXJ2aWNlRGF0YSA9IHtcbiAgICAgICAgZTogc3RyaW5naWZpZWRFdmVudERhdGEsXG4gICAgICAgIGNoZWNrc3VtLFxuICAgIH07XG4gICAgY29uc3QgYXBpRW5kcG9pbnQgPSBcImh0dHBzOi8vY2NhLWxpdGUuY29pbmJhc2UuY29tXCI7XG4gICAgY29uc3QgZXZlbnRQYXRoID0gXCIvYW1wXCI7XG4gICAgY29uc3QgZXZlbnRFbmRQb2ludCA9IGAke2FwaUVuZHBvaW50fSR7ZXZlbnRQYXRofWA7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChldmVudEVuZFBvaW50LCB7XG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIG1vZGU6IFwibm8tY29yc1wiLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoYW5hbHl0aWNzU2VydmljZURhdGEpLFxuICAgIH0pO1xuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBIVFRQIGVycm9yISBzdGF0dXM6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJfX2VzTW9kdWxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJzZW5kQW5hbHl0aWNzRXZlbnQiLCJtZDVfMSIsInJlcXVpcmUiLCJldmVudCIsInRpbWVzdGFtcCIsIkRhdGUiLCJub3ciLCJlbmhhbmNlZEV2ZW50IiwiZXZlbnRfdHlwZSIsIm5hbWUiLCJwbGF0Zm9ybSIsImV2ZW50X3Byb3BlcnRpZXMiLCJjb21wb25lbnRfdHlwZSIsImNvbXBvbmVudCIsInByb2plY3RfbmFtZSIsInRpbWVfc3RhcnQiLCJldmVudHMiLCJzdHJpbmdpZmllZEV2ZW50RGF0YSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ1cGxvYWRUaW1lIiwidG9TdHJpbmciLCJjaGVja3N1bSIsImRlZmF1bHQiLCJhbmFseXRpY3NTZXJ2aWNlRGF0YSIsImUiLCJhcGlFbmRwb2ludCIsImV2ZW50UGF0aCIsImV2ZW50RW5kUG9pbnQiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwibW9kZSIsImhlYWRlcnMiLCJib2R5Iiwib2siLCJFcnJvciIsInN0YXR1cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/analytics/sendAnalyticsEvent.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/index.js":
/*!************************************!*\
  !*** ../../agentkit/dist/index.js ***!
  \************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./agentkit */ \"(rsc)/../../agentkit/dist/agentkit.js\"), exports);\n__exportStar(__webpack_require__(/*! ./wallet-providers */ \"(rsc)/../../agentkit/dist/wallet-providers/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./action-providers */ \"(rsc)/../../agentkit/dist/action-providers/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./network */ \"(rsc)/../../agentkit/dist/network/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0IsSUFBSUcsT0FBT1AsT0FBT1Esd0JBQXdCLENBQUNMLEdBQUdDO0lBQzlDLElBQUksQ0FBQ0csUUFBUyxVQUFTQSxPQUFPLENBQUNKLEVBQUVNLFVBQVUsR0FBR0YsS0FBS0csUUFBUSxJQUFJSCxLQUFLSSxZQUFZLEdBQUc7UUFDakZKLE9BQU87WUFBRUssWUFBWTtZQUFNQyxLQUFLO2dCQUFhLE9BQU9WLENBQUMsQ0FBQ0MsRUFBRTtZQUFFO1FBQUU7SUFDOUQ7SUFDQUosT0FBT2MsY0FBYyxDQUFDWixHQUFHRyxJQUFJRTtBQUNqQyxJQUFNLFNBQVNMLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlXLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBU1osQ0FBQyxFQUFFYSxRQUFPO0lBQ2pFLElBQUssSUFBSUMsS0FBS2QsRUFBRyxJQUFJYyxNQUFNLGFBQWEsQ0FBQ2pCLE9BQU9rQixTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixVQUFTQyxJQUFJbEIsZ0JBQWdCaUIsVUFBU2IsR0FBR2M7QUFDM0g7QUFDQWpCLDhDQUE2QztJQUFFcUIsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RE4sYUFBYU8sbUJBQU9BLENBQUMseURBQVksR0FBR047QUFDcENELGFBQWFPLG1CQUFPQSxDQUFDLCtFQUFvQixHQUFHTjtBQUM1Q0QsYUFBYU8sbUJBQU9BLENBQUMsK0VBQW9CLEdBQUdOO0FBQzVDRCxhQUFhTyxtQkFBT0EsQ0FBQyw2REFBVyxHQUFHTiIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L2luZGV4LmpzPzkzM2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hZ2VudGtpdFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vd2FsbGV0LXByb3ZpZGVyc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYWN0aW9uLXByb3ZpZGVyc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbmV0d29ya1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19lc01vZHVsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsImRlZmluZVByb3BlcnR5IiwiX19leHBvcnRTdGFyIiwiZXhwb3J0cyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ2YWx1ZSIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/network/index.js":
/*!********************************************!*\
  !*** ../../agentkit/dist/network/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./types */ \"(rsc)/../../agentkit/dist/network/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./network */ \"(rsc)/../../agentkit/dist/network/network.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9uZXR3b3JrL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQixJQUFJRyxPQUFPUCxPQUFPUSx3QkFBd0IsQ0FBQ0wsR0FBR0M7SUFDOUMsSUFBSSxDQUFDRyxRQUFTLFVBQVNBLE9BQU8sQ0FBQ0osRUFBRU0sVUFBVSxHQUFHRixLQUFLRyxRQUFRLElBQUlILEtBQUtJLFlBQVksR0FBRztRQUNqRkosT0FBTztZQUFFSyxZQUFZO1lBQU1DLEtBQUs7Z0JBQWEsT0FBT1YsQ0FBQyxDQUFDQyxFQUFFO1lBQUU7UUFBRTtJQUM5RDtJQUNBSixPQUFPYyxjQUFjLENBQUNaLEdBQUdHLElBQUlFO0FBQ2pDLElBQU0sU0FBU0wsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSVcsZUFBZSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFlBQVksSUFBSyxTQUFTWixDQUFDLEVBQUVhLFFBQU87SUFDakUsSUFBSyxJQUFJQyxLQUFLZCxFQUFHLElBQUljLE1BQU0sYUFBYSxDQUFDakIsT0FBT2tCLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNKLFVBQVNDLElBQUlsQixnQkFBZ0JpQixVQUFTYixHQUFHYztBQUMzSDtBQUNBakIsOENBQTZDO0lBQUVxQixPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdETixhQUFhTyxtQkFBT0EsQ0FBQywyREFBUyxHQUFHTjtBQUNqQ0QsYUFBYU8sbUJBQU9BLENBQUMsK0RBQVcsR0FBR04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY29pbmJhc2UvY2RwLWxhbmdjaGFpbi1jaGF0Ym90LWV4YW1wbGUvLi4vLi4vYWdlbnRraXQvZGlzdC9uZXR3b3JrL2luZGV4LmpzPzM1YmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbmV0d29ya1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19lc01vZHVsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsImRlZmluZVByb3BlcnR5IiwiX19leHBvcnRTdGFyIiwiZXhwb3J0cyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ2YWx1ZSIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/network/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/network/network.js":
/*!**********************************************!*\
  !*** ../../agentkit/dist/network/network.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.NETWORK_ID_TO_VIEM_CHAIN = exports.NETWORK_ID_TO_CHAIN_ID = exports.CHAIN_ID_TO_NETWORK_ID = void 0;\nconst chains_1 = __webpack_require__(/*! viem/chains */ \"(rsc)/../../../node_modules/viem/_cjs/chains/index.js\");\n/**\n * Maps EVM chain IDs to Coinbase network IDs\n */ exports.CHAIN_ID_TO_NETWORK_ID = {\n    1: \"ethereum-mainnet\",\n    11155111: \"ethereum-sepolia\",\n    137: \"polygon-mainnet\",\n    80001: \"polygon-mumbai\",\n    8453: \"base-mainnet\",\n    84532: \"base-sepolia\",\n    42161: \"arbitrum-mainnet\",\n    421614: \"arbitrum-sepolia\",\n    10: \"optimism-mainnet\",\n    11155420: \"optimism-sepolia\"\n};\n/**\n * Maps Coinbase network IDs to EVM chain IDs\n */ exports.NETWORK_ID_TO_CHAIN_ID = Object.entries(exports.CHAIN_ID_TO_NETWORK_ID).reduce((acc, [chainId, networkId])=>{\n    acc[networkId] = String(chainId);\n    return acc;\n}, {});\n/**\n * Maps Coinbase network IDs to Viem chain objects\n */ exports.NETWORK_ID_TO_VIEM_CHAIN = {\n    \"ethereum-mainnet\": chains_1.mainnet,\n    \"ethereum-sepolia\": chains_1.sepolia,\n    \"polygon-mainnet\": chains_1.polygon,\n    \"polygon-mumbai\": chains_1.polygonMumbai,\n    \"base-mainnet\": chains_1.base,\n    \"base-sepolia\": chains_1.baseSepolia,\n    \"arbitrum-mainnet\": chains_1.arbitrum,\n    \"arbitrum-sepolia\": chains_1.arbitrumSepolia,\n    \"optimism-mainnet\": chains_1.optimism,\n    \"optimism-sepolia\": chains_1.optimismSepolia\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9uZXR3b3JrL25ldHdvcmsuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGdDQUFnQyxHQUFHQSw4QkFBOEIsR0FBR0EsOEJBQThCLEdBQUcsS0FBSztBQUMxRyxNQUFNSyxXQUFXQyxtQkFBT0EsQ0FBQywwRUFBYTtBQUN0Qzs7Q0FFQyxHQUNETiw4QkFBOEIsR0FBRztJQUM3QixHQUFHO0lBQ0gsVUFBVTtJQUNWLEtBQUs7SUFDTCxPQUFPO0lBQ1AsTUFBTTtJQUNOLE9BQU87SUFDUCxPQUFPO0lBQ1AsUUFBUTtJQUNSLElBQUk7SUFDSixVQUFVO0FBQ2Q7QUFDQTs7Q0FFQyxHQUNEQSw4QkFBOEIsR0FBR0YsT0FBT1MsT0FBTyxDQUFDUCxRQUFRSSxzQkFBc0IsRUFBRUksTUFBTSxDQUFDLENBQUNDLEtBQUssQ0FBQ0MsU0FBU0MsVUFBVTtJQUM3R0YsR0FBRyxDQUFDRSxVQUFVLEdBQUdDLE9BQU9GO0lBQ3hCLE9BQU9EO0FBQ1gsR0FBRyxDQUFDO0FBQ0o7O0NBRUMsR0FDRFQsZ0NBQWdDLEdBQUc7SUFDL0Isb0JBQW9CSyxTQUFTUSxPQUFPO0lBQ3BDLG9CQUFvQlIsU0FBU1MsT0FBTztJQUNwQyxtQkFBbUJULFNBQVNVLE9BQU87SUFDbkMsa0JBQWtCVixTQUFTVyxhQUFhO0lBQ3hDLGdCQUFnQlgsU0FBU1ksSUFBSTtJQUM3QixnQkFBZ0JaLFNBQVNhLFdBQVc7SUFDcEMsb0JBQW9CYixTQUFTYyxRQUFRO0lBQ3JDLG9CQUFvQmQsU0FBU2UsZUFBZTtJQUM1QyxvQkFBb0JmLFNBQVNnQixRQUFRO0lBQ3JDLG9CQUFvQmhCLFNBQVNpQixlQUFlO0FBQ2hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNvaW5iYXNlL2NkcC1sYW5nY2hhaW4tY2hhdGJvdC1leGFtcGxlLy4uLy4uL2FnZW50a2l0L2Rpc3QvbmV0d29yay9uZXR3b3JrLmpzPzg0ZDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5FVFdPUktfSURfVE9fVklFTV9DSEFJTiA9IGV4cG9ydHMuTkVUV09SS19JRF9UT19DSEFJTl9JRCA9IGV4cG9ydHMuQ0hBSU5fSURfVE9fTkVUV09SS19JRCA9IHZvaWQgMDtcbmNvbnN0IGNoYWluc18xID0gcmVxdWlyZShcInZpZW0vY2hhaW5zXCIpO1xuLyoqXG4gKiBNYXBzIEVWTSBjaGFpbiBJRHMgdG8gQ29pbmJhc2UgbmV0d29yayBJRHNcbiAqL1xuZXhwb3J0cy5DSEFJTl9JRF9UT19ORVRXT1JLX0lEID0ge1xuICAgIDE6IFwiZXRoZXJldW0tbWFpbm5ldFwiLFxuICAgIDExMTU1MTExOiBcImV0aGVyZXVtLXNlcG9saWFcIixcbiAgICAxMzc6IFwicG9seWdvbi1tYWlubmV0XCIsXG4gICAgODAwMDE6IFwicG9seWdvbi1tdW1iYWlcIixcbiAgICA4NDUzOiBcImJhc2UtbWFpbm5ldFwiLFxuICAgIDg0NTMyOiBcImJhc2Utc2Vwb2xpYVwiLFxuICAgIDQyMTYxOiBcImFyYml0cnVtLW1haW5uZXRcIixcbiAgICA0MjE2MTQ6IFwiYXJiaXRydW0tc2Vwb2xpYVwiLFxuICAgIDEwOiBcIm9wdGltaXNtLW1haW5uZXRcIixcbiAgICAxMTE1NTQyMDogXCJvcHRpbWlzbS1zZXBvbGlhXCIsXG59O1xuLyoqXG4gKiBNYXBzIENvaW5iYXNlIG5ldHdvcmsgSURzIHRvIEVWTSBjaGFpbiBJRHNcbiAqL1xuZXhwb3J0cy5ORVRXT1JLX0lEX1RPX0NIQUlOX0lEID0gT2JqZWN0LmVudHJpZXMoZXhwb3J0cy5DSEFJTl9JRF9UT19ORVRXT1JLX0lEKS5yZWR1Y2UoKGFjYywgW2NoYWluSWQsIG5ldHdvcmtJZF0pID0+IHtcbiAgICBhY2NbbmV0d29ya0lkXSA9IFN0cmluZyhjaGFpbklkKTtcbiAgICByZXR1cm4gYWNjO1xufSwge30pO1xuLyoqXG4gKiBNYXBzIENvaW5iYXNlIG5ldHdvcmsgSURzIHRvIFZpZW0gY2hhaW4gb2JqZWN0c1xuICovXG5leHBvcnRzLk5FVFdPUktfSURfVE9fVklFTV9DSEFJTiA9IHtcbiAgICBcImV0aGVyZXVtLW1haW5uZXRcIjogY2hhaW5zXzEubWFpbm5ldCxcbiAgICBcImV0aGVyZXVtLXNlcG9saWFcIjogY2hhaW5zXzEuc2Vwb2xpYSxcbiAgICBcInBvbHlnb24tbWFpbm5ldFwiOiBjaGFpbnNfMS5wb2x5Z29uLFxuICAgIFwicG9seWdvbi1tdW1iYWlcIjogY2hhaW5zXzEucG9seWdvbk11bWJhaSxcbiAgICBcImJhc2UtbWFpbm5ldFwiOiBjaGFpbnNfMS5iYXNlLFxuICAgIFwiYmFzZS1zZXBvbGlhXCI6IGNoYWluc18xLmJhc2VTZXBvbGlhLFxuICAgIFwiYXJiaXRydW0tbWFpbm5ldFwiOiBjaGFpbnNfMS5hcmJpdHJ1bSxcbiAgICBcImFyYml0cnVtLXNlcG9saWFcIjogY2hhaW5zXzEuYXJiaXRydW1TZXBvbGlhLFxuICAgIFwib3B0aW1pc20tbWFpbm5ldFwiOiBjaGFpbnNfMS5vcHRpbWlzbSxcbiAgICBcIm9wdGltaXNtLXNlcG9saWFcIjogY2hhaW5zXzEub3B0aW1pc21TZXBvbGlhLFxufTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIk5FVFdPUktfSURfVE9fVklFTV9DSEFJTiIsIk5FVFdPUktfSURfVE9fQ0hBSU5fSUQiLCJDSEFJTl9JRF9UT19ORVRXT1JLX0lEIiwiY2hhaW5zXzEiLCJyZXF1aXJlIiwiZW50cmllcyIsInJlZHVjZSIsImFjYyIsImNoYWluSWQiLCJuZXR3b3JrSWQiLCJTdHJpbmciLCJtYWlubmV0Iiwic2Vwb2xpYSIsInBvbHlnb24iLCJwb2x5Z29uTXVtYmFpIiwiYmFzZSIsImJhc2VTZXBvbGlhIiwiYXJiaXRydW0iLCJhcmJpdHJ1bVNlcG9saWEiLCJvcHRpbWlzbSIsIm9wdGltaXNtU2Vwb2xpYSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/network/network.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/network/types.js":
/*!********************************************!*\
  !*** ../../agentkit/dist/network/types.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC9uZXR3b3JrL3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNvaW5iYXNlL2NkcC1sYW5nY2hhaW4tY2hhdGJvdC1leGFtcGxlLy4uLy4uL2FnZW50a2l0L2Rpc3QvbmV0d29yay90eXBlcy5qcz8xZGExIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/network/types.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/utils.js":
/*!************************************!*\
  !*** ../../agentkit/dist/utils.js ***!
  \************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.approve = approve;\nconst viem_1 = __webpack_require__(/*! viem */ \"(rsc)/../../../node_modules/viem/_cjs/index.js\");\nconst ERC20_ABI = [\n    {\n        inputs: [\n            {\n                name: \"spender\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\"\n            }\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    }\n];\n/**\n * Approves a spender to spend tokens on behalf of the owner\n *\n * @param wallet - The wallet provider\n * @param tokenAddress - The address of the token contract\n * @param spenderAddress - The address of the spender\n * @param amount - The amount to approve in atomic units (wei)\n * @returns A success message or error message\n */ async function approve(wallet, tokenAddress, spenderAddress, amount) {\n    try {\n        const data = (0, viem_1.encodeFunctionData)({\n            abi: ERC20_ABI,\n            functionName: \"approve\",\n            args: [\n                spenderAddress,\n                amount\n            ]\n        });\n        const txHash = await wallet.sendTransaction({\n            to: tokenAddress,\n            data\n        });\n        await wallet.waitForTransactionReceipt(txHash);\n        return `Successfully approved ${spenderAddress} to spend ${amount} tokens`;\n    } catch (error) {\n        return `Error approving tokens: ${error}`;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZUFBZSxHQUFHRTtBQUNsQixNQUFNQyxTQUFTQyxtQkFBT0EsQ0FBQyw0REFBTTtBQUM3QixNQUFNQyxZQUFZO0lBQ2Q7UUFDSUMsUUFBUTtZQUNKO2dCQUFFQyxNQUFNO2dCQUFXQyxNQUFNO1lBQVU7WUFDbkM7Z0JBQUVELE1BQU07Z0JBQVVDLE1BQU07WUFBVTtTQUNyQztRQUNERCxNQUFNO1FBQ05FLFNBQVM7WUFBQztnQkFBRUYsTUFBTTtnQkFBSUMsTUFBTTtZQUFPO1NBQUU7UUFDckNFLGlCQUFpQjtRQUNqQkYsTUFBTTtJQUNWO0NBQ0g7QUFDRDs7Ozs7Ozs7Q0FRQyxHQUNELGVBQWVOLFFBQVFTLE1BQU0sRUFBRUMsWUFBWSxFQUFFQyxjQUFjLEVBQUVDLE1BQU07SUFDL0QsSUFBSTtRQUNBLE1BQU1DLE9BQU8sQ0FBQyxHQUFHWixPQUFPYSxrQkFBa0IsRUFBRTtZQUN4Q0MsS0FBS1o7WUFDTGEsY0FBYztZQUNkQyxNQUFNO2dCQUFDTjtnQkFBZ0JDO2FBQU87UUFDbEM7UUFDQSxNQUFNTSxTQUFTLE1BQU1ULE9BQU9VLGVBQWUsQ0FBQztZQUN4Q0MsSUFBSVY7WUFDSkc7UUFDSjtRQUNBLE1BQU1KLE9BQU9ZLHlCQUF5QixDQUFDSDtRQUN2QyxPQUFPLENBQUMsc0JBQXNCLEVBQUVQLGVBQWUsVUFBVSxFQUFFQyxPQUFPLE9BQU8sQ0FBQztJQUM5RSxFQUNBLE9BQU9VLE9BQU87UUFDVixPQUFPLENBQUMsd0JBQXdCLEVBQUVBLE1BQU0sQ0FBQztJQUM3QztBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGNvaW5iYXNlL2NkcC1sYW5nY2hhaW4tY2hhdGJvdC1leGFtcGxlLy4uLy4uL2FnZW50a2l0L2Rpc3QvdXRpbHMuanM/ZGY3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYXBwcm92ZSA9IGFwcHJvdmU7XG5jb25zdCB2aWVtXzEgPSByZXF1aXJlKFwidmllbVwiKTtcbmNvbnN0IEVSQzIwX0FCSSA9IFtcbiAgICB7XG4gICAgICAgIGlucHV0czogW1xuICAgICAgICAgICAgeyBuYW1lOiBcInNwZW5kZXJcIiwgdHlwZTogXCJhZGRyZXNzXCIgfSxcbiAgICAgICAgICAgIHsgbmFtZTogXCJhbW91bnRcIiwgdHlwZTogXCJ1aW50MjU2XCIgfSxcbiAgICAgICAgXSxcbiAgICAgICAgbmFtZTogXCJhcHByb3ZlXCIsXG4gICAgICAgIG91dHB1dHM6IFt7IG5hbWU6IFwiXCIsIHR5cGU6IFwiYm9vbFwiIH1dLFxuICAgICAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgICAgICB0eXBlOiBcImZ1bmN0aW9uXCIsXG4gICAgfSxcbl07XG4vKipcbiAqIEFwcHJvdmVzIGEgc3BlbmRlciB0byBzcGVuZCB0b2tlbnMgb24gYmVoYWxmIG9mIHRoZSBvd25lclxuICpcbiAqIEBwYXJhbSB3YWxsZXQgLSBUaGUgd2FsbGV0IHByb3ZpZGVyXG4gKiBAcGFyYW0gdG9rZW5BZGRyZXNzIC0gVGhlIGFkZHJlc3Mgb2YgdGhlIHRva2VuIGNvbnRyYWN0XG4gKiBAcGFyYW0gc3BlbmRlckFkZHJlc3MgLSBUaGUgYWRkcmVzcyBvZiB0aGUgc3BlbmRlclxuICogQHBhcmFtIGFtb3VudCAtIFRoZSBhbW91bnQgdG8gYXBwcm92ZSBpbiBhdG9taWMgdW5pdHMgKHdlaSlcbiAqIEByZXR1cm5zIEEgc3VjY2VzcyBtZXNzYWdlIG9yIGVycm9yIG1lc3NhZ2VcbiAqL1xuYXN5bmMgZnVuY3Rpb24gYXBwcm92ZSh3YWxsZXQsIHRva2VuQWRkcmVzcywgc3BlbmRlckFkZHJlc3MsIGFtb3VudCkge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSAoMCwgdmllbV8xLmVuY29kZUZ1bmN0aW9uRGF0YSkoe1xuICAgICAgICAgICAgYWJpOiBFUkMyMF9BQkksXG4gICAgICAgICAgICBmdW5jdGlvbk5hbWU6IFwiYXBwcm92ZVwiLFxuICAgICAgICAgICAgYXJnczogW3NwZW5kZXJBZGRyZXNzLCBhbW91bnRdLFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgdHhIYXNoID0gYXdhaXQgd2FsbGV0LnNlbmRUcmFuc2FjdGlvbih7XG4gICAgICAgICAgICB0bzogdG9rZW5BZGRyZXNzLFxuICAgICAgICAgICAgZGF0YSxcbiAgICAgICAgfSk7XG4gICAgICAgIGF3YWl0IHdhbGxldC53YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0KHR4SGFzaCk7XG4gICAgICAgIHJldHVybiBgU3VjY2Vzc2Z1bGx5IGFwcHJvdmVkICR7c3BlbmRlckFkZHJlc3N9IHRvIHNwZW5kICR7YW1vdW50fSB0b2tlbnNgO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGBFcnJvciBhcHByb3ZpbmcgdG9rZW5zOiAke2Vycm9yfWA7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiYXBwcm92ZSIsInZpZW1fMSIsInJlcXVpcmUiLCJFUkMyMF9BQkkiLCJpbnB1dHMiLCJuYW1lIiwidHlwZSIsIm91dHB1dHMiLCJzdGF0ZU11dGFiaWxpdHkiLCJ3YWxsZXQiLCJ0b2tlbkFkZHJlc3MiLCJzcGVuZGVyQWRkcmVzcyIsImFtb3VudCIsImRhdGEiLCJlbmNvZGVGdW5jdGlvbkRhdGEiLCJhYmkiLCJmdW5jdGlvbk5hbWUiLCJhcmdzIiwidHhIYXNoIiwic2VuZFRyYW5zYWN0aW9uIiwidG8iLCJ3YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0IiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/utils.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/wallet-providers/cdpWalletProvider.js":
/*!*****************************************************************!*\
  !*** ../../agentkit/dist/wallet-providers/cdpWalletProvider.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __classPrivateFieldSet = (void 0) && (void 0).__classPrivateFieldSet || function(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = (void 0) && (void 0).__classPrivateFieldGet || function(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CdpWalletProvider_cdpWallet, _CdpWalletProvider_address, _CdpWalletProvider_network, _CdpWalletProvider_publicClient;\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CdpWalletProvider = void 0;\nconst package_json_1 = __webpack_require__(/*! ../../package.json */ \"(rsc)/../../agentkit/package.json\");\nconst decimal_js_1 = __webpack_require__(/*! decimal.js */ \"(rsc)/../../../node_modules/decimal.js/decimal.js\");\nconst viem_1 = __webpack_require__(/*! viem */ \"(rsc)/../../../node_modules/viem/_cjs/index.js\");\nconst evmWalletProvider_1 = __webpack_require__(/*! ./evmWalletProvider */ \"(rsc)/../../agentkit/dist/wallet-providers/evmWalletProvider.js\");\nconst coinbase_sdk_1 = __webpack_require__(/*! @coinbase/coinbase-sdk */ \"(rsc)/../../agentkit/node_modules/@coinbase/coinbase-sdk/dist/index.js\");\nconst network_1 = __webpack_require__(/*! ../network/network */ \"(rsc)/../../agentkit/dist/network/network.js\");\n/**\n * A wallet provider that uses the Coinbase SDK.\n */ class CdpWalletProvider extends evmWalletProvider_1.EvmWalletProvider {\n    /**\n     * Constructs a new CdpWalletProvider.\n     *\n     * @param config - The configuration options for the CdpWalletProvider.\n     */ constructor(config){\n        super();\n        _CdpWalletProvider_cdpWallet.set(this, void 0);\n        _CdpWalletProvider_address.set(this, void 0);\n        _CdpWalletProvider_network.set(this, void 0);\n        _CdpWalletProvider_publicClient.set(this, void 0);\n        __classPrivateFieldSet(this, _CdpWalletProvider_cdpWallet, config.wallet, \"f\");\n        __classPrivateFieldSet(this, _CdpWalletProvider_address, config.address, \"f\");\n        __classPrivateFieldSet(this, _CdpWalletProvider_network, config.network, \"f\");\n        __classPrivateFieldSet(this, _CdpWalletProvider_publicClient, (0, viem_1.createPublicClient)({\n            chain: network_1.NETWORK_ID_TO_VIEM_CHAIN[config.network.networkId],\n            transport: (0, viem_1.http)()\n        }), \"f\");\n    }\n    /**\n     * Configures a new CdpWalletProvider with a wallet.\n     *\n     * @param config - Optional configuration parameters\n     * @returns A Promise that resolves to a new CdpWalletProvider instance\n     * @throws Error if required environment variables are missing or wallet initialization fails\n     */ static async configureWithWallet(config = {}) {\n        if (config.apiKeyName && config.apiKeyPrivateKey) {\n            coinbase_sdk_1.Coinbase.configure({\n                apiKeyName: config.apiKeyName,\n                privateKey: config.apiKeyPrivateKey,\n                source: \"agentkit\",\n                sourceVersion: package_json_1.version\n            });\n        } else {\n            coinbase_sdk_1.Coinbase.configureFromJson();\n        }\n        let wallet;\n        const mnemonicPhrase = config.mnemonicPhrase || process.env.MNEMONIC_PHRASE;\n        const networkId = config.networkId || process.env.NETWORK_ID || coinbase_sdk_1.Coinbase.networks.BaseSepolia;\n        try {\n            if (config.wallet) {\n                wallet = config.wallet;\n            } else if (config.cdpWalletData) {\n                const walletData = JSON.parse(config.cdpWalletData);\n                wallet = await coinbase_sdk_1.Wallet.import(walletData);\n            } else if (mnemonicPhrase) {\n                wallet = await coinbase_sdk_1.Wallet.import({\n                    mnemonicPhrase: mnemonicPhrase\n                }, networkId);\n            } else {\n                wallet = await coinbase_sdk_1.Wallet.create({\n                    networkId: networkId\n                });\n            }\n        } catch (error) {\n            throw new Error(`Failed to initialize wallet: ${error}`);\n        }\n        const address = (await wallet.getDefaultAddress())?.getId();\n        const network = {\n            protocolFamily: \"evm\",\n            chainId: network_1.NETWORK_ID_TO_CHAIN_ID[networkId],\n            networkId: networkId\n        };\n        const cdpWalletProvider = new CdpWalletProvider({\n            wallet,\n            address,\n            network\n        });\n        return cdpWalletProvider;\n    }\n    /**\n     * Signs a message.\n     *\n     * @param message - The message to sign.\n     * @returns The signed message.\n     */ async signMessage(message) {\n        if (!__classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\")) {\n            throw new Error(\"Wallet not initialized\");\n        }\n        const messageHash = (0, coinbase_sdk_1.hashMessage)(message);\n        const payload = await __classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\").createPayloadSignature(messageHash);\n        if (payload.getStatus() === \"pending\" && payload?.wait) {\n            await payload.wait(); // needed for Server-Signers\n        }\n        return payload.getSignature();\n    }\n    /**\n     * Signs a typed data object.\n     *\n     * @param typedData - The typed data object to sign.\n     * @returns The signed typed data object.\n     */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async signTypedData(typedData) {\n        if (!__classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\")) {\n            throw new Error(\"Wallet not initialized\");\n        }\n        const messageHash = (0, coinbase_sdk_1.hashTypedDataMessage)(typedData.domain, typedData.types, typedData.message);\n        const payload = await __classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\").createPayloadSignature(messageHash);\n        if (payload.getStatus() === \"pending\" && payload?.wait) {\n            await payload.wait(); // needed for Server-Signers\n        }\n        return payload.getSignature();\n    }\n    /**\n     * Signs a transaction.\n     *\n     * @param transaction - The transaction to sign.\n     * @returns The signed transaction.\n     */ async signTransaction(transaction) {\n        if (!__classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\")) {\n            throw new Error(\"Wallet not initialized\");\n        }\n        const serializedTx = (0, viem_1.serializeTransaction)(transaction);\n        const transactionHash = (0, viem_1.keccak256)(serializedTx);\n        const payload = await __classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\").createPayloadSignature(transactionHash);\n        if (payload.getStatus() === \"pending\" && payload?.wait) {\n            await payload.wait(); // needed for Server-Signers\n        }\n        return payload.getSignature();\n    }\n    /**\n     * Sends a transaction.\n     *\n     * @param transaction - The transaction to send.\n     * @returns The hash of the transaction.\n     */ async sendTransaction(transaction) {\n        if (!__classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\")) {\n            throw new Error(\"Wallet not initialized\");\n        }\n        const preparedTransaction = await this.prepareTransaction(transaction.to, transaction.value, transaction.data);\n        const signature = await this.signTransaction({\n            ...preparedTransaction\n        });\n        const signedPayload = await this.addSignatureAndSerialize(preparedTransaction, signature);\n        const externalAddress = new coinbase_sdk_1.ExternalAddress(__classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\").getNetworkId(), __classPrivateFieldGet(this, _CdpWalletProvider_address, \"f\"));\n        const tx = await externalAddress.broadcastExternalTransaction(signedPayload.slice(2));\n        return tx.transactionHash;\n    }\n    /**\n     * Prepares a transaction.\n     *\n     * @param to - The address to send the transaction to.\n     * @param value - The value of the transaction.\n     * @param data - The data of the transaction.\n     * @returns The prepared transaction.\n     */ async prepareTransaction(to, value, data) {\n        if (!__classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\")) {\n            throw new Error(\"Wallet not initialized\");\n        }\n        const nonce = await __classPrivateFieldGet(this, _CdpWalletProvider_publicClient, \"f\").getTransactionCount({\n            address: __classPrivateFieldGet(this, _CdpWalletProvider_address, \"f\")\n        });\n        const feeData = await __classPrivateFieldGet(this, _CdpWalletProvider_publicClient, \"f\").estimateFeesPerGas();\n        const gas = await __classPrivateFieldGet(this, _CdpWalletProvider_publicClient, \"f\").estimateGas({\n            account: __classPrivateFieldGet(this, _CdpWalletProvider_address, \"f\"),\n            to,\n            value,\n            data,\n            maxFeePerGas: feeData.maxFeePerGas,\n            maxPriorityFeePerGas: feeData.maxPriorityFeePerGas\n        });\n        const chainId = parseInt(__classPrivateFieldGet(this, _CdpWalletProvider_network, \"f\").chainId, 10);\n        return {\n            to,\n            value,\n            data,\n            nonce,\n            maxFeePerGas: feeData.maxFeePerGas,\n            maxPriorityFeePerGas: feeData.maxPriorityFeePerGas,\n            gas,\n            chainId,\n            type: \"eip1559\"\n        };\n    }\n    /**\n     * Adds signature to a transaction and serializes it for broadcast.\n     *\n     * @param transaction - The transaction to sign.\n     * @param signature - The signature to add to the transaction.\n     * @returns A serialized transaction.\n     */ async addSignatureAndSerialize(transaction, signature) {\n        // Decode the signature into its components\n        const r = `0x${signature.slice(2, 66)}`; // First 32 bytes\n        const s = `0x${signature.slice(66, 130)}`; // Next 32 bytes\n        const v = BigInt(parseInt(signature.slice(130, 132), 16)); // Last byte\n        return (0, viem_1.serializeTransaction)(transaction, {\n            r,\n            s,\n            v\n        });\n    }\n    /**\n     * Gets the address of the wallet.\n     *\n     * @returns The address of the wallet.\n     */ getAddress() {\n        if (!__classPrivateFieldGet(this, _CdpWalletProvider_address, \"f\")) {\n            throw new Error(\"Address not initialized\");\n        }\n        return __classPrivateFieldGet(this, _CdpWalletProvider_address, \"f\");\n    }\n    /**\n     * Gets the network of the wallet.\n     *\n     * @returns The network of the wallet.\n     */ getNetwork() {\n        if (!__classPrivateFieldGet(this, _CdpWalletProvider_network, \"f\")) {\n            throw new Error(\"Network not initialized\");\n        }\n        return __classPrivateFieldGet(this, _CdpWalletProvider_network, \"f\");\n    }\n    /**\n     * Gets the name of the wallet provider.\n     *\n     * @returns The name of the wallet provider.\n     */ getName() {\n        return \"cdp_wallet_provider\";\n    }\n    /**\n     * Gets the balance of the wallet.\n     *\n     * @returns The balance of the wallet in wei\n     */ async getBalance() {\n        if (!__classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\")) {\n            throw new Error(\"Wallet not initialized\");\n        }\n        const balance = await __classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\").getBalance(\"eth\");\n        return BigInt(balance.mul(10 ** 18).toString());\n    }\n    /**\n     * Waits for a transaction receipt.\n     *\n     * @param txHash - The hash of the transaction to wait for.\n     * @returns The transaction receipt.\n     */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async waitForTransactionReceipt(txHash) {\n        return await __classPrivateFieldGet(this, _CdpWalletProvider_publicClient, \"f\").waitForTransactionReceipt({\n            hash: txHash\n        });\n    }\n    /**\n     * Reads a contract.\n     *\n     * @param params - The parameters to read the contract.\n     * @returns The response from the contract.\n     */ async readContract(params) {\n        return __classPrivateFieldGet(this, _CdpWalletProvider_publicClient, \"f\").readContract(params);\n    }\n    /**\n     * Creates a trade.\n     *\n     * @param options - The options for the trade.\n     * @returns The trade.\n     */ async createTrade(options) {\n        if (!__classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\")) {\n            throw new Error(\"Wallet not initialized\");\n        }\n        return __classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\").createTrade(options);\n    }\n    /**\n     * Deploys a token.\n     *\n     * @param options - The options for the token deployment.\n     * @returns The deployed token.\n     */ async deployToken(options) {\n        if (!__classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\")) {\n            throw new Error(\"Wallet not initialized\");\n        }\n        return __classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\").deployToken(options);\n    }\n    /**\n     * Deploys a contract.\n     *\n     * @param options - The options for contract deployment\n     * @param options.solidityVersion - The version of the Solidity compiler to use (e.g. \"0.8.0+commit.c7dfd78e\")\n     * @param options.solidityInputJson - The JSON input for the Solidity compiler containing contract source and settings\n     * @param options.contractName - The name of the contract to deploy\n     * @param options.constructorArgs - Key-value map of constructor args\n     *\n     * @returns A Promise that resolves to the deployed contract instance\n     * @throws Error if wallet is not initialized\n     */ async deployContract(options) {\n        if (!__classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\")) {\n            throw new Error(\"Wallet not initialized\");\n        }\n        return __classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\").deployContract(options);\n    }\n    /**\n     * Deploys a new NFT (ERC-721) smart contract.\n     *\n     * @param options - Configuration options for the NFT contract deployment\n     * @param options.name - The name of the collection\n     * @param options.symbol - The token symbol for the collection\n     * @param options.baseURI - The base URI for token metadata.\n     *\n     * @returns A Promise that resolves to the deployed SmartContract instance\n     * @throws Error if the wallet is not properly initialized\n     * @throws Error if the deployment fails for any reason (network issues, insufficient funds, etc.)\n     */ async deployNFT(options) {\n        if (!__classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\")) {\n            throw new Error(\"Wallet not initialized\");\n        }\n        return __classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\").deployNFT(options);\n    }\n    /**\n     * Transfer the native asset of the network.\n     *\n     * @param to - The destination address.\n     * @param value - The amount to transfer in Wei.\n     * @returns The transaction hash.\n     */ async nativeTransfer(to, value) {\n        if (!__classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\")) {\n            throw new Error(\"Wallet not initialized\");\n        }\n        const transferResult = await __classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\").createTransfer({\n            amount: new decimal_js_1.Decimal(value),\n            assetId: coinbase_sdk_1.Coinbase.assets.Eth,\n            destination: to,\n            gasless: false\n        });\n        const result = await transferResult.wait();\n        if (!result.getTransactionHash()) {\n            throw new Error(\"Transaction hash not found\");\n        }\n        return result.getTransactionHash();\n    }\n    /**\n     * Exports the wallet.\n     *\n     * @returns The wallet's data.\n     */ async exportWallet() {\n        if (!__classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\")) {\n            throw new Error(\"Wallet not initialized\");\n        }\n        return __classPrivateFieldGet(this, _CdpWalletProvider_cdpWallet, \"f\").export();\n    }\n}\nexports.CdpWalletProvider = CdpWalletProvider;\n_CdpWalletProvider_cdpWallet = new WeakMap(), _CdpWalletProvider_address = new WeakMap(), _CdpWalletProvider_network = new WeakMap(), _CdpWalletProvider_publicClient = new WeakMap();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC93YWxsZXQtcHJvdmlkZXJzL2NkcFdhbGxldFByb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEseUJBQXlCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsc0JBQXNCLElBQUssU0FBVUMsUUFBUSxFQUFFQyxLQUFLLEVBQUVDLEtBQUssRUFBRUMsSUFBSSxFQUFFQyxDQUFDO0lBQzNHLElBQUlELFNBQVMsS0FBSyxNQUFNLElBQUlFLFVBQVU7SUFDdEMsSUFBSUYsU0FBUyxPQUFPLENBQUNDLEdBQUcsTUFBTSxJQUFJQyxVQUFVO0lBQzVDLElBQUksT0FBT0osVUFBVSxhQUFhRCxhQUFhQyxTQUFTLENBQUNHLElBQUksQ0FBQ0gsTUFBTUssR0FBRyxDQUFDTixXQUFXLE1BQU0sSUFBSUssVUFBVTtJQUN2RyxPQUFPLFNBQVUsTUFBTUQsRUFBRUcsSUFBSSxDQUFDUCxVQUFVRSxTQUFTRSxJQUFJQSxFQUFFRixLQUFLLEdBQUdBLFFBQVFELE1BQU1PLEdBQUcsQ0FBQ1IsVUFBVUUsUUFBU0E7QUFDeEc7QUFDQSxJQUFJTyx5QkFBeUIsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxzQkFBc0IsSUFBSyxTQUFVVCxRQUFRLEVBQUVDLEtBQUssRUFBRUUsSUFBSSxFQUFFQyxDQUFDO0lBQ3BHLElBQUlELFNBQVMsT0FBTyxDQUFDQyxHQUFHLE1BQU0sSUFBSUMsVUFBVTtJQUM1QyxJQUFJLE9BQU9KLFVBQVUsYUFBYUQsYUFBYUMsU0FBUyxDQUFDRyxJQUFJLENBQUNILE1BQU1LLEdBQUcsQ0FBQ04sV0FBVyxNQUFNLElBQUlLLFVBQVU7SUFDdkcsT0FBT0YsU0FBUyxNQUFNQyxJQUFJRCxTQUFTLE1BQU1DLEVBQUVHLElBQUksQ0FBQ1AsWUFBWUksSUFBSUEsRUFBRUYsS0FBSyxHQUFHRCxNQUFNUyxHQUFHLENBQUNWO0FBQ3hGO0FBQ0EsSUFBSVcsOEJBQThCQyw0QkFBNEJDLDRCQUE0QkM7QUFDMUZDLDhDQUE2QztJQUFFYixPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdEZSx5QkFBeUIsR0FBRyxLQUFLO0FBQ2pDLE1BQU1FLGlCQUFpQkMsbUJBQU9BLENBQUMsNkRBQW9CO0FBQ25ELE1BQU1DLGVBQWVELG1CQUFPQSxDQUFDLHFFQUFZO0FBQ3pDLE1BQU1FLFNBQVNGLG1CQUFPQSxDQUFDLDREQUFNO0FBQzdCLE1BQU1HLHNCQUFzQkgsbUJBQU9BLENBQUMsNEZBQXFCO0FBQ3pELE1BQU1JLGlCQUFpQkosbUJBQU9BLENBQUMsc0dBQXdCO0FBQ3ZELE1BQU1LLFlBQVlMLG1CQUFPQSxDQUFDLHdFQUFvQjtBQUM5Qzs7Q0FFQyxHQUNELE1BQU1GLDBCQUEwQkssb0JBQW9CRyxpQkFBaUI7SUFDakU7Ozs7S0FJQyxHQUNEQyxZQUFZQyxNQUFNLENBQUU7UUFDaEIsS0FBSztRQUNMakIsNkJBQTZCSCxHQUFHLENBQUMsSUFBSSxFQUFFLEtBQUs7UUFDNUNJLDJCQUEyQkosR0FBRyxDQUFDLElBQUksRUFBRSxLQUFLO1FBQzFDSywyQkFBMkJMLEdBQUcsQ0FBQyxJQUFJLEVBQUUsS0FBSztRQUMxQ00sZ0NBQWdDTixHQUFHLENBQUMsSUFBSSxFQUFFLEtBQUs7UUFDL0NULHVCQUF1QixJQUFJLEVBQUVZLDhCQUE4QmlCLE9BQU9DLE1BQU0sRUFBRTtRQUMxRTlCLHVCQUF1QixJQUFJLEVBQUVhLDRCQUE0QmdCLE9BQU9FLE9BQU8sRUFBRTtRQUN6RS9CLHVCQUF1QixJQUFJLEVBQUVjLDRCQUE0QmUsT0FBT0csT0FBTyxFQUFFO1FBQ3pFaEMsdUJBQXVCLElBQUksRUFBRWUsaUNBQWlDLENBQUMsR0FBR1EsT0FBT1Usa0JBQWtCLEVBQUU7WUFDekZDLE9BQU9SLFVBQVVTLHdCQUF3QixDQUFDTixPQUFPRyxPQUFPLENBQUNJLFNBQVMsQ0FBQztZQUNuRUMsV0FBVyxDQUFDLEdBQUdkLE9BQU9lLElBQUk7UUFDOUIsSUFBSTtJQUNSO0lBQ0E7Ozs7OztLQU1DLEdBQ0QsYUFBYUMsb0JBQW9CVixTQUFTLENBQUMsQ0FBQyxFQUFFO1FBQzFDLElBQUlBLE9BQU9XLFVBQVUsSUFBSVgsT0FBT1ksZ0JBQWdCLEVBQUU7WUFDOUNoQixlQUFlaUIsUUFBUSxDQUFDQyxTQUFTLENBQUM7Z0JBQzlCSCxZQUFZWCxPQUFPVyxVQUFVO2dCQUM3QkksWUFBWWYsT0FBT1ksZ0JBQWdCO2dCQUNuQ0ksUUFBUTtnQkFDUkMsZUFBZTFCLGVBQWUyQixPQUFPO1lBQ3pDO1FBQ0osT0FDSztZQUNEdEIsZUFBZWlCLFFBQVEsQ0FBQ00saUJBQWlCO1FBQzdDO1FBQ0EsSUFBSWxCO1FBQ0osTUFBTW1CLGlCQUFpQnBCLE9BQU9vQixjQUFjLElBQUlDLFFBQVFDLEdBQUcsQ0FBQ0MsZUFBZTtRQUMzRSxNQUFNaEIsWUFBWVAsT0FBT08sU0FBUyxJQUFJYyxRQUFRQyxHQUFHLENBQUNFLFVBQVUsSUFBSTVCLGVBQWVpQixRQUFRLENBQUNZLFFBQVEsQ0FBQ0MsV0FBVztRQUM1RyxJQUFJO1lBQ0EsSUFBSTFCLE9BQU9DLE1BQU0sRUFBRTtnQkFDZkEsU0FBU0QsT0FBT0MsTUFBTTtZQUMxQixPQUNLLElBQUlELE9BQU8yQixhQUFhLEVBQUU7Z0JBQzNCLE1BQU1DLGFBQWFDLEtBQUtDLEtBQUssQ0FBQzlCLE9BQU8yQixhQUFhO2dCQUNsRDFCLFNBQVMsTUFBTUwsZUFBZW1DLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDSjtZQUNoRCxPQUNLLElBQUlSLGdCQUFnQjtnQkFDckJuQixTQUFTLE1BQU1MLGVBQWVtQyxNQUFNLENBQUNDLE1BQU0sQ0FBQztvQkFBRVosZ0JBQWdCQTtnQkFBZSxHQUFHYjtZQUNwRixPQUNLO2dCQUNETixTQUFTLE1BQU1MLGVBQWVtQyxNQUFNLENBQUNFLE1BQU0sQ0FBQztvQkFBRTFCLFdBQVdBO2dCQUFVO1lBQ3ZFO1FBQ0osRUFDQSxPQUFPMkIsT0FBTztZQUNWLE1BQU0sSUFBSUMsTUFBTSxDQUFDLDZCQUE2QixFQUFFRCxNQUFNLENBQUM7UUFDM0Q7UUFDQSxNQUFNaEMsVUFBVyxPQUFNRCxPQUFPbUMsaUJBQWlCLEVBQUMsR0FBSUM7UUFDcEQsTUFBTWxDLFVBQVU7WUFDWm1DLGdCQUFnQjtZQUNoQkMsU0FBUzFDLFVBQVUyQyxzQkFBc0IsQ0FBQ2pDLFVBQVU7WUFDcERBLFdBQVdBO1FBQ2Y7UUFDQSxNQUFNa0Msb0JBQW9CLElBQUluRCxrQkFBa0I7WUFDNUNXO1lBQ0FDO1lBQ0FDO1FBQ0o7UUFDQSxPQUFPc0M7SUFDWDtJQUNBOzs7OztLQUtDLEdBQ0QsTUFBTUMsWUFBWUMsT0FBTyxFQUFFO1FBQ3ZCLElBQUksQ0FBQzlELHVCQUF1QixJQUFJLEVBQUVFLDhCQUE4QixNQUFNO1lBQ2xFLE1BQU0sSUFBSW9ELE1BQU07UUFDcEI7UUFDQSxNQUFNUyxjQUFjLENBQUMsR0FBR2hELGVBQWVpRCxXQUFXLEVBQUVGO1FBQ3BELE1BQU1HLFVBQVUsTUFBTWpFLHVCQUF1QixJQUFJLEVBQUVFLDhCQUE4QixLQUFLZ0Usc0JBQXNCLENBQUNIO1FBQzdHLElBQUlFLFFBQVFFLFNBQVMsT0FBTyxhQUFhRixTQUFTRyxNQUFNO1lBQ3BELE1BQU1ILFFBQVFHLElBQUksSUFBSSw0QkFBNEI7UUFDdEQ7UUFDQSxPQUFPSCxRQUFRSSxZQUFZO0lBQy9CO0lBQ0E7Ozs7O0tBS0MsR0FDRCw4REFBOEQ7SUFDOUQsTUFBTUMsY0FBY0MsU0FBUyxFQUFFO1FBQzNCLElBQUksQ0FBQ3ZFLHVCQUF1QixJQUFJLEVBQUVFLDhCQUE4QixNQUFNO1lBQ2xFLE1BQU0sSUFBSW9ELE1BQU07UUFDcEI7UUFDQSxNQUFNUyxjQUFjLENBQUMsR0FBR2hELGVBQWV5RCxvQkFBb0IsRUFBRUQsVUFBVUUsTUFBTSxFQUFFRixVQUFVRyxLQUFLLEVBQUVILFVBQVVULE9BQU87UUFDakgsTUFBTUcsVUFBVSxNQUFNakUsdUJBQXVCLElBQUksRUFBRUUsOEJBQThCLEtBQUtnRSxzQkFBc0IsQ0FBQ0g7UUFDN0csSUFBSUUsUUFBUUUsU0FBUyxPQUFPLGFBQWFGLFNBQVNHLE1BQU07WUFDcEQsTUFBTUgsUUFBUUcsSUFBSSxJQUFJLDRCQUE0QjtRQUN0RDtRQUNBLE9BQU9ILFFBQVFJLFlBQVk7SUFDL0I7SUFDQTs7Ozs7S0FLQyxHQUNELE1BQU1NLGdCQUFnQkMsV0FBVyxFQUFFO1FBQy9CLElBQUksQ0FBQzVFLHVCQUF1QixJQUFJLEVBQUVFLDhCQUE4QixNQUFNO1lBQ2xFLE1BQU0sSUFBSW9ELE1BQU07UUFDcEI7UUFDQSxNQUFNdUIsZUFBZSxDQUFDLEdBQUdoRSxPQUFPaUUsb0JBQW9CLEVBQUVGO1FBQ3RELE1BQU1HLGtCQUFrQixDQUFDLEdBQUdsRSxPQUFPbUUsU0FBUyxFQUFFSDtRQUM5QyxNQUFNWixVQUFVLE1BQU1qRSx1QkFBdUIsSUFBSSxFQUFFRSw4QkFBOEIsS0FBS2dFLHNCQUFzQixDQUFDYTtRQUM3RyxJQUFJZCxRQUFRRSxTQUFTLE9BQU8sYUFBYUYsU0FBU0csTUFBTTtZQUNwRCxNQUFNSCxRQUFRRyxJQUFJLElBQUksNEJBQTRCO1FBQ3REO1FBQ0EsT0FBT0gsUUFBUUksWUFBWTtJQUMvQjtJQUNBOzs7OztLQUtDLEdBQ0QsTUFBTVksZ0JBQWdCTCxXQUFXLEVBQUU7UUFDL0IsSUFBSSxDQUFDNUUsdUJBQXVCLElBQUksRUFBRUUsOEJBQThCLE1BQU07WUFDbEUsTUFBTSxJQUFJb0QsTUFBTTtRQUNwQjtRQUNBLE1BQU00QixzQkFBc0IsTUFBTSxJQUFJLENBQUNDLGtCQUFrQixDQUFDUCxZQUFZUSxFQUFFLEVBQUVSLFlBQVluRixLQUFLLEVBQUVtRixZQUFZUyxJQUFJO1FBQzdHLE1BQU1DLFlBQVksTUFBTSxJQUFJLENBQUNYLGVBQWUsQ0FBQztZQUN6QyxHQUFHTyxtQkFBbUI7UUFDMUI7UUFDQSxNQUFNSyxnQkFBZ0IsTUFBTSxJQUFJLENBQUNDLHdCQUF3QixDQUFDTixxQkFBcUJJO1FBQy9FLE1BQU1HLGtCQUFrQixJQUFJMUUsZUFBZTJFLGVBQWUsQ0FBQzFGLHVCQUF1QixJQUFJLEVBQUVFLDhCQUE4QixLQUFLeUYsWUFBWSxJQUFJM0YsdUJBQXVCLElBQUksRUFBRUcsNEJBQTRCO1FBQ3BNLE1BQU15RixLQUFLLE1BQU1ILGdCQUFnQkksNEJBQTRCLENBQUNOLGNBQWNPLEtBQUssQ0FBQztRQUNsRixPQUFPRixHQUFHYixlQUFlO0lBQzdCO0lBQ0E7Ozs7Ozs7S0FPQyxHQUNELE1BQU1JLG1CQUFtQkMsRUFBRSxFQUFFM0YsS0FBSyxFQUFFNEYsSUFBSSxFQUFFO1FBQ3RDLElBQUksQ0FBQ3JGLHVCQUF1QixJQUFJLEVBQUVFLDhCQUE4QixNQUFNO1lBQ2xFLE1BQU0sSUFBSW9ELE1BQU07UUFDcEI7UUFDQSxNQUFNeUMsUUFBUSxNQUFNL0YsdUJBQXVCLElBQUksRUFBRUssaUNBQWlDLEtBQUsyRixtQkFBbUIsQ0FBQztZQUN2RzNFLFNBQVNyQix1QkFBdUIsSUFBSSxFQUFFRyw0QkFBNEI7UUFDdEU7UUFDQSxNQUFNOEYsVUFBVSxNQUFNakcsdUJBQXVCLElBQUksRUFBRUssaUNBQWlDLEtBQUs2RixrQkFBa0I7UUFDM0csTUFBTUMsTUFBTSxNQUFNbkcsdUJBQXVCLElBQUksRUFBRUssaUNBQWlDLEtBQUsrRixXQUFXLENBQUM7WUFDN0ZDLFNBQVNyRyx1QkFBdUIsSUFBSSxFQUFFRyw0QkFBNEI7WUFDbEVpRjtZQUNBM0Y7WUFDQTRGO1lBQ0FpQixjQUFjTCxRQUFRSyxZQUFZO1lBQ2xDQyxzQkFBc0JOLFFBQVFNLG9CQUFvQjtRQUN0RDtRQUNBLE1BQU03QyxVQUFVOEMsU0FBU3hHLHVCQUF1QixJQUFJLEVBQUVJLDRCQUE0QixLQUFLc0QsT0FBTyxFQUFFO1FBQ2hHLE9BQU87WUFDSDBCO1lBQ0EzRjtZQUNBNEY7WUFDQVU7WUFDQU8sY0FBY0wsUUFBUUssWUFBWTtZQUNsQ0Msc0JBQXNCTixRQUFRTSxvQkFBb0I7WUFDbERKO1lBQ0F6QztZQUNBK0MsTUFBTTtRQUNWO0lBQ0o7SUFDQTs7Ozs7O0tBTUMsR0FDRCxNQUFNakIseUJBQXlCWixXQUFXLEVBQUVVLFNBQVMsRUFBRTtRQUNuRCwyQ0FBMkM7UUFDM0MsTUFBTW9CLElBQUksQ0FBQyxFQUFFLEVBQUVwQixVQUFVUSxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsRUFBRSxpQkFBaUI7UUFDMUQsTUFBTWEsSUFBSSxDQUFDLEVBQUUsRUFBRXJCLFVBQVVRLEtBQUssQ0FBQyxJQUFJLEtBQUssQ0FBQyxFQUFFLGdCQUFnQjtRQUMzRCxNQUFNYyxJQUFJQyxPQUFPTCxTQUFTbEIsVUFBVVEsS0FBSyxDQUFDLEtBQUssTUFBTSxNQUFNLFlBQVk7UUFDdkUsT0FBTyxDQUFDLEdBQUdqRixPQUFPaUUsb0JBQW9CLEVBQUVGLGFBQWE7WUFBRThCO1lBQUdDO1lBQUdDO1FBQUU7SUFDbkU7SUFDQTs7OztLQUlDLEdBQ0RFLGFBQWE7UUFDVCxJQUFJLENBQUM5Ryx1QkFBdUIsSUFBSSxFQUFFRyw0QkFBNEIsTUFBTTtZQUNoRSxNQUFNLElBQUltRCxNQUFNO1FBQ3BCO1FBQ0EsT0FBT3RELHVCQUF1QixJQUFJLEVBQUVHLDRCQUE0QjtJQUNwRTtJQUNBOzs7O0tBSUMsR0FDRDRHLGFBQWE7UUFDVCxJQUFJLENBQUMvRyx1QkFBdUIsSUFBSSxFQUFFSSw0QkFBNEIsTUFBTTtZQUNoRSxNQUFNLElBQUlrRCxNQUFNO1FBQ3BCO1FBQ0EsT0FBT3RELHVCQUF1QixJQUFJLEVBQUVJLDRCQUE0QjtJQUNwRTtJQUNBOzs7O0tBSUMsR0FDRDRHLFVBQVU7UUFDTixPQUFPO0lBQ1g7SUFDQTs7OztLQUlDLEdBQ0QsTUFBTUMsYUFBYTtRQUNmLElBQUksQ0FBQ2pILHVCQUF1QixJQUFJLEVBQUVFLDhCQUE4QixNQUFNO1lBQ2xFLE1BQU0sSUFBSW9ELE1BQU07UUFDcEI7UUFDQSxNQUFNNEQsVUFBVSxNQUFNbEgsdUJBQXVCLElBQUksRUFBRUUsOEJBQThCLEtBQUsrRyxVQUFVLENBQUM7UUFDakcsT0FBT0osT0FBT0ssUUFBUUMsR0FBRyxDQUFDLE1BQU0sSUFBSUMsUUFBUTtJQUNoRDtJQUNBOzs7OztLQUtDLEdBQ0QsOERBQThEO0lBQzlELE1BQU1DLDBCQUEwQkMsTUFBTSxFQUFFO1FBQ3BDLE9BQU8sTUFBTXRILHVCQUF1QixJQUFJLEVBQUVLLGlDQUFpQyxLQUFLZ0gseUJBQXlCLENBQUM7WUFBRUUsTUFBTUQ7UUFBTztJQUM3SDtJQUNBOzs7OztLQUtDLEdBQ0QsTUFBTUUsYUFBYUMsTUFBTSxFQUFFO1FBQ3ZCLE9BQU96SCx1QkFBdUIsSUFBSSxFQUFFSyxpQ0FBaUMsS0FBS21ILFlBQVksQ0FBQ0M7SUFDM0Y7SUFDQTs7Ozs7S0FLQyxHQUNELE1BQU1DLFlBQVlDLE9BQU8sRUFBRTtRQUN2QixJQUFJLENBQUMzSCx1QkFBdUIsSUFBSSxFQUFFRSw4QkFBOEIsTUFBTTtZQUNsRSxNQUFNLElBQUlvRCxNQUFNO1FBQ3BCO1FBQ0EsT0FBT3RELHVCQUF1QixJQUFJLEVBQUVFLDhCQUE4QixLQUFLd0gsV0FBVyxDQUFDQztJQUN2RjtJQUNBOzs7OztLQUtDLEdBQ0QsTUFBTUMsWUFBWUQsT0FBTyxFQUFFO1FBQ3ZCLElBQUksQ0FBQzNILHVCQUF1QixJQUFJLEVBQUVFLDhCQUE4QixNQUFNO1lBQ2xFLE1BQU0sSUFBSW9ELE1BQU07UUFDcEI7UUFDQSxPQUFPdEQsdUJBQXVCLElBQUksRUFBRUUsOEJBQThCLEtBQUswSCxXQUFXLENBQUNEO0lBQ3ZGO0lBQ0E7Ozs7Ozs7Ozs7O0tBV0MsR0FDRCxNQUFNRSxlQUFlRixPQUFPLEVBQUU7UUFDMUIsSUFBSSxDQUFDM0gsdUJBQXVCLElBQUksRUFBRUUsOEJBQThCLE1BQU07WUFDbEUsTUFBTSxJQUFJb0QsTUFBTTtRQUNwQjtRQUNBLE9BQU90RCx1QkFBdUIsSUFBSSxFQUFFRSw4QkFBOEIsS0FBSzJILGNBQWMsQ0FBQ0Y7SUFDMUY7SUFDQTs7Ozs7Ozs7Ozs7S0FXQyxHQUNELE1BQU1HLFVBQVVILE9BQU8sRUFBRTtRQUNyQixJQUFJLENBQUMzSCx1QkFBdUIsSUFBSSxFQUFFRSw4QkFBOEIsTUFBTTtZQUNsRSxNQUFNLElBQUlvRCxNQUFNO1FBQ3BCO1FBQ0EsT0FBT3RELHVCQUF1QixJQUFJLEVBQUVFLDhCQUE4QixLQUFLNEgsU0FBUyxDQUFDSDtJQUNyRjtJQUNBOzs7Ozs7S0FNQyxHQUNELE1BQU1JLGVBQWUzQyxFQUFFLEVBQUUzRixLQUFLLEVBQUU7UUFDNUIsSUFBSSxDQUFDTyx1QkFBdUIsSUFBSSxFQUFFRSw4QkFBOEIsTUFBTTtZQUNsRSxNQUFNLElBQUlvRCxNQUFNO1FBQ3BCO1FBQ0EsTUFBTTBFLGlCQUFpQixNQUFNaEksdUJBQXVCLElBQUksRUFBRUUsOEJBQThCLEtBQUsrSCxjQUFjLENBQUM7WUFDeEdDLFFBQVEsSUFBSXRILGFBQWF1SCxPQUFPLENBQUMxSTtZQUNqQzJJLFNBQVNySCxlQUFlaUIsUUFBUSxDQUFDcUcsTUFBTSxDQUFDQyxHQUFHO1lBQzNDQyxhQUFhbkQ7WUFDYm9ELFNBQVM7UUFDYjtRQUNBLE1BQU1DLFNBQVMsTUFBTVQsZUFBZTVELElBQUk7UUFDeEMsSUFBSSxDQUFDcUUsT0FBT0Msa0JBQWtCLElBQUk7WUFDOUIsTUFBTSxJQUFJcEYsTUFBTTtRQUNwQjtRQUNBLE9BQU9tRixPQUFPQyxrQkFBa0I7SUFDcEM7SUFDQTs7OztLQUlDLEdBQ0QsTUFBTUMsZUFBZTtRQUNqQixJQUFJLENBQUMzSSx1QkFBdUIsSUFBSSxFQUFFRSw4QkFBOEIsTUFBTTtZQUNsRSxNQUFNLElBQUlvRCxNQUFNO1FBQ3BCO1FBQ0EsT0FBT3RELHVCQUF1QixJQUFJLEVBQUVFLDhCQUE4QixLQUFLMEksTUFBTTtJQUNqRjtBQUNKO0FBQ0FwSSx5QkFBeUIsR0FBR0M7QUFDNUJQLCtCQUErQixJQUFJMkksV0FBVzFJLDZCQUE2QixJQUFJMEksV0FBV3pJLDZCQUE2QixJQUFJeUksV0FBV3hJLGtDQUFrQyxJQUFJd0kiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY29pbmJhc2UvY2RwLWxhbmdjaGFpbi1jaGF0Ym90LWV4YW1wbGUvLi4vLi4vYWdlbnRraXQvZGlzdC93YWxsZXQtcHJvdmlkZXJzL2NkcFdhbGxldFByb3ZpZGVyLmpzP2E1Y2QiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jbGFzc1ByaXZhdGVGaWVsZFNldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZFNldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwgdmFsdWUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJtXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIG1ldGhvZCBpcyBub3Qgd3JpdGFibGVcIik7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgc2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHdyaXRlIHByaXZhdGUgbWVtYmVyIHRvIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIChraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlciwgdmFsdWUpIDogZiA/IGYudmFsdWUgPSB2YWx1ZSA6IHN0YXRlLnNldChyZWNlaXZlciwgdmFsdWUpKSwgdmFsdWU7XG59O1xudmFyIF9fY2xhc3NQcml2YXRlRmllbGRHZXQgPSAodGhpcyAmJiB0aGlzLl9fY2xhc3NQcml2YXRlRmllbGRHZXQpIHx8IGZ1bmN0aW9uIChyZWNlaXZlciwgc3RhdGUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBnZXR0ZXJcIik7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgcmVhZCBwcml2YXRlIG1lbWJlciBmcm9tIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIGtpbmQgPT09IFwibVwiID8gZiA6IGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyKSA6IGYgPyBmLnZhbHVlIDogc3RhdGUuZ2V0KHJlY2VpdmVyKTtcbn07XG52YXIgX0NkcFdhbGxldFByb3ZpZGVyX2NkcFdhbGxldCwgX0NkcFdhbGxldFByb3ZpZGVyX2FkZHJlc3MsIF9DZHBXYWxsZXRQcm92aWRlcl9uZXR3b3JrLCBfQ2RwV2FsbGV0UHJvdmlkZXJfcHVibGljQ2xpZW50O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DZHBXYWxsZXRQcm92aWRlciA9IHZvaWQgMDtcbmNvbnN0IHBhY2thZ2VfanNvbl8xID0gcmVxdWlyZShcIi4uLy4uL3BhY2thZ2UuanNvblwiKTtcbmNvbnN0IGRlY2ltYWxfanNfMSA9IHJlcXVpcmUoXCJkZWNpbWFsLmpzXCIpO1xuY29uc3QgdmllbV8xID0gcmVxdWlyZShcInZpZW1cIik7XG5jb25zdCBldm1XYWxsZXRQcm92aWRlcl8xID0gcmVxdWlyZShcIi4vZXZtV2FsbGV0UHJvdmlkZXJcIik7XG5jb25zdCBjb2luYmFzZV9zZGtfMSA9IHJlcXVpcmUoXCJAY29pbmJhc2UvY29pbmJhc2Utc2RrXCIpO1xuY29uc3QgbmV0d29ya18xID0gcmVxdWlyZShcIi4uL25ldHdvcmsvbmV0d29ya1wiKTtcbi8qKlxuICogQSB3YWxsZXQgcHJvdmlkZXIgdGhhdCB1c2VzIHRoZSBDb2luYmFzZSBTREsuXG4gKi9cbmNsYXNzIENkcFdhbGxldFByb3ZpZGVyIGV4dGVuZHMgZXZtV2FsbGV0UHJvdmlkZXJfMS5Fdm1XYWxsZXRQcm92aWRlciB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0cyBhIG5ldyBDZHBXYWxsZXRQcm92aWRlci5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBjb25maWcgLSBUaGUgY29uZmlndXJhdGlvbiBvcHRpb25zIGZvciB0aGUgQ2RwV2FsbGV0UHJvdmlkZXIuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIF9DZHBXYWxsZXRQcm92aWRlcl9jZHBXYWxsZXQuc2V0KHRoaXMsIHZvaWQgMCk7XG4gICAgICAgIF9DZHBXYWxsZXRQcm92aWRlcl9hZGRyZXNzLnNldCh0aGlzLCB2b2lkIDApO1xuICAgICAgICBfQ2RwV2FsbGV0UHJvdmlkZXJfbmV0d29yay5zZXQodGhpcywgdm9pZCAwKTtcbiAgICAgICAgX0NkcFdhbGxldFByb3ZpZGVyX3B1YmxpY0NsaWVudC5zZXQodGhpcywgdm9pZCAwKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfQ2RwV2FsbGV0UHJvdmlkZXJfY2RwV2FsbGV0LCBjb25maWcud2FsbGV0LCBcImZcIik7XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX0NkcFdhbGxldFByb3ZpZGVyX2FkZHJlc3MsIGNvbmZpZy5hZGRyZXNzLCBcImZcIik7XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX0NkcFdhbGxldFByb3ZpZGVyX25ldHdvcmssIGNvbmZpZy5uZXR3b3JrLCBcImZcIik7XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX0NkcFdhbGxldFByb3ZpZGVyX3B1YmxpY0NsaWVudCwgKDAsIHZpZW1fMS5jcmVhdGVQdWJsaWNDbGllbnQpKHtcbiAgICAgICAgICAgIGNoYWluOiBuZXR3b3JrXzEuTkVUV09SS19JRF9UT19WSUVNX0NIQUlOW2NvbmZpZy5uZXR3b3JrLm5ldHdvcmtJZF0sXG4gICAgICAgICAgICB0cmFuc3BvcnQ6ICgwLCB2aWVtXzEuaHR0cCkoKSxcbiAgICAgICAgfSksIFwiZlwiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29uZmlndXJlcyBhIG5ldyBDZHBXYWxsZXRQcm92aWRlciB3aXRoIGEgd2FsbGV0LlxuICAgICAqXG4gICAgICogQHBhcmFtIGNvbmZpZyAtIE9wdGlvbmFsIGNvbmZpZ3VyYXRpb24gcGFyYW1ldGVyc1xuICAgICAqIEByZXR1cm5zIEEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIGEgbmV3IENkcFdhbGxldFByb3ZpZGVyIGluc3RhbmNlXG4gICAgICogQHRocm93cyBFcnJvciBpZiByZXF1aXJlZCBlbnZpcm9ubWVudCB2YXJpYWJsZXMgYXJlIG1pc3Npbmcgb3Igd2FsbGV0IGluaXRpYWxpemF0aW9uIGZhaWxzXG4gICAgICovXG4gICAgc3RhdGljIGFzeW5jIGNvbmZpZ3VyZVdpdGhXYWxsZXQoY29uZmlnID0ge30pIHtcbiAgICAgICAgaWYgKGNvbmZpZy5hcGlLZXlOYW1lICYmIGNvbmZpZy5hcGlLZXlQcml2YXRlS2V5KSB7XG4gICAgICAgICAgICBjb2luYmFzZV9zZGtfMS5Db2luYmFzZS5jb25maWd1cmUoe1xuICAgICAgICAgICAgICAgIGFwaUtleU5hbWU6IGNvbmZpZy5hcGlLZXlOYW1lLFxuICAgICAgICAgICAgICAgIHByaXZhdGVLZXk6IGNvbmZpZy5hcGlLZXlQcml2YXRlS2V5LFxuICAgICAgICAgICAgICAgIHNvdXJjZTogXCJhZ2VudGtpdFwiLFxuICAgICAgICAgICAgICAgIHNvdXJjZVZlcnNpb246IHBhY2thZ2VfanNvbl8xLnZlcnNpb24sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvaW5iYXNlX3Nka18xLkNvaW5iYXNlLmNvbmZpZ3VyZUZyb21Kc29uKCk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHdhbGxldDtcbiAgICAgICAgY29uc3QgbW5lbW9uaWNQaHJhc2UgPSBjb25maWcubW5lbW9uaWNQaHJhc2UgfHwgcHJvY2Vzcy5lbnYuTU5FTU9OSUNfUEhSQVNFO1xuICAgICAgICBjb25zdCBuZXR3b3JrSWQgPSBjb25maWcubmV0d29ya0lkIHx8IHByb2Nlc3MuZW52Lk5FVFdPUktfSUQgfHwgY29pbmJhc2Vfc2RrXzEuQ29pbmJhc2UubmV0d29ya3MuQmFzZVNlcG9saWE7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoY29uZmlnLndhbGxldCkge1xuICAgICAgICAgICAgICAgIHdhbGxldCA9IGNvbmZpZy53YWxsZXQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChjb25maWcuY2RwV2FsbGV0RGF0YSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHdhbGxldERhdGEgPSBKU09OLnBhcnNlKGNvbmZpZy5jZHBXYWxsZXREYXRhKTtcbiAgICAgICAgICAgICAgICB3YWxsZXQgPSBhd2FpdCBjb2luYmFzZV9zZGtfMS5XYWxsZXQuaW1wb3J0KHdhbGxldERhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAobW5lbW9uaWNQaHJhc2UpIHtcbiAgICAgICAgICAgICAgICB3YWxsZXQgPSBhd2FpdCBjb2luYmFzZV9zZGtfMS5XYWxsZXQuaW1wb3J0KHsgbW5lbW9uaWNQaHJhc2U6IG1uZW1vbmljUGhyYXNlIH0sIG5ldHdvcmtJZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB3YWxsZXQgPSBhd2FpdCBjb2luYmFzZV9zZGtfMS5XYWxsZXQuY3JlYXRlKHsgbmV0d29ya0lkOiBuZXR3b3JrSWQgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBpbml0aWFsaXplIHdhbGxldDogJHtlcnJvcn1gKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhZGRyZXNzID0gKGF3YWl0IHdhbGxldC5nZXREZWZhdWx0QWRkcmVzcygpKT8uZ2V0SWQoKTtcbiAgICAgICAgY29uc3QgbmV0d29yayA9IHtcbiAgICAgICAgICAgIHByb3RvY29sRmFtaWx5OiBcImV2bVwiLFxuICAgICAgICAgICAgY2hhaW5JZDogbmV0d29ya18xLk5FVFdPUktfSURfVE9fQ0hBSU5fSURbbmV0d29ya0lkXSxcbiAgICAgICAgICAgIG5ldHdvcmtJZDogbmV0d29ya0lkLFxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBjZHBXYWxsZXRQcm92aWRlciA9IG5ldyBDZHBXYWxsZXRQcm92aWRlcih7XG4gICAgICAgICAgICB3YWxsZXQsXG4gICAgICAgICAgICBhZGRyZXNzLFxuICAgICAgICAgICAgbmV0d29yayxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBjZHBXYWxsZXRQcm92aWRlcjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2lnbnMgYSBtZXNzYWdlLlxuICAgICAqXG4gICAgICogQHBhcmFtIG1lc3NhZ2UgLSBUaGUgbWVzc2FnZSB0byBzaWduLlxuICAgICAqIEByZXR1cm5zIFRoZSBzaWduZWQgbWVzc2FnZS5cbiAgICAgKi9cbiAgICBhc3luYyBzaWduTWVzc2FnZShtZXNzYWdlKSB7XG4gICAgICAgIGlmICghX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2RwV2FsbGV0UHJvdmlkZXJfY2RwV2FsbGV0LCBcImZcIikpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIldhbGxldCBub3QgaW5pdGlhbGl6ZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbWVzc2FnZUhhc2ggPSAoMCwgY29pbmJhc2Vfc2RrXzEuaGFzaE1lc3NhZ2UpKG1lc3NhZ2UpO1xuICAgICAgICBjb25zdCBwYXlsb2FkID0gYXdhaXQgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2RwV2FsbGV0UHJvdmlkZXJfY2RwV2FsbGV0LCBcImZcIikuY3JlYXRlUGF5bG9hZFNpZ25hdHVyZShtZXNzYWdlSGFzaCk7XG4gICAgICAgIGlmIChwYXlsb2FkLmdldFN0YXR1cygpID09PSBcInBlbmRpbmdcIiAmJiBwYXlsb2FkPy53YWl0KSB7XG4gICAgICAgICAgICBhd2FpdCBwYXlsb2FkLndhaXQoKTsgLy8gbmVlZGVkIGZvciBTZXJ2ZXItU2lnbmVyc1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwYXlsb2FkLmdldFNpZ25hdHVyZSgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTaWducyBhIHR5cGVkIGRhdGEgb2JqZWN0LlxuICAgICAqXG4gICAgICogQHBhcmFtIHR5cGVkRGF0YSAtIFRoZSB0eXBlZCBkYXRhIG9iamVjdCB0byBzaWduLlxuICAgICAqIEByZXR1cm5zIFRoZSBzaWduZWQgdHlwZWQgZGF0YSBvYmplY3QuXG4gICAgICovXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBhc3luYyBzaWduVHlwZWREYXRhKHR5cGVkRGF0YSkge1xuICAgICAgICBpZiAoIV9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NkcFdhbGxldFByb3ZpZGVyX2NkcFdhbGxldCwgXCJmXCIpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJXYWxsZXQgbm90IGluaXRpYWxpemVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG1lc3NhZ2VIYXNoID0gKDAsIGNvaW5iYXNlX3Nka18xLmhhc2hUeXBlZERhdGFNZXNzYWdlKSh0eXBlZERhdGEuZG9tYWluLCB0eXBlZERhdGEudHlwZXMsIHR5cGVkRGF0YS5tZXNzYWdlKTtcbiAgICAgICAgY29uc3QgcGF5bG9hZCA9IGF3YWl0IF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NkcFdhbGxldFByb3ZpZGVyX2NkcFdhbGxldCwgXCJmXCIpLmNyZWF0ZVBheWxvYWRTaWduYXR1cmUobWVzc2FnZUhhc2gpO1xuICAgICAgICBpZiAocGF5bG9hZC5nZXRTdGF0dXMoKSA9PT0gXCJwZW5kaW5nXCIgJiYgcGF5bG9hZD8ud2FpdCkge1xuICAgICAgICAgICAgYXdhaXQgcGF5bG9hZC53YWl0KCk7IC8vIG5lZWRlZCBmb3IgU2VydmVyLVNpZ25lcnNcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcGF5bG9hZC5nZXRTaWduYXR1cmUoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2lnbnMgYSB0cmFuc2FjdGlvbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB0cmFuc2FjdGlvbiAtIFRoZSB0cmFuc2FjdGlvbiB0byBzaWduLlxuICAgICAqIEByZXR1cm5zIFRoZSBzaWduZWQgdHJhbnNhY3Rpb24uXG4gICAgICovXG4gICAgYXN5bmMgc2lnblRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uKSB7XG4gICAgICAgIGlmICghX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2RwV2FsbGV0UHJvdmlkZXJfY2RwV2FsbGV0LCBcImZcIikpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIldhbGxldCBub3QgaW5pdGlhbGl6ZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2VyaWFsaXplZFR4ID0gKDAsIHZpZW1fMS5zZXJpYWxpemVUcmFuc2FjdGlvbikodHJhbnNhY3Rpb24pO1xuICAgICAgICBjb25zdCB0cmFuc2FjdGlvbkhhc2ggPSAoMCwgdmllbV8xLmtlY2NhazI1Nikoc2VyaWFsaXplZFR4KTtcbiAgICAgICAgY29uc3QgcGF5bG9hZCA9IGF3YWl0IF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NkcFdhbGxldFByb3ZpZGVyX2NkcFdhbGxldCwgXCJmXCIpLmNyZWF0ZVBheWxvYWRTaWduYXR1cmUodHJhbnNhY3Rpb25IYXNoKTtcbiAgICAgICAgaWYgKHBheWxvYWQuZ2V0U3RhdHVzKCkgPT09IFwicGVuZGluZ1wiICYmIHBheWxvYWQ/LndhaXQpIHtcbiAgICAgICAgICAgIGF3YWl0IHBheWxvYWQud2FpdCgpOyAvLyBuZWVkZWQgZm9yIFNlcnZlci1TaWduZXJzXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBheWxvYWQuZ2V0U2lnbmF0dXJlKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNlbmRzIGEgdHJhbnNhY3Rpb24uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdHJhbnNhY3Rpb24gLSBUaGUgdHJhbnNhY3Rpb24gdG8gc2VuZC5cbiAgICAgKiBAcmV0dXJucyBUaGUgaGFzaCBvZiB0aGUgdHJhbnNhY3Rpb24uXG4gICAgICovXG4gICAgYXN5bmMgc2VuZFRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uKSB7XG4gICAgICAgIGlmICghX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2RwV2FsbGV0UHJvdmlkZXJfY2RwV2FsbGV0LCBcImZcIikpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIldhbGxldCBub3QgaW5pdGlhbGl6ZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcHJlcGFyZWRUcmFuc2FjdGlvbiA9IGF3YWl0IHRoaXMucHJlcGFyZVRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uLnRvLCB0cmFuc2FjdGlvbi52YWx1ZSwgdHJhbnNhY3Rpb24uZGF0YSk7XG4gICAgICAgIGNvbnN0IHNpZ25hdHVyZSA9IGF3YWl0IHRoaXMuc2lnblRyYW5zYWN0aW9uKHtcbiAgICAgICAgICAgIC4uLnByZXBhcmVkVHJhbnNhY3Rpb24sXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBzaWduZWRQYXlsb2FkID0gYXdhaXQgdGhpcy5hZGRTaWduYXR1cmVBbmRTZXJpYWxpemUocHJlcGFyZWRUcmFuc2FjdGlvbiwgc2lnbmF0dXJlKTtcbiAgICAgICAgY29uc3QgZXh0ZXJuYWxBZGRyZXNzID0gbmV3IGNvaW5iYXNlX3Nka18xLkV4dGVybmFsQWRkcmVzcyhfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DZHBXYWxsZXRQcm92aWRlcl9jZHBXYWxsZXQsIFwiZlwiKS5nZXROZXR3b3JrSWQoKSwgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2RwV2FsbGV0UHJvdmlkZXJfYWRkcmVzcywgXCJmXCIpKTtcbiAgICAgICAgY29uc3QgdHggPSBhd2FpdCBleHRlcm5hbEFkZHJlc3MuYnJvYWRjYXN0RXh0ZXJuYWxUcmFuc2FjdGlvbihzaWduZWRQYXlsb2FkLnNsaWNlKDIpKTtcbiAgICAgICAgcmV0dXJuIHR4LnRyYW5zYWN0aW9uSGFzaDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUHJlcGFyZXMgYSB0cmFuc2FjdGlvbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB0byAtIFRoZSBhZGRyZXNzIHRvIHNlbmQgdGhlIHRyYW5zYWN0aW9uIHRvLlxuICAgICAqIEBwYXJhbSB2YWx1ZSAtIFRoZSB2YWx1ZSBvZiB0aGUgdHJhbnNhY3Rpb24uXG4gICAgICogQHBhcmFtIGRhdGEgLSBUaGUgZGF0YSBvZiB0aGUgdHJhbnNhY3Rpb24uXG4gICAgICogQHJldHVybnMgVGhlIHByZXBhcmVkIHRyYW5zYWN0aW9uLlxuICAgICAqL1xuICAgIGFzeW5jIHByZXBhcmVUcmFuc2FjdGlvbih0bywgdmFsdWUsIGRhdGEpIHtcbiAgICAgICAgaWYgKCFfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DZHBXYWxsZXRQcm92aWRlcl9jZHBXYWxsZXQsIFwiZlwiKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiV2FsbGV0IG5vdCBpbml0aWFsaXplZFwiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBub25jZSA9IGF3YWl0IF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NkcFdhbGxldFByb3ZpZGVyX3B1YmxpY0NsaWVudCwgXCJmXCIpLmdldFRyYW5zYWN0aW9uQ291bnQoe1xuICAgICAgICAgICAgYWRkcmVzczogX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2RwV2FsbGV0UHJvdmlkZXJfYWRkcmVzcywgXCJmXCIpLFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgZmVlRGF0YSA9IGF3YWl0IF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NkcFdhbGxldFByb3ZpZGVyX3B1YmxpY0NsaWVudCwgXCJmXCIpLmVzdGltYXRlRmVlc1BlckdhcygpO1xuICAgICAgICBjb25zdCBnYXMgPSBhd2FpdCBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DZHBXYWxsZXRQcm92aWRlcl9wdWJsaWNDbGllbnQsIFwiZlwiKS5lc3RpbWF0ZUdhcyh7XG4gICAgICAgICAgICBhY2NvdW50OiBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DZHBXYWxsZXRQcm92aWRlcl9hZGRyZXNzLCBcImZcIiksXG4gICAgICAgICAgICB0byxcbiAgICAgICAgICAgIHZhbHVlLFxuICAgICAgICAgICAgZGF0YSxcbiAgICAgICAgICAgIG1heEZlZVBlckdhczogZmVlRGF0YS5tYXhGZWVQZXJHYXMsXG4gICAgICAgICAgICBtYXhQcmlvcml0eUZlZVBlckdhczogZmVlRGF0YS5tYXhQcmlvcml0eUZlZVBlckdhcyxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IGNoYWluSWQgPSBwYXJzZUludChfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DZHBXYWxsZXRQcm92aWRlcl9uZXR3b3JrLCBcImZcIikuY2hhaW5JZCwgMTApO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdG8sXG4gICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgICBub25jZSxcbiAgICAgICAgICAgIG1heEZlZVBlckdhczogZmVlRGF0YS5tYXhGZWVQZXJHYXMsXG4gICAgICAgICAgICBtYXhQcmlvcml0eUZlZVBlckdhczogZmVlRGF0YS5tYXhQcmlvcml0eUZlZVBlckdhcyxcbiAgICAgICAgICAgIGdhcyxcbiAgICAgICAgICAgIGNoYWluSWQsXG4gICAgICAgICAgICB0eXBlOiBcImVpcDE1NTlcIixcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkcyBzaWduYXR1cmUgdG8gYSB0cmFuc2FjdGlvbiBhbmQgc2VyaWFsaXplcyBpdCBmb3IgYnJvYWRjYXN0LlxuICAgICAqXG4gICAgICogQHBhcmFtIHRyYW5zYWN0aW9uIC0gVGhlIHRyYW5zYWN0aW9uIHRvIHNpZ24uXG4gICAgICogQHBhcmFtIHNpZ25hdHVyZSAtIFRoZSBzaWduYXR1cmUgdG8gYWRkIHRvIHRoZSB0cmFuc2FjdGlvbi5cbiAgICAgKiBAcmV0dXJucyBBIHNlcmlhbGl6ZWQgdHJhbnNhY3Rpb24uXG4gICAgICovXG4gICAgYXN5bmMgYWRkU2lnbmF0dXJlQW5kU2VyaWFsaXplKHRyYW5zYWN0aW9uLCBzaWduYXR1cmUpIHtcbiAgICAgICAgLy8gRGVjb2RlIHRoZSBzaWduYXR1cmUgaW50byBpdHMgY29tcG9uZW50c1xuICAgICAgICBjb25zdCByID0gYDB4JHtzaWduYXR1cmUuc2xpY2UoMiwgNjYpfWA7IC8vIEZpcnN0IDMyIGJ5dGVzXG4gICAgICAgIGNvbnN0IHMgPSBgMHgke3NpZ25hdHVyZS5zbGljZSg2NiwgMTMwKX1gOyAvLyBOZXh0IDMyIGJ5dGVzXG4gICAgICAgIGNvbnN0IHYgPSBCaWdJbnQocGFyc2VJbnQoc2lnbmF0dXJlLnNsaWNlKDEzMCwgMTMyKSwgMTYpKTsgLy8gTGFzdCBieXRlXG4gICAgICAgIHJldHVybiAoMCwgdmllbV8xLnNlcmlhbGl6ZVRyYW5zYWN0aW9uKSh0cmFuc2FjdGlvbiwgeyByLCBzLCB2IH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBhZGRyZXNzIG9mIHRoZSB3YWxsZXQuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBUaGUgYWRkcmVzcyBvZiB0aGUgd2FsbGV0LlxuICAgICAqL1xuICAgIGdldEFkZHJlc3MoKSB7XG4gICAgICAgIGlmICghX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2RwV2FsbGV0UHJvdmlkZXJfYWRkcmVzcywgXCJmXCIpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBZGRyZXNzIG5vdCBpbml0aWFsaXplZFwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2RwV2FsbGV0UHJvdmlkZXJfYWRkcmVzcywgXCJmXCIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBuZXR3b3JrIG9mIHRoZSB3YWxsZXQuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBUaGUgbmV0d29yayBvZiB0aGUgd2FsbGV0LlxuICAgICAqL1xuICAgIGdldE5ldHdvcmsoKSB7XG4gICAgICAgIGlmICghX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2RwV2FsbGV0UHJvdmlkZXJfbmV0d29yaywgXCJmXCIpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOZXR3b3JrIG5vdCBpbml0aWFsaXplZFwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2RwV2FsbGV0UHJvdmlkZXJfbmV0d29yaywgXCJmXCIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBuYW1lIG9mIHRoZSB3YWxsZXQgcHJvdmlkZXIuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBUaGUgbmFtZSBvZiB0aGUgd2FsbGV0IHByb3ZpZGVyLlxuICAgICAqL1xuICAgIGdldE5hbWUoKSB7XG4gICAgICAgIHJldHVybiBcImNkcF93YWxsZXRfcHJvdmlkZXJcIjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgYmFsYW5jZSBvZiB0aGUgd2FsbGV0LlxuICAgICAqXG4gICAgICogQHJldHVybnMgVGhlIGJhbGFuY2Ugb2YgdGhlIHdhbGxldCBpbiB3ZWlcbiAgICAgKi9cbiAgICBhc3luYyBnZXRCYWxhbmNlKCkge1xuICAgICAgICBpZiAoIV9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NkcFdhbGxldFByb3ZpZGVyX2NkcFdhbGxldCwgXCJmXCIpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJXYWxsZXQgbm90IGluaXRpYWxpemVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJhbGFuY2UgPSBhd2FpdCBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DZHBXYWxsZXRQcm92aWRlcl9jZHBXYWxsZXQsIFwiZlwiKS5nZXRCYWxhbmNlKFwiZXRoXCIpO1xuICAgICAgICByZXR1cm4gQmlnSW50KGJhbGFuY2UubXVsKDEwICoqIDE4KS50b1N0cmluZygpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV2FpdHMgZm9yIGEgdHJhbnNhY3Rpb24gcmVjZWlwdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB0eEhhc2ggLSBUaGUgaGFzaCBvZiB0aGUgdHJhbnNhY3Rpb24gdG8gd2FpdCBmb3IuXG4gICAgICogQHJldHVybnMgVGhlIHRyYW5zYWN0aW9uIHJlY2VpcHQuXG4gICAgICovXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBhc3luYyB3YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0KHR4SGFzaCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2RwV2FsbGV0UHJvdmlkZXJfcHVibGljQ2xpZW50LCBcImZcIikud2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdCh7IGhhc2g6IHR4SGFzaCB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVhZHMgYSBjb250cmFjdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYXJhbXMgLSBUaGUgcGFyYW1ldGVycyB0byByZWFkIHRoZSBjb250cmFjdC5cbiAgICAgKiBAcmV0dXJucyBUaGUgcmVzcG9uc2UgZnJvbSB0aGUgY29udHJhY3QuXG4gICAgICovXG4gICAgYXN5bmMgcmVhZENvbnRyYWN0KHBhcmFtcykge1xuICAgICAgICByZXR1cm4gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2RwV2FsbGV0UHJvdmlkZXJfcHVibGljQ2xpZW50LCBcImZcIikucmVhZENvbnRyYWN0KHBhcmFtcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSB0cmFkZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgZm9yIHRoZSB0cmFkZS5cbiAgICAgKiBAcmV0dXJucyBUaGUgdHJhZGUuXG4gICAgICovXG4gICAgYXN5bmMgY3JlYXRlVHJhZGUob3B0aW9ucykge1xuICAgICAgICBpZiAoIV9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NkcFdhbGxldFByb3ZpZGVyX2NkcFdhbGxldCwgXCJmXCIpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJXYWxsZXQgbm90IGluaXRpYWxpemVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DZHBXYWxsZXRQcm92aWRlcl9jZHBXYWxsZXQsIFwiZlwiKS5jcmVhdGVUcmFkZShvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVwbG95cyBhIHRva2VuLlxuICAgICAqXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyBmb3IgdGhlIHRva2VuIGRlcGxveW1lbnQuXG4gICAgICogQHJldHVybnMgVGhlIGRlcGxveWVkIHRva2VuLlxuICAgICAqL1xuICAgIGFzeW5jIGRlcGxveVRva2VuKG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKCFfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DZHBXYWxsZXRQcm92aWRlcl9jZHBXYWxsZXQsIFwiZlwiKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiV2FsbGV0IG5vdCBpbml0aWFsaXplZFwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2RwV2FsbGV0UHJvdmlkZXJfY2RwV2FsbGV0LCBcImZcIikuZGVwbG95VG9rZW4ob3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlcGxveXMgYSBjb250cmFjdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgZm9yIGNvbnRyYWN0IGRlcGxveW1lbnRcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5zb2xpZGl0eVZlcnNpb24gLSBUaGUgdmVyc2lvbiBvZiB0aGUgU29saWRpdHkgY29tcGlsZXIgdG8gdXNlIChlLmcuIFwiMC44LjArY29tbWl0LmM3ZGZkNzhlXCIpXG4gICAgICogQHBhcmFtIG9wdGlvbnMuc29saWRpdHlJbnB1dEpzb24gLSBUaGUgSlNPTiBpbnB1dCBmb3IgdGhlIFNvbGlkaXR5IGNvbXBpbGVyIGNvbnRhaW5pbmcgY29udHJhY3Qgc291cmNlIGFuZCBzZXR0aW5nc1xuICAgICAqIEBwYXJhbSBvcHRpb25zLmNvbnRyYWN0TmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBjb250cmFjdCB0byBkZXBsb3lcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5jb25zdHJ1Y3RvckFyZ3MgLSBLZXktdmFsdWUgbWFwIG9mIGNvbnN0cnVjdG9yIGFyZ3NcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSBkZXBsb3llZCBjb250cmFjdCBpbnN0YW5jZVxuICAgICAqIEB0aHJvd3MgRXJyb3IgaWYgd2FsbGV0IGlzIG5vdCBpbml0aWFsaXplZFxuICAgICAqL1xuICAgIGFzeW5jIGRlcGxveUNvbnRyYWN0KG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKCFfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DZHBXYWxsZXRQcm92aWRlcl9jZHBXYWxsZXQsIFwiZlwiKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiV2FsbGV0IG5vdCBpbml0aWFsaXplZFwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2RwV2FsbGV0UHJvdmlkZXJfY2RwV2FsbGV0LCBcImZcIikuZGVwbG95Q29udHJhY3Qob3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlcGxveXMgYSBuZXcgTkZUIChFUkMtNzIxKSBzbWFydCBjb250cmFjdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gQ29uZmlndXJhdGlvbiBvcHRpb25zIGZvciB0aGUgTkZUIGNvbnRyYWN0IGRlcGxveW1lbnRcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5uYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGNvbGxlY3Rpb25cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5zeW1ib2wgLSBUaGUgdG9rZW4gc3ltYm9sIGZvciB0aGUgY29sbGVjdGlvblxuICAgICAqIEBwYXJhbSBvcHRpb25zLmJhc2VVUkkgLSBUaGUgYmFzZSBVUkkgZm9yIHRva2VuIG1ldGFkYXRhLlxuICAgICAqXG4gICAgICogQHJldHVybnMgQSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIGRlcGxveWVkIFNtYXJ0Q29udHJhY3QgaW5zdGFuY2VcbiAgICAgKiBAdGhyb3dzIEVycm9yIGlmIHRoZSB3YWxsZXQgaXMgbm90IHByb3Blcmx5IGluaXRpYWxpemVkXG4gICAgICogQHRocm93cyBFcnJvciBpZiB0aGUgZGVwbG95bWVudCBmYWlscyBmb3IgYW55IHJlYXNvbiAobmV0d29yayBpc3N1ZXMsIGluc3VmZmljaWVudCBmdW5kcywgZXRjLilcbiAgICAgKi9cbiAgICBhc3luYyBkZXBsb3lORlQob3B0aW9ucykge1xuICAgICAgICBpZiAoIV9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NkcFdhbGxldFByb3ZpZGVyX2NkcFdhbGxldCwgXCJmXCIpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJXYWxsZXQgbm90IGluaXRpYWxpemVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DZHBXYWxsZXRQcm92aWRlcl9jZHBXYWxsZXQsIFwiZlwiKS5kZXBsb3lORlQob3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRyYW5zZmVyIHRoZSBuYXRpdmUgYXNzZXQgb2YgdGhlIG5ldHdvcmsuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdG8gLSBUaGUgZGVzdGluYXRpb24gYWRkcmVzcy5cbiAgICAgKiBAcGFyYW0gdmFsdWUgLSBUaGUgYW1vdW50IHRvIHRyYW5zZmVyIGluIFdlaS5cbiAgICAgKiBAcmV0dXJucyBUaGUgdHJhbnNhY3Rpb24gaGFzaC5cbiAgICAgKi9cbiAgICBhc3luYyBuYXRpdmVUcmFuc2Zlcih0bywgdmFsdWUpIHtcbiAgICAgICAgaWYgKCFfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DZHBXYWxsZXRQcm92aWRlcl9jZHBXYWxsZXQsIFwiZlwiKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiV2FsbGV0IG5vdCBpbml0aWFsaXplZFwiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB0cmFuc2ZlclJlc3VsdCA9IGF3YWl0IF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NkcFdhbGxldFByb3ZpZGVyX2NkcFdhbGxldCwgXCJmXCIpLmNyZWF0ZVRyYW5zZmVyKHtcbiAgICAgICAgICAgIGFtb3VudDogbmV3IGRlY2ltYWxfanNfMS5EZWNpbWFsKHZhbHVlKSxcbiAgICAgICAgICAgIGFzc2V0SWQ6IGNvaW5iYXNlX3Nka18xLkNvaW5iYXNlLmFzc2V0cy5FdGgsXG4gICAgICAgICAgICBkZXN0aW5hdGlvbjogdG8sXG4gICAgICAgICAgICBnYXNsZXNzOiBmYWxzZSxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRyYW5zZmVyUmVzdWx0LndhaXQoKTtcbiAgICAgICAgaWYgKCFyZXN1bHQuZ2V0VHJhbnNhY3Rpb25IYXNoKCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRyYW5zYWN0aW9uIGhhc2ggbm90IGZvdW5kXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQuZ2V0VHJhbnNhY3Rpb25IYXNoKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEV4cG9ydHMgdGhlIHdhbGxldC5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIFRoZSB3YWxsZXQncyBkYXRhLlxuICAgICAqL1xuICAgIGFzeW5jIGV4cG9ydFdhbGxldCgpIHtcbiAgICAgICAgaWYgKCFfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DZHBXYWxsZXRQcm92aWRlcl9jZHBXYWxsZXQsIFwiZlwiKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiV2FsbGV0IG5vdCBpbml0aWFsaXplZFwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2RwV2FsbGV0UHJvdmlkZXJfY2RwV2FsbGV0LCBcImZcIikuZXhwb3J0KCk7XG4gICAgfVxufVxuZXhwb3J0cy5DZHBXYWxsZXRQcm92aWRlciA9IENkcFdhbGxldFByb3ZpZGVyO1xuX0NkcFdhbGxldFByb3ZpZGVyX2NkcFdhbGxldCA9IG5ldyBXZWFrTWFwKCksIF9DZHBXYWxsZXRQcm92aWRlcl9hZGRyZXNzID0gbmV3IFdlYWtNYXAoKSwgX0NkcFdhbGxldFByb3ZpZGVyX25ldHdvcmsgPSBuZXcgV2Vha01hcCgpLCBfQ2RwV2FsbGV0UHJvdmlkZXJfcHVibGljQ2xpZW50ID0gbmV3IFdlYWtNYXAoKTtcbiJdLCJuYW1lcyI6WyJfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0IiwicmVjZWl2ZXIiLCJzdGF0ZSIsInZhbHVlIiwia2luZCIsImYiLCJUeXBlRXJyb3IiLCJoYXMiLCJjYWxsIiwic2V0IiwiX19jbGFzc1ByaXZhdGVGaWVsZEdldCIsImdldCIsIl9DZHBXYWxsZXRQcm92aWRlcl9jZHBXYWxsZXQiLCJfQ2RwV2FsbGV0UHJvdmlkZXJfYWRkcmVzcyIsIl9DZHBXYWxsZXRQcm92aWRlcl9uZXR3b3JrIiwiX0NkcFdhbGxldFByb3ZpZGVyX3B1YmxpY0NsaWVudCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsIkNkcFdhbGxldFByb3ZpZGVyIiwicGFja2FnZV9qc29uXzEiLCJyZXF1aXJlIiwiZGVjaW1hbF9qc18xIiwidmllbV8xIiwiZXZtV2FsbGV0UHJvdmlkZXJfMSIsImNvaW5iYXNlX3Nka18xIiwibmV0d29ya18xIiwiRXZtV2FsbGV0UHJvdmlkZXIiLCJjb25zdHJ1Y3RvciIsImNvbmZpZyIsIndhbGxldCIsImFkZHJlc3MiLCJuZXR3b3JrIiwiY3JlYXRlUHVibGljQ2xpZW50IiwiY2hhaW4iLCJORVRXT1JLX0lEX1RPX1ZJRU1fQ0hBSU4iLCJuZXR3b3JrSWQiLCJ0cmFuc3BvcnQiLCJodHRwIiwiY29uZmlndXJlV2l0aFdhbGxldCIsImFwaUtleU5hbWUiLCJhcGlLZXlQcml2YXRlS2V5IiwiQ29pbmJhc2UiLCJjb25maWd1cmUiLCJwcml2YXRlS2V5Iiwic291cmNlIiwic291cmNlVmVyc2lvbiIsInZlcnNpb24iLCJjb25maWd1cmVGcm9tSnNvbiIsIm1uZW1vbmljUGhyYXNlIiwicHJvY2VzcyIsImVudiIsIk1ORU1PTklDX1BIUkFTRSIsIk5FVFdPUktfSUQiLCJuZXR3b3JrcyIsIkJhc2VTZXBvbGlhIiwiY2RwV2FsbGV0RGF0YSIsIndhbGxldERhdGEiLCJKU09OIiwicGFyc2UiLCJXYWxsZXQiLCJpbXBvcnQiLCJjcmVhdGUiLCJlcnJvciIsIkVycm9yIiwiZ2V0RGVmYXVsdEFkZHJlc3MiLCJnZXRJZCIsInByb3RvY29sRmFtaWx5IiwiY2hhaW5JZCIsIk5FVFdPUktfSURfVE9fQ0hBSU5fSUQiLCJjZHBXYWxsZXRQcm92aWRlciIsInNpZ25NZXNzYWdlIiwibWVzc2FnZSIsIm1lc3NhZ2VIYXNoIiwiaGFzaE1lc3NhZ2UiLCJwYXlsb2FkIiwiY3JlYXRlUGF5bG9hZFNpZ25hdHVyZSIsImdldFN0YXR1cyIsIndhaXQiLCJnZXRTaWduYXR1cmUiLCJzaWduVHlwZWREYXRhIiwidHlwZWREYXRhIiwiaGFzaFR5cGVkRGF0YU1lc3NhZ2UiLCJkb21haW4iLCJ0eXBlcyIsInNpZ25UcmFuc2FjdGlvbiIsInRyYW5zYWN0aW9uIiwic2VyaWFsaXplZFR4Iiwic2VyaWFsaXplVHJhbnNhY3Rpb24iLCJ0cmFuc2FjdGlvbkhhc2giLCJrZWNjYWsyNTYiLCJzZW5kVHJhbnNhY3Rpb24iLCJwcmVwYXJlZFRyYW5zYWN0aW9uIiwicHJlcGFyZVRyYW5zYWN0aW9uIiwidG8iLCJkYXRhIiwic2lnbmF0dXJlIiwic2lnbmVkUGF5bG9hZCIsImFkZFNpZ25hdHVyZUFuZFNlcmlhbGl6ZSIsImV4dGVybmFsQWRkcmVzcyIsIkV4dGVybmFsQWRkcmVzcyIsImdldE5ldHdvcmtJZCIsInR4IiwiYnJvYWRjYXN0RXh0ZXJuYWxUcmFuc2FjdGlvbiIsInNsaWNlIiwibm9uY2UiLCJnZXRUcmFuc2FjdGlvbkNvdW50IiwiZmVlRGF0YSIsImVzdGltYXRlRmVlc1BlckdhcyIsImdhcyIsImVzdGltYXRlR2FzIiwiYWNjb3VudCIsIm1heEZlZVBlckdhcyIsIm1heFByaW9yaXR5RmVlUGVyR2FzIiwicGFyc2VJbnQiLCJ0eXBlIiwiciIsInMiLCJ2IiwiQmlnSW50IiwiZ2V0QWRkcmVzcyIsImdldE5ldHdvcmsiLCJnZXROYW1lIiwiZ2V0QmFsYW5jZSIsImJhbGFuY2UiLCJtdWwiLCJ0b1N0cmluZyIsIndhaXRGb3JUcmFuc2FjdGlvblJlY2VpcHQiLCJ0eEhhc2giLCJoYXNoIiwicmVhZENvbnRyYWN0IiwicGFyYW1zIiwiY3JlYXRlVHJhZGUiLCJvcHRpb25zIiwiZGVwbG95VG9rZW4iLCJkZXBsb3lDb250cmFjdCIsImRlcGxveU5GVCIsIm5hdGl2ZVRyYW5zZmVyIiwidHJhbnNmZXJSZXN1bHQiLCJjcmVhdGVUcmFuc2ZlciIsImFtb3VudCIsIkRlY2ltYWwiLCJhc3NldElkIiwiYXNzZXRzIiwiRXRoIiwiZGVzdGluYXRpb24iLCJnYXNsZXNzIiwicmVzdWx0IiwiZ2V0VHJhbnNhY3Rpb25IYXNoIiwiZXhwb3J0V2FsbGV0IiwiZXhwb3J0IiwiV2Vha01hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/wallet-providers/cdpWalletProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/wallet-providers/evmWalletProvider.js":
/*!*****************************************************************!*\
  !*** ../../agentkit/dist/wallet-providers/evmWalletProvider.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// TODO: Improve type safety\n/* eslint-disable @typescript-eslint/no-explicit-any */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.EvmWalletProvider = void 0;\nconst walletProvider_1 = __webpack_require__(/*! ./walletProvider */ \"(rsc)/../../agentkit/dist/wallet-providers/walletProvider.js\");\n/**\n * EvmWalletProvider is the abstract base class for all EVM wallet providers.\n *\n * @abstract\n */ class EvmWalletProvider extends walletProvider_1.WalletProvider {\n}\nexports.EvmWalletProvider = EvmWalletProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC93YWxsZXQtcHJvdmlkZXJzL2V2bVdhbGxldFByb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsNEJBQTRCO0FBQzVCLHFEQUFxRCxHQUNyREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHlCQUF5QixHQUFHLEtBQUs7QUFDakMsTUFBTUcsbUJBQW1CQyxtQkFBT0EsQ0FBQyxzRkFBa0I7QUFDbkQ7Ozs7Q0FJQyxHQUNELE1BQU1GLDBCQUEwQkMsaUJBQWlCRSxjQUFjO0FBQy9EO0FBQ0FMLHlCQUF5QixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L3dhbGxldC1wcm92aWRlcnMvZXZtV2FsbGV0UHJvdmlkZXIuanM/ODdkYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIFRPRE86IEltcHJvdmUgdHlwZSBzYWZldHlcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkgKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXZtV2FsbGV0UHJvdmlkZXIgPSB2b2lkIDA7XG5jb25zdCB3YWxsZXRQcm92aWRlcl8xID0gcmVxdWlyZShcIi4vd2FsbGV0UHJvdmlkZXJcIik7XG4vKipcbiAqIEV2bVdhbGxldFByb3ZpZGVyIGlzIHRoZSBhYnN0cmFjdCBiYXNlIGNsYXNzIGZvciBhbGwgRVZNIHdhbGxldCBwcm92aWRlcnMuXG4gKlxuICogQGFic3RyYWN0XG4gKi9cbmNsYXNzIEV2bVdhbGxldFByb3ZpZGVyIGV4dGVuZHMgd2FsbGV0UHJvdmlkZXJfMS5XYWxsZXRQcm92aWRlciB7XG59XG5leHBvcnRzLkV2bVdhbGxldFByb3ZpZGVyID0gRXZtV2FsbGV0UHJvdmlkZXI7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJFdm1XYWxsZXRQcm92aWRlciIsIndhbGxldFByb3ZpZGVyXzEiLCJyZXF1aXJlIiwiV2FsbGV0UHJvdmlkZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/wallet-providers/evmWalletProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/wallet-providers/index.js":
/*!*****************************************************!*\
  !*** ../../agentkit/dist/wallet-providers/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./walletProvider */ \"(rsc)/../../agentkit/dist/wallet-providers/walletProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./evmWalletProvider */ \"(rsc)/../../agentkit/dist/wallet-providers/evmWalletProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./viemWalletProvider */ \"(rsc)/../../agentkit/dist/wallet-providers/viemWalletProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./cdpWalletProvider */ \"(rsc)/../../agentkit/dist/wallet-providers/cdpWalletProvider.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC93YWxsZXQtcHJvdmlkZXJzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQixJQUFJRyxPQUFPUCxPQUFPUSx3QkFBd0IsQ0FBQ0wsR0FBR0M7SUFDOUMsSUFBSSxDQUFDRyxRQUFTLFVBQVNBLE9BQU8sQ0FBQ0osRUFBRU0sVUFBVSxHQUFHRixLQUFLRyxRQUFRLElBQUlILEtBQUtJLFlBQVksR0FBRztRQUNqRkosT0FBTztZQUFFSyxZQUFZO1lBQU1DLEtBQUs7Z0JBQWEsT0FBT1YsQ0FBQyxDQUFDQyxFQUFFO1lBQUU7UUFBRTtJQUM5RDtJQUNBSixPQUFPYyxjQUFjLENBQUNaLEdBQUdHLElBQUlFO0FBQ2pDLElBQU0sU0FBU0wsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSVcsZUFBZSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFlBQVksSUFBSyxTQUFTWixDQUFDLEVBQUVhLFFBQU87SUFDakUsSUFBSyxJQUFJQyxLQUFLZCxFQUFHLElBQUljLE1BQU0sYUFBYSxDQUFDakIsT0FBT2tCLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNKLFVBQVNDLElBQUlsQixnQkFBZ0JpQixVQUFTYixHQUFHYztBQUMzSDtBQUNBakIsOENBQTZDO0lBQUVxQixPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdETixhQUFhTyxtQkFBT0EsQ0FBQyxzRkFBa0IsR0FBR047QUFDMUNELGFBQWFPLG1CQUFPQSxDQUFDLDRGQUFxQixHQUFHTjtBQUM3Q0QsYUFBYU8sbUJBQU9BLENBQUMsOEZBQXNCLEdBQUdOO0FBQzlDRCxhQUFhTyxtQkFBT0EsQ0FBQyw0RkFBcUIsR0FBR04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY29pbmJhc2UvY2RwLWxhbmdjaGFpbi1jaGF0Ym90LWV4YW1wbGUvLi4vLi4vYWdlbnRraXQvZGlzdC93YWxsZXQtcHJvdmlkZXJzL2luZGV4LmpzP2IwOTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi93YWxsZXRQcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXZtV2FsbGV0UHJvdmlkZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3ZpZW1XYWxsZXRQcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY2RwV2FsbGV0UHJvdmlkZXJcIiksIGV4cG9ydHMpO1xuIl0sIm5hbWVzIjpbIl9fY3JlYXRlQmluZGluZyIsIk9iamVjdCIsImNyZWF0ZSIsIm8iLCJtIiwiayIsImsyIiwidW5kZWZpbmVkIiwiZGVzYyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIl9fZXNNb2R1bGUiLCJ3cml0YWJsZSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXQiLCJkZWZpbmVQcm9wZXJ0eSIsIl9fZXhwb3J0U3RhciIsImV4cG9ydHMiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwidmFsdWUiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/wallet-providers/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/wallet-providers/viemWalletProvider.js":
/*!******************************************************************!*\
  !*** ../../agentkit/dist/wallet-providers/viemWalletProvider.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// TODO: Improve type safety\n/* eslint-disable @typescript-eslint/no-explicit-any */ var __classPrivateFieldSet = (void 0) && (void 0).__classPrivateFieldSet || function(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = (void 0) && (void 0).__classPrivateFieldGet || function(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ViemWalletProvider_walletClient, _ViemWalletProvider_publicClient;\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ViemWalletProvider = void 0;\nconst viem_1 = __webpack_require__(/*! viem */ \"(rsc)/../../../node_modules/viem/_cjs/index.js\");\nconst evmWalletProvider_1 = __webpack_require__(/*! ./evmWalletProvider */ \"(rsc)/../../agentkit/dist/wallet-providers/evmWalletProvider.js\");\nconst network_1 = __webpack_require__(/*! ../network/network */ \"(rsc)/../../agentkit/dist/network/network.js\");\n/**\n * A wallet provider that uses the Viem library.\n */ class ViemWalletProvider extends evmWalletProvider_1.EvmWalletProvider {\n    /**\n     * Constructs a new ViemWalletProvider.\n     *\n     * @param walletClient - The wallet client.\n     */ constructor(walletClient){\n        super();\n        _ViemWalletProvider_walletClient.set(this, void 0);\n        _ViemWalletProvider_publicClient.set(this, void 0);\n        __classPrivateFieldSet(this, _ViemWalletProvider_walletClient, walletClient, \"f\");\n        __classPrivateFieldSet(this, _ViemWalletProvider_publicClient, (0, viem_1.createPublicClient)({\n            chain: walletClient.chain,\n            transport: (0, viem_1.http)()\n        }), \"f\");\n    }\n    /**\n     * Signs a message.\n     *\n     * @param message - The message to sign.\n     * @returns The signed message.\n     */ async signMessage(message) {\n        const account = __classPrivateFieldGet(this, _ViemWalletProvider_walletClient, \"f\").account;\n        if (!account) {\n            throw new Error(\"Account not found\");\n        }\n        return __classPrivateFieldGet(this, _ViemWalletProvider_walletClient, \"f\").signMessage({\n            account,\n            message\n        });\n    }\n    /**\n     * Signs a typed data object.\n     *\n     * @param typedData - The typed data object to sign.\n     * @returns The signed typed data object.\n     */ async signTypedData(typedData) {\n        return __classPrivateFieldGet(this, _ViemWalletProvider_walletClient, \"f\").signTypedData({\n            account: __classPrivateFieldGet(this, _ViemWalletProvider_walletClient, \"f\").account,\n            domain: typedData.domain,\n            types: typedData.types,\n            primaryType: typedData.primaryType,\n            message: typedData.message\n        });\n    }\n    /**\n     * Signs a transaction.\n     *\n     * @param transaction - The transaction to sign.\n     * @returns The signed transaction.\n     */ async signTransaction(transaction) {\n        const txParams = {\n            account: __classPrivateFieldGet(this, _ViemWalletProvider_walletClient, \"f\").account,\n            to: transaction.to,\n            value: transaction.value,\n            data: transaction.data,\n            chain: __classPrivateFieldGet(this, _ViemWalletProvider_walletClient, \"f\").chain\n        };\n        return __classPrivateFieldGet(this, _ViemWalletProvider_walletClient, \"f\").signTransaction(txParams);\n    }\n    /**\n     * Sends a transaction.\n     *\n     * @param transaction - The transaction to send.\n     * @returns The hash of the transaction.\n     */ async sendTransaction(transaction) {\n        const account = __classPrivateFieldGet(this, _ViemWalletProvider_walletClient, \"f\").account;\n        if (!account) {\n            throw new Error(\"Account not found\");\n        }\n        const chain = __classPrivateFieldGet(this, _ViemWalletProvider_walletClient, \"f\").chain;\n        if (!chain) {\n            throw new Error(\"Chain not found\");\n        }\n        const txParams = {\n            account: account,\n            chain: chain,\n            data: transaction.data,\n            to: transaction.to,\n            value: transaction.value\n        };\n        return __classPrivateFieldGet(this, _ViemWalletProvider_walletClient, \"f\").sendTransaction(txParams);\n    }\n    /**\n     * Gets the address of the wallet.\n     *\n     * @returns The address of the wallet.\n     */ getAddress() {\n        return __classPrivateFieldGet(this, _ViemWalletProvider_walletClient, \"f\").account?.address ?? \"\";\n    }\n    /**\n     * Gets the network of the wallet.\n     *\n     * @returns The network of the wallet.\n     */ getNetwork() {\n        return {\n            protocolFamily: \"evm\",\n            chainId: String(__classPrivateFieldGet(this, _ViemWalletProvider_walletClient, \"f\").chain.id),\n            networkId: network_1.CHAIN_ID_TO_NETWORK_ID[__classPrivateFieldGet(this, _ViemWalletProvider_walletClient, \"f\").chain.id]\n        };\n    }\n    /**\n     * Gets the name of the wallet provider.\n     *\n     * @returns The name of the wallet provider.\n     */ getName() {\n        return \"viem_wallet_provider\";\n    }\n    /**\n     * Gets the balance of the wallet.\n     *\n     * @returns The balance of the wallet.\n     */ async getBalance() {\n        const account = __classPrivateFieldGet(this, _ViemWalletProvider_walletClient, \"f\").account;\n        if (!account) {\n            throw new Error(\"Account not found\");\n        }\n        return __classPrivateFieldGet(this, _ViemWalletProvider_publicClient, \"f\").getBalance({\n            address: account.address\n        });\n    }\n    /**\n     * Waits for a transaction receipt.\n     *\n     * @param txHash - The hash of the transaction to wait for.\n     * @returns The transaction receipt.\n     */ async waitForTransactionReceipt(txHash) {\n        return await __classPrivateFieldGet(this, _ViemWalletProvider_publicClient, \"f\").waitForTransactionReceipt({\n            hash: txHash\n        });\n    }\n    /**\n     * Reads a contract.\n     *\n     * @param params - The parameters to read the contract.\n     * @returns The response from the contract.\n     */ async readContract(params) {\n        return __classPrivateFieldGet(this, _ViemWalletProvider_publicClient, \"f\").readContract(params);\n    }\n    /**\n     * Transfer the native asset of the network.\n     *\n     * @param to - The destination address.\n     * @param value - The amount to transfer in whole units (e.g. ETH)\n     * @returns The transaction hash.\n     */ async nativeTransfer(to, value) {\n        const atomicAmount = (0, viem_1.parseEther)(value);\n        const tx = await this.sendTransaction({\n            to: to,\n            value: atomicAmount\n        });\n        const receipt = await this.waitForTransactionReceipt(tx);\n        if (!receipt) {\n            throw new Error(\"Transaction failed\");\n        }\n        return receipt.transactionHash;\n    }\n}\nexports.ViemWalletProvider = ViemWalletProvider;\n_ViemWalletProvider_walletClient = new WeakMap(), _ViemWalletProvider_publicClient = new WeakMap();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/wallet-providers/viemWalletProvider.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/dist/wallet-providers/walletProvider.js":
/*!**************************************************************!*\
  !*** ../../agentkit/dist/wallet-providers/walletProvider.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.WalletProvider = void 0;\nconst analytics_1 = __webpack_require__(/*! ../analytics */ \"(rsc)/../../agentkit/dist/analytics/index.js\");\n/**\n * WalletProvider is the abstract base class for all wallet providers.\n *\n * @abstract\n */ class WalletProvider {\n    /**\n     * Initializes the wallet provider.\n     */ constructor(){\n        // Wait for the next tick to ensure child class is initialized\n        Promise.resolve().then(()=>{\n            this.trackInitialization();\n        });\n    }\n    /**\n     * Tracks the initialization of the wallet provider.\n     */ trackInitialization() {\n        try {\n            (0, analytics_1.sendAnalyticsEvent)({\n                name: \"agent_initialization\",\n                action: \"initialize_wallet_provider\",\n                component: \"wallet_provider\",\n                wallet_provider: this.getName(),\n                wallet_address: this.getAddress(),\n                network_id: this.getNetwork().networkId,\n                chain_id: this.getNetwork().chainId,\n                protocol_family: this.getNetwork().protocolFamily\n            });\n        } catch (error) {\n            console.warn(\"Failed to track wallet provider initialization:\", error);\n        }\n    }\n}\nexports.WalletProvider = WalletProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vYWdlbnRraXQvZGlzdC93YWxsZXQtcHJvdmlkZXJzL3dhbGxldFByb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxzQkFBc0IsR0FBRyxLQUFLO0FBQzlCLE1BQU1HLGNBQWNDLG1CQUFPQSxDQUFDLGtFQUFjO0FBQzFDOzs7O0NBSUMsR0FDRCxNQUFNRjtJQUNGOztLQUVDLEdBQ0RHLGFBQWM7UUFDViw4REFBOEQ7UUFDOURDLFFBQVFDLE9BQU8sR0FBR0MsSUFBSSxDQUFDO1lBQ25CLElBQUksQ0FBQ0MsbUJBQW1CO1FBQzVCO0lBQ0o7SUFDQTs7S0FFQyxHQUNEQSxzQkFBc0I7UUFDbEIsSUFBSTtZQUNDLElBQUdOLFlBQVlPLGtCQUFrQixFQUFFO2dCQUNoQ0MsTUFBTTtnQkFDTkMsUUFBUTtnQkFDUkMsV0FBVztnQkFDWEMsaUJBQWlCLElBQUksQ0FBQ0MsT0FBTztnQkFDN0JDLGdCQUFnQixJQUFJLENBQUNDLFVBQVU7Z0JBQy9CQyxZQUFZLElBQUksQ0FBQ0MsVUFBVSxHQUFHQyxTQUFTO2dCQUN2Q0MsVUFBVSxJQUFJLENBQUNGLFVBQVUsR0FBR0csT0FBTztnQkFDbkNDLGlCQUFpQixJQUFJLENBQUNKLFVBQVUsR0FBR0ssY0FBYztZQUNyRDtRQUNKLEVBQ0EsT0FBT0MsT0FBTztZQUNWQyxRQUFRQyxJQUFJLENBQUMsbURBQW1ERjtRQUNwRTtJQUNKO0FBQ0o7QUFDQXpCLHNCQUFzQixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9hZ2VudGtpdC9kaXN0L3dhbGxldC1wcm92aWRlcnMvd2FsbGV0UHJvdmlkZXIuanM/MWMzNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuV2FsbGV0UHJvdmlkZXIgPSB2b2lkIDA7XG5jb25zdCBhbmFseXRpY3NfMSA9IHJlcXVpcmUoXCIuLi9hbmFseXRpY3NcIik7XG4vKipcbiAqIFdhbGxldFByb3ZpZGVyIGlzIHRoZSBhYnN0cmFjdCBiYXNlIGNsYXNzIGZvciBhbGwgd2FsbGV0IHByb3ZpZGVycy5cbiAqXG4gKiBAYWJzdHJhY3RcbiAqL1xuY2xhc3MgV2FsbGV0UHJvdmlkZXIge1xuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemVzIHRoZSB3YWxsZXQgcHJvdmlkZXIuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIC8vIFdhaXQgZm9yIHRoZSBuZXh0IHRpY2sgdG8gZW5zdXJlIGNoaWxkIGNsYXNzIGlzIGluaXRpYWxpemVkXG4gICAgICAgIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy50cmFja0luaXRpYWxpemF0aW9uKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUcmFja3MgdGhlIGluaXRpYWxpemF0aW9uIG9mIHRoZSB3YWxsZXQgcHJvdmlkZXIuXG4gICAgICovXG4gICAgdHJhY2tJbml0aWFsaXphdGlvbigpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICgwLCBhbmFseXRpY3NfMS5zZW5kQW5hbHl0aWNzRXZlbnQpKHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcImFnZW50X2luaXRpYWxpemF0aW9uXCIsXG4gICAgICAgICAgICAgICAgYWN0aW9uOiBcImluaXRpYWxpemVfd2FsbGV0X3Byb3ZpZGVyXCIsXG4gICAgICAgICAgICAgICAgY29tcG9uZW50OiBcIndhbGxldF9wcm92aWRlclwiLFxuICAgICAgICAgICAgICAgIHdhbGxldF9wcm92aWRlcjogdGhpcy5nZXROYW1lKCksXG4gICAgICAgICAgICAgICAgd2FsbGV0X2FkZHJlc3M6IHRoaXMuZ2V0QWRkcmVzcygpLFxuICAgICAgICAgICAgICAgIG5ldHdvcmtfaWQ6IHRoaXMuZ2V0TmV0d29yaygpLm5ldHdvcmtJZCxcbiAgICAgICAgICAgICAgICBjaGFpbl9pZDogdGhpcy5nZXROZXR3b3JrKCkuY2hhaW5JZCxcbiAgICAgICAgICAgICAgICBwcm90b2NvbF9mYW1pbHk6IHRoaXMuZ2V0TmV0d29yaygpLnByb3RvY29sRmFtaWx5LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJGYWlsZWQgdG8gdHJhY2sgd2FsbGV0IHByb3ZpZGVyIGluaXRpYWxpemF0aW9uOlwiLCBlcnJvcik7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLldhbGxldFByb3ZpZGVyID0gV2FsbGV0UHJvdmlkZXI7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJXYWxsZXRQcm92aWRlciIsImFuYWx5dGljc18xIiwicmVxdWlyZSIsImNvbnN0cnVjdG9yIiwiUHJvbWlzZSIsInJlc29sdmUiLCJ0aGVuIiwidHJhY2tJbml0aWFsaXphdGlvbiIsInNlbmRBbmFseXRpY3NFdmVudCIsIm5hbWUiLCJhY3Rpb24iLCJjb21wb25lbnQiLCJ3YWxsZXRfcHJvdmlkZXIiLCJnZXROYW1lIiwid2FsbGV0X2FkZHJlc3MiLCJnZXRBZGRyZXNzIiwibmV0d29ya19pZCIsImdldE5ldHdvcmsiLCJuZXR3b3JrSWQiLCJjaGFpbl9pZCIsImNoYWluSWQiLCJwcm90b2NvbF9mYW1pbHkiLCJwcm90b2NvbEZhbWlseSIsImVycm9yIiwiY29uc29sZSIsIndhcm4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../agentkit/dist/wallet-providers/walletProvider.js\n");

/***/ }),

/***/ "(rsc)/./src/app/api/chat/route.ts":
/*!***********************************!*\
  !*** ./src/app/api/chat/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/../../../node_modules/next/dist/api/server.js\");\n/* harmony import */ var _services_chatbot__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/services/chatbot */ \"(rsc)/./src/services/chatbot.ts\");\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/../../../node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _lib_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/storage */ \"(rsc)/./src/lib/storage.ts\");\n\n\n\n\nasync function POST(request) {\n    console.log(\"API: Starting chat request...\");\n    try {\n        const body = await request.json();\n        console.log(\"API: Received message:\", body);\n        console.log(\"API: Initializing agent...\");\n        const { agent, config } = await (0,_services_chatbot__WEBPACK_IMPORTED_MODULE_1__.initializeAgent)();\n        console.log(\"API: Agent initialized successfully\");\n        console.log(\"API: Invoking agent with message...\");\n        const response = await agent.invoke({\n            messages: [\n                new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_2__.HumanMessage(body.message)\n            ]\n        }, config);\n        console.log(\"API: Agent response:\", response);\n        // Extract the actual response content\n        const aiMessage = response.messages[response.messages.length - 1];\n        const content = aiMessage.content;\n        // Check if there are any tool calls to execute\n        if (aiMessage.tool_calls?.length > 0) {\n            for (const toolCall of aiMessage.tool_calls){\n                if (toolCall.name === \"schedule_task\") {\n                    const args = JSON.parse(toolCall.arguments);\n                    const storage = _lib_storage__WEBPACK_IMPORTED_MODULE_3__.StorageService.getInstance();\n                    await storage.addTimeBlock({\n                        _id: crypto.randomUUID(),\n                        title: args.title || \"High-Priority Meeting\",\n                        startTime: new Date(args.startTime || body.message).toISOString(),\n                        endTime: new Date(new Date(args.startTime || body.message).getTime() + 60 * 60 * 1000).toISOString(),\n                        priority: args.priority || \"urgent-important\",\n                        delegatable: args.delegatable || false,\n                        status: \"scheduled\",\n                        created_at: new Date().toISOString(),\n                        updated_at: new Date().toISOString()\n                    });\n                }\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            response: content,\n            timestamp: new Date().toISOString()\n        });\n    } catch (error) {\n        console.error(\"API Error:\", {\n            name: error.name,\n            message: error.message,\n            stack: error.stack,\n            details: error.details || \"No additional details\"\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error instanceof Error ? error.message : \"An unknown error occurred\",\n            timestamp: new Date().toISOString()\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9jaGF0L3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTJDO0FBQ1U7QUFDRztBQUNUO0FBRXhDLGVBQWVJLEtBQUtDLE9BQWdCO0lBQ3pDQyxRQUFRQyxHQUFHLENBQUM7SUFFWixJQUFJO1FBQ0YsTUFBTUMsT0FBTyxNQUFNSCxRQUFRSSxJQUFJO1FBQy9CSCxRQUFRQyxHQUFHLENBQUMsMEJBQTBCQztRQUV0Q0YsUUFBUUMsR0FBRyxDQUFDO1FBQ1osTUFBTSxFQUFFRyxLQUFLLEVBQUVDLE1BQU0sRUFBRSxHQUFHLE1BQU1WLGtFQUFlQTtRQUMvQ0ssUUFBUUMsR0FBRyxDQUFDO1FBRVpELFFBQVFDLEdBQUcsQ0FBQztRQUNaLE1BQU1LLFdBQVcsTUFBTUYsTUFBTUcsTUFBTSxDQUFDO1lBQ2xDQyxVQUFVO2dCQUFDLElBQUlaLGtFQUFZQSxDQUFDTSxLQUFLTyxPQUFPO2FBQUU7UUFDNUMsR0FBR0o7UUFDSEwsUUFBUUMsR0FBRyxDQUFDLHdCQUF3Qks7UUFFcEMsc0NBQXNDO1FBQ3RDLE1BQU1JLFlBQVlKLFNBQVNFLFFBQVEsQ0FBQ0YsU0FBU0UsUUFBUSxDQUFDRyxNQUFNLEdBQUcsRUFBRTtRQUNqRSxNQUFNQyxVQUFVRixVQUFVRSxPQUFPO1FBRWpDLCtDQUErQztRQUMvQyxJQUFJRixVQUFVRyxVQUFVLEVBQUVGLFNBQVMsR0FBRztZQUNwQyxLQUFLLE1BQU1HLFlBQVlKLFVBQVVHLFVBQVUsQ0FBRTtnQkFDM0MsSUFBSUMsU0FBU0MsSUFBSSxLQUFLLGlCQUFpQjtvQkFDckMsTUFBTUMsT0FBT0MsS0FBS0MsS0FBSyxDQUFDSixTQUFTSyxTQUFTO29CQUMxQyxNQUFNQyxVQUFVdkIsd0RBQWNBLENBQUN3QixXQUFXO29CQUMxQyxNQUFNRCxRQUFRRSxZQUFZLENBQUM7d0JBQ3pCQyxLQUFLQyxPQUFPQyxVQUFVO3dCQUN0QkMsT0FBT1YsS0FBS1UsS0FBSyxJQUFJO3dCQUNyQkMsV0FBVyxJQUFJQyxLQUFLWixLQUFLVyxTQUFTLElBQUl6QixLQUFLTyxPQUFPLEVBQUVvQixXQUFXO3dCQUMvREMsU0FBUyxJQUFJRixLQUFLLElBQUlBLEtBQUtaLEtBQUtXLFNBQVMsSUFBSXpCLEtBQUtPLE9BQU8sRUFBRXNCLE9BQU8sS0FBSyxLQUFLLEtBQUssTUFBTUYsV0FBVzt3QkFDbEdHLFVBQVVoQixLQUFLZ0IsUUFBUSxJQUFJO3dCQUMzQkMsYUFBYWpCLEtBQUtpQixXQUFXLElBQUk7d0JBQ2pDQyxRQUFRO3dCQUNSQyxZQUFZLElBQUlQLE9BQU9DLFdBQVc7d0JBQ2xDTyxZQUFZLElBQUlSLE9BQU9DLFdBQVc7b0JBQ3BDO2dCQUNGO1lBQ0Y7UUFDRjtRQUVBLE9BQU9uQyxxREFBWUEsQ0FBQ1MsSUFBSSxDQUFDO1lBQ3ZCa0MsU0FBUztZQUNUL0IsVUFBVU07WUFDVjBCLFdBQVcsSUFBSVYsT0FBT0MsV0FBVztRQUNuQztJQUNGLEVBQUUsT0FBT1UsT0FBTztRQUNkdkMsUUFBUXVDLEtBQUssQ0FBQyxjQUFjO1lBQzFCeEIsTUFBTXdCLE1BQU14QixJQUFJO1lBQ2hCTixTQUFTOEIsTUFBTTlCLE9BQU87WUFDdEIrQixPQUFPRCxNQUFNQyxLQUFLO1lBQ2xCQyxTQUFTRixNQUFNRSxPQUFPLElBQUk7UUFDNUI7UUFFQSxPQUFPL0MscURBQVlBLENBQUNTLElBQUksQ0FBQztZQUN2QmtDLFNBQVM7WUFDVEUsT0FBT0EsaUJBQWlCRyxRQUFRSCxNQUFNOUIsT0FBTyxHQUFHO1lBQ2hENkIsV0FBVyxJQUFJVixPQUFPQyxXQUFXO1FBQ25DLEdBQUc7WUFDREssUUFBUTtRQUNWO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uL3NyYy9hcHAvYXBpL2NoYXQvcm91dGUudHM/NDZiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyBpbml0aWFsaXplQWdlbnQgfSBmcm9tICdAL3NlcnZpY2VzL2NoYXRib3QnO1xuaW1wb3J0IHsgSHVtYW5NZXNzYWdlIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9tZXNzYWdlc1wiO1xuaW1wb3J0IHsgU3RvcmFnZVNlcnZpY2UgfSBmcm9tICdAL2xpYi9zdG9yYWdlJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdDogUmVxdWVzdCkge1xuICBjb25zb2xlLmxvZygnQVBJOiBTdGFydGluZyBjaGF0IHJlcXVlc3QuLi4nKTtcbiAgXG4gIHRyeSB7XG4gICAgY29uc3QgYm9keSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xuICAgIGNvbnNvbGUubG9nKCdBUEk6IFJlY2VpdmVkIG1lc3NhZ2U6JywgYm9keSk7XG5cbiAgICBjb25zb2xlLmxvZygnQVBJOiBJbml0aWFsaXppbmcgYWdlbnQuLi4nKTtcbiAgICBjb25zdCB7IGFnZW50LCBjb25maWcgfSA9IGF3YWl0IGluaXRpYWxpemVBZ2VudCgpO1xuICAgIGNvbnNvbGUubG9nKCdBUEk6IEFnZW50IGluaXRpYWxpemVkIHN1Y2Nlc3NmdWxseScpO1xuXG4gICAgY29uc29sZS5sb2coJ0FQSTogSW52b2tpbmcgYWdlbnQgd2l0aCBtZXNzYWdlLi4uJyk7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhZ2VudC5pbnZva2Uoe1xuICAgICAgbWVzc2FnZXM6IFtuZXcgSHVtYW5NZXNzYWdlKGJvZHkubWVzc2FnZSldXG4gICAgfSwgY29uZmlnKTtcbiAgICBjb25zb2xlLmxvZygnQVBJOiBBZ2VudCByZXNwb25zZTonLCByZXNwb25zZSk7XG5cbiAgICAvLyBFeHRyYWN0IHRoZSBhY3R1YWwgcmVzcG9uc2UgY29udGVudFxuICAgIGNvbnN0IGFpTWVzc2FnZSA9IHJlc3BvbnNlLm1lc3NhZ2VzW3Jlc3BvbnNlLm1lc3NhZ2VzLmxlbmd0aCAtIDFdO1xuICAgIGNvbnN0IGNvbnRlbnQgPSBhaU1lc3NhZ2UuY29udGVudDtcblxuICAgIC8vIENoZWNrIGlmIHRoZXJlIGFyZSBhbnkgdG9vbCBjYWxscyB0byBleGVjdXRlXG4gICAgaWYgKGFpTWVzc2FnZS50b29sX2NhbGxzPy5sZW5ndGggPiAwKSB7XG4gICAgICBmb3IgKGNvbnN0IHRvb2xDYWxsIG9mIGFpTWVzc2FnZS50b29sX2NhbGxzKSB7XG4gICAgICAgIGlmICh0b29sQ2FsbC5uYW1lID09PSAnc2NoZWR1bGVfdGFzaycpIHtcbiAgICAgICAgICBjb25zdCBhcmdzID0gSlNPTi5wYXJzZSh0b29sQ2FsbC5hcmd1bWVudHMpO1xuICAgICAgICAgIGNvbnN0IHN0b3JhZ2UgPSBTdG9yYWdlU2VydmljZS5nZXRJbnN0YW5jZSgpO1xuICAgICAgICAgIGF3YWl0IHN0b3JhZ2UuYWRkVGltZUJsb2NrKHtcbiAgICAgICAgICAgIF9pZDogY3J5cHRvLnJhbmRvbVVVSUQoKSxcbiAgICAgICAgICAgIHRpdGxlOiBhcmdzLnRpdGxlIHx8IFwiSGlnaC1Qcmlvcml0eSBNZWV0aW5nXCIsXG4gICAgICAgICAgICBzdGFydFRpbWU6IG5ldyBEYXRlKGFyZ3Muc3RhcnRUaW1lIHx8IGJvZHkubWVzc2FnZSkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgICAgIGVuZFRpbWU6IG5ldyBEYXRlKG5ldyBEYXRlKGFyZ3Muc3RhcnRUaW1lIHx8IGJvZHkubWVzc2FnZSkuZ2V0VGltZSgpICsgNjAgKiA2MCAqIDEwMDApLnRvSVNPU3RyaW5nKCksXG4gICAgICAgICAgICBwcmlvcml0eTogYXJncy5wcmlvcml0eSB8fCBcInVyZ2VudC1pbXBvcnRhbnRcIixcbiAgICAgICAgICAgIGRlbGVnYXRhYmxlOiBhcmdzLmRlbGVnYXRhYmxlIHx8IGZhbHNlLFxuICAgICAgICAgICAgc3RhdHVzOiAnc2NoZWR1bGVkJyxcbiAgICAgICAgICAgIGNyZWF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgICAgIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgXG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgcmVzcG9uc2U6IGNvbnRlbnQsXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0FQSSBFcnJvcjonLCB7XG4gICAgICBuYW1lOiBlcnJvci5uYW1lLFxuICAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSxcbiAgICAgIHN0YWNrOiBlcnJvci5zdGFjayxcbiAgICAgIGRldGFpbHM6IGVycm9yLmRldGFpbHMgfHwgJ05vIGFkZGl0aW9uYWwgZGV0YWlscydcbiAgICB9KTtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdBbiB1bmtub3duIGVycm9yIG9jY3VycmVkJyxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgfSwgeyBcbiAgICAgIHN0YXR1czogNTAwIFxuICAgIH0pO1xuICB9XG59ICJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJpbml0aWFsaXplQWdlbnQiLCJIdW1hbk1lc3NhZ2UiLCJTdG9yYWdlU2VydmljZSIsIlBPU1QiLCJyZXF1ZXN0IiwiY29uc29sZSIsImxvZyIsImJvZHkiLCJqc29uIiwiYWdlbnQiLCJjb25maWciLCJyZXNwb25zZSIsImludm9rZSIsIm1lc3NhZ2VzIiwibWVzc2FnZSIsImFpTWVzc2FnZSIsImxlbmd0aCIsImNvbnRlbnQiLCJ0b29sX2NhbGxzIiwidG9vbENhbGwiLCJuYW1lIiwiYXJncyIsIkpTT04iLCJwYXJzZSIsImFyZ3VtZW50cyIsInN0b3JhZ2UiLCJnZXRJbnN0YW5jZSIsImFkZFRpbWVCbG9jayIsIl9pZCIsImNyeXB0byIsInJhbmRvbVVVSUQiLCJ0aXRsZSIsInN0YXJ0VGltZSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImVuZFRpbWUiLCJnZXRUaW1lIiwicHJpb3JpdHkiLCJkZWxlZ2F0YWJsZSIsInN0YXR1cyIsImNyZWF0ZWRfYXQiLCJ1cGRhdGVkX2F0Iiwic3VjY2VzcyIsInRpbWVzdGFtcCIsImVycm9yIiwic3RhY2siLCJkZXRhaWxzIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/chat/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/crypto.ts":
/*!***************************!*\
  !*** ./src/lib/crypto.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decrypt: () => (/* binding */ decrypt),\n/* harmony export */   encrypt: () => (/* binding */ encrypt),\n/* harmony export */   secureDecrypt: () => (/* binding */ secureDecrypt),\n/* harmony export */   secureEncrypt: () => (/* binding */ secureEncrypt)\n/* harmony export */ });\n// Simple encryption/decryption for local storage\n// Note: This is a basic implementation. For production, use more secure methods\nconst ENCRYPTION_KEY = \"your-secret-key-here\" || 0;\nfunction encrypt(text) {\n    if (true) return text;\n    try {\n        // Simple XOR encryption for demo purposes\n        const textToChars = (text)=>text.split(\"\").map((c)=>c.charCodeAt(0));\n        const byteHex = (n)=>(\"0\" + Number(n).toString(16)).substr(-2);\n        const applySaltToChar = (code)=>textToChars(ENCRYPTION_KEY).reduce((a, b)=>a ^ b, code);\n        return text.split(\"\").map(textToChars).map(applySaltToChar).map(byteHex).join(\"\");\n    } catch (error) {\n        console.error(\"Encryption failed:\", error);\n        return text;\n    }\n}\nfunction decrypt(encoded) {\n    if (true) return encoded;\n    try {\n        // Simple XOR decryption for demo purposes\n        const textToChars = (text)=>text.split(\"\").map((c)=>c.charCodeAt(0));\n        const applySaltToChar = (code)=>textToChars(ENCRYPTION_KEY).reduce((a, b)=>a ^ b, code);\n        return encoded.match(/.{1,2}/g).map((hex)=>parseInt(hex, 16)).map(applySaltToChar).map((charCode)=>String.fromCharCode(charCode)).join(\"\");\n    } catch (error) {\n        console.error(\"Decryption failed:\", error);\n        return encoded;\n    }\n}\n// For more secure encryption in production, use Web Crypto API:\nasync function secureEncrypt(text) {\n    if (true) return text;\n    try {\n        const encoder = new TextEncoder();\n        const data = encoder.encode(text);\n        const key = await window.crypto.subtle.importKey(\"raw\", encoder.encode(ENCRYPTION_KEY), {\n            name: \"AES-GCM\"\n        }, false, [\n            \"encrypt\"\n        ]);\n        const iv = window.crypto.getRandomValues(new Uint8Array(12));\n        const encrypted = await window.crypto.subtle.encrypt({\n            name: \"AES-GCM\",\n            iv\n        }, key, data);\n        const encryptedArray = new Uint8Array(encrypted);\n        const combined = new Uint8Array(iv.length + encryptedArray.length);\n        combined.set(iv);\n        combined.set(encryptedArray, iv.length);\n        return btoa(String.fromCharCode(...combined));\n    } catch (error) {\n        console.error(\"Secure encryption failed:\", error);\n        return text;\n    }\n}\nasync function secureDecrypt(encoded) {\n    if (true) return encoded;\n    try {\n        const combined = new Uint8Array(atob(encoded).split(\"\").map((c)=>c.charCodeAt(0)));\n        const iv = combined.slice(0, 12);\n        const data = combined.slice(12);\n        const key = await window.crypto.subtle.importKey(\"raw\", new TextEncoder().encode(ENCRYPTION_KEY), {\n            name: \"AES-GCM\"\n        }, false, [\n            \"decrypt\"\n        ]);\n        const decrypted = await window.crypto.subtle.decrypt({\n            name: \"AES-GCM\",\n            iv\n        }, key, data);\n        return new TextDecoder().decode(decrypted);\n    } catch (error) {\n        console.error(\"Secure decryption failed:\", error);\n        return encoded;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/crypto.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/storage.ts":
/*!****************************!*\
  !*** ./src/lib/storage.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StorageService: () => (/* binding */ StorageService)\n/* harmony export */ });\n/* harmony import */ var _crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./crypto */ \"(rsc)/./src/lib/crypto.ts\");\n\nconst STORAGE_KEY = \"calendar_presets\";\nclass StorageService {\n    constructor(){\n        this.data = this.load();\n    }\n    static getInstance() {\n        if (!StorageService.instance) {\n            StorageService.instance = new StorageService();\n        }\n        return StorageService.instance;\n    }\n    load() {\n        if (true) return this.getDefaultData();\n        const encrypted = localStorage.getItem(STORAGE_KEY);\n        if (!encrypted) return this.getDefaultData();\n        try {\n            const decrypted = (0,_crypto__WEBPACK_IMPORTED_MODULE_0__.decrypt)(encrypted);\n            return JSON.parse(decrypted);\n        } catch (error) {\n            console.error(\"Failed to load data:\", error);\n            return this.getDefaultData();\n        }\n    }\n    save() {\n        if (true) return;\n        const encrypted = (0,_crypto__WEBPACK_IMPORTED_MODULE_0__.encrypt)(JSON.stringify(this.data));\n        localStorage.setItem(STORAGE_KEY, encrypted);\n    }\n    getDefaultData() {\n        return {\n            timeBlocks: [],\n            hourlyRate: 100,\n            delegationServices: []\n        };\n    }\n    getTimeBlocks() {\n        return this.data.timeBlocks;\n    }\n    addTimeBlock(block) {\n        this.data.timeBlocks.push(block);\n        this.save();\n    }\n    updateTimeBlock(block) {\n        const index = this.data.timeBlocks.findIndex((b)=>b._id === block._id);\n        if (index !== -1) {\n            this.data.timeBlocks[index] = block;\n            this.save();\n        }\n    }\n    deleteTimeBlock(id) {\n        this.data.timeBlocks = this.data.timeBlocks.filter((b)=>b._id !== id);\n        this.save();\n    }\n    exportData() {\n        return JSON.stringify(this.data, null, 2);\n    }\n    importData(jsonData) {\n        try {\n            const parsed = JSON.parse(jsonData);\n            // Validate against schema here\n            this.data = parsed;\n            this.save();\n        } catch (error) {\n            console.error(\"Failed to import data:\", error);\n            throw new Error(\"Invalid data format\");\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3N0b3JhZ2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDNEM7QUFFNUMsTUFBTUUsY0FBYztBQUViLE1BQU1DO0lBSVgsYUFBc0I7UUFDcEIsSUFBSSxDQUFDQyxJQUFJLEdBQUcsSUFBSSxDQUFDQyxJQUFJO0lBQ3ZCO0lBRUEsT0FBT0MsY0FBOEI7UUFDbkMsSUFBSSxDQUFDSCxlQUFlSSxRQUFRLEVBQUU7WUFDNUJKLGVBQWVJLFFBQVEsR0FBRyxJQUFJSjtRQUNoQztRQUNBLE9BQU9BLGVBQWVJLFFBQVE7SUFDaEM7SUFFUUYsT0FBMkI7UUFDakMsSUFBSSxJQUFrQixFQUFhLE9BQU8sSUFBSSxDQUFDRyxjQUFjO1FBRTdELE1BQU1DLFlBQVlDLGFBQWFDLE9BQU8sQ0FBQ1Q7UUFDdkMsSUFBSSxDQUFDTyxXQUFXLE9BQU8sSUFBSSxDQUFDRCxjQUFjO1FBRTFDLElBQUk7WUFDRixNQUFNSSxZQUFZWCxnREFBT0EsQ0FBQ1E7WUFDMUIsT0FBT0ksS0FBS0MsS0FBSyxDQUFDRjtRQUNwQixFQUFFLE9BQU9HLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLHdCQUF3QkE7WUFDdEMsT0FBTyxJQUFJLENBQUNQLGNBQWM7UUFDNUI7SUFDRjtJQUVRUyxPQUFhO1FBQ25CLElBQUksSUFBa0IsRUFBYTtRQUVuQyxNQUFNUixZQUFZVCxnREFBT0EsQ0FBQ2EsS0FBS0ssU0FBUyxDQUFDLElBQUksQ0FBQ2QsSUFBSTtRQUNsRE0sYUFBYVMsT0FBTyxDQUFDakIsYUFBYU87SUFDcEM7SUFFUUQsaUJBQXFDO1FBQzNDLE9BQU87WUFDTFksWUFBWSxFQUFFO1lBQ2RDLFlBQVk7WUFDWkMsb0JBQW9CLEVBQUU7UUFDeEI7SUFDRjtJQUVBQyxnQkFBaUM7UUFDL0IsT0FBTyxJQUFJLENBQUNuQixJQUFJLENBQUNnQixVQUFVO0lBQzdCO0lBRUFJLGFBQWFDLEtBQW9CLEVBQVE7UUFDdkMsSUFBSSxDQUFDckIsSUFBSSxDQUFDZ0IsVUFBVSxDQUFDTSxJQUFJLENBQUNEO1FBQzFCLElBQUksQ0FBQ1IsSUFBSTtJQUNYO0lBRUFVLGdCQUFnQkYsS0FBb0IsRUFBUTtRQUMxQyxNQUFNRyxRQUFRLElBQUksQ0FBQ3hCLElBQUksQ0FBQ2dCLFVBQVUsQ0FBQ1MsU0FBUyxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxHQUFHLEtBQUtOLE1BQU1NLEdBQUc7UUFDckUsSUFBSUgsVUFBVSxDQUFDLEdBQUc7WUFDaEIsSUFBSSxDQUFDeEIsSUFBSSxDQUFDZ0IsVUFBVSxDQUFDUSxNQUFNLEdBQUdIO1lBQzlCLElBQUksQ0FBQ1IsSUFBSTtRQUNYO0lBQ0Y7SUFFQWUsZ0JBQWdCQyxFQUFVLEVBQVE7UUFDaEMsSUFBSSxDQUFDN0IsSUFBSSxDQUFDZ0IsVUFBVSxHQUFHLElBQUksQ0FBQ2hCLElBQUksQ0FBQ2dCLFVBQVUsQ0FBQ2MsTUFBTSxDQUFDSixDQUFBQSxJQUFLQSxFQUFFQyxHQUFHLEtBQUtFO1FBQ2xFLElBQUksQ0FBQ2hCLElBQUk7SUFDWDtJQUVBa0IsYUFBcUI7UUFDbkIsT0FBT3RCLEtBQUtLLFNBQVMsQ0FBQyxJQUFJLENBQUNkLElBQUksRUFBRSxNQUFNO0lBQ3pDO0lBRUFnQyxXQUFXQyxRQUFnQixFQUFRO1FBQ2pDLElBQUk7WUFDRixNQUFNQyxTQUFTekIsS0FBS0MsS0FBSyxDQUFDdUI7WUFDMUIsK0JBQStCO1lBQy9CLElBQUksQ0FBQ2pDLElBQUksR0FBR2tDO1lBQ1osSUFBSSxDQUFDckIsSUFBSTtRQUNYLEVBQUUsT0FBT0YsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsMEJBQTBCQTtZQUN4QyxNQUFNLElBQUl3QixNQUFNO1FBQ2xCO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uL3NyYy9saWIvc3RvcmFnZS50cz9hZmU4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRpbWVCbG9ja1R5cGUsIENhbGVuZGFyUHJlc2V0VHlwZSB9IGZyb20gJy4vc2NoZW1hJztcbmltcG9ydCB7IGVuY3J5cHQsIGRlY3J5cHQgfSBmcm9tICcuL2NyeXB0byc7XG5cbmNvbnN0IFNUT1JBR0VfS0VZID0gJ2NhbGVuZGFyX3ByZXNldHMnO1xuXG5leHBvcnQgY2xhc3MgU3RvcmFnZVNlcnZpY2Uge1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogU3RvcmFnZVNlcnZpY2U7XG4gIHByaXZhdGUgZGF0YTogQ2FsZW5kYXJQcmVzZXRUeXBlO1xuXG4gIHByaXZhdGUgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5kYXRhID0gdGhpcy5sb2FkKCk7XG4gIH1cblxuICBzdGF0aWMgZ2V0SW5zdGFuY2UoKTogU3RvcmFnZVNlcnZpY2Uge1xuICAgIGlmICghU3RvcmFnZVNlcnZpY2UuaW5zdGFuY2UpIHtcbiAgICAgIFN0b3JhZ2VTZXJ2aWNlLmluc3RhbmNlID0gbmV3IFN0b3JhZ2VTZXJ2aWNlKCk7XG4gICAgfVxuICAgIHJldHVybiBTdG9yYWdlU2VydmljZS5pbnN0YW5jZTtcbiAgfVxuXG4gIHByaXZhdGUgbG9hZCgpOiBDYWxlbmRhclByZXNldFR5cGUge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuIHRoaXMuZ2V0RGVmYXVsdERhdGEoKTtcbiAgICBcbiAgICBjb25zdCBlbmNyeXB0ZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShTVE9SQUdFX0tFWSk7XG4gICAgaWYgKCFlbmNyeXB0ZWQpIHJldHVybiB0aGlzLmdldERlZmF1bHREYXRhKCk7XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgZGVjcnlwdGVkID0gZGVjcnlwdChlbmNyeXB0ZWQpO1xuICAgICAgcmV0dXJuIEpTT04ucGFyc2UoZGVjcnlwdGVkKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGxvYWQgZGF0YTonLCBlcnJvcik7XG4gICAgICByZXR1cm4gdGhpcy5nZXREZWZhdWx0RGF0YSgpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgc2F2ZSgpOiB2b2lkIHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHJldHVybjtcbiAgICBcbiAgICBjb25zdCBlbmNyeXB0ZWQgPSBlbmNyeXB0KEpTT04uc3RyaW5naWZ5KHRoaXMuZGF0YSkpO1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFNUT1JBR0VfS0VZLCBlbmNyeXB0ZWQpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXREZWZhdWx0RGF0YSgpOiBDYWxlbmRhclByZXNldFR5cGUge1xuICAgIHJldHVybiB7XG4gICAgICB0aW1lQmxvY2tzOiBbXSxcbiAgICAgIGhvdXJseVJhdGU6IDEwMCxcbiAgICAgIGRlbGVnYXRpb25TZXJ2aWNlczogW10sXG4gICAgfTtcbiAgfVxuXG4gIGdldFRpbWVCbG9ja3MoKTogVGltZUJsb2NrVHlwZVtdIHtcbiAgICByZXR1cm4gdGhpcy5kYXRhLnRpbWVCbG9ja3M7XG4gIH1cblxuICBhZGRUaW1lQmxvY2soYmxvY2s6IFRpbWVCbG9ja1R5cGUpOiB2b2lkIHtcbiAgICB0aGlzLmRhdGEudGltZUJsb2Nrcy5wdXNoKGJsb2NrKTtcbiAgICB0aGlzLnNhdmUoKTtcbiAgfVxuXG4gIHVwZGF0ZVRpbWVCbG9jayhibG9jazogVGltZUJsb2NrVHlwZSk6IHZvaWQge1xuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5kYXRhLnRpbWVCbG9ja3MuZmluZEluZGV4KGIgPT4gYi5faWQgPT09IGJsb2NrLl9pZCk7XG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgdGhpcy5kYXRhLnRpbWVCbG9ja3NbaW5kZXhdID0gYmxvY2s7XG4gICAgICB0aGlzLnNhdmUoKTtcbiAgICB9XG4gIH1cblxuICBkZWxldGVUaW1lQmxvY2soaWQ6IHN0cmluZyk6IHZvaWQge1xuICAgIHRoaXMuZGF0YS50aW1lQmxvY2tzID0gdGhpcy5kYXRhLnRpbWVCbG9ja3MuZmlsdGVyKGIgPT4gYi5faWQgIT09IGlkKTtcbiAgICB0aGlzLnNhdmUoKTtcbiAgfVxuXG4gIGV4cG9ydERhdGEoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhLCBudWxsLCAyKTtcbiAgfVxuXG4gIGltcG9ydERhdGEoanNvbkRhdGE6IHN0cmluZyk6IHZvaWQge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBwYXJzZWQgPSBKU09OLnBhcnNlKGpzb25EYXRhKTtcbiAgICAgIC8vIFZhbGlkYXRlIGFnYWluc3Qgc2NoZW1hIGhlcmVcbiAgICAgIHRoaXMuZGF0YSA9IHBhcnNlZDtcbiAgICAgIHRoaXMuc2F2ZSgpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gaW1wb3J0IGRhdGE6JywgZXJyb3IpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGRhdGEgZm9ybWF0Jyk7XG4gICAgfVxuICB9XG59ICJdLCJuYW1lcyI6WyJlbmNyeXB0IiwiZGVjcnlwdCIsIlNUT1JBR0VfS0VZIiwiU3RvcmFnZVNlcnZpY2UiLCJkYXRhIiwibG9hZCIsImdldEluc3RhbmNlIiwiaW5zdGFuY2UiLCJnZXREZWZhdWx0RGF0YSIsImVuY3J5cHRlZCIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJkZWNyeXB0ZWQiLCJKU09OIiwicGFyc2UiLCJlcnJvciIsImNvbnNvbGUiLCJzYXZlIiwic3RyaW5naWZ5Iiwic2V0SXRlbSIsInRpbWVCbG9ja3MiLCJob3VybHlSYXRlIiwiZGVsZWdhdGlvblNlcnZpY2VzIiwiZ2V0VGltZUJsb2NrcyIsImFkZFRpbWVCbG9jayIsImJsb2NrIiwicHVzaCIsInVwZGF0ZVRpbWVCbG9jayIsImluZGV4IiwiZmluZEluZGV4IiwiYiIsIl9pZCIsImRlbGV0ZVRpbWVCbG9jayIsImlkIiwiZmlsdGVyIiwiZXhwb3J0RGF0YSIsImltcG9ydERhdGEiLCJqc29uRGF0YSIsInBhcnNlZCIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/storage.ts\n");

/***/ }),

/***/ "(rsc)/./src/services/chatbot.ts":
/*!*********************************!*\
  !*** ./src/services/chatbot.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeAgent: () => (/* binding */ initializeAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_community_chat_models_ollama__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/community/chat_models/ollama */ \"(rsc)/../../../node_modules/@langchain/community/chat_models/ollama.js\");\n/* harmony import */ var _coinbase_agentkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @coinbase/agentkit */ \"(rsc)/../../agentkit/dist/index.js\");\n/* harmony import */ var _coinbase_agentkit__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _coinbase_agentkit_langchain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @coinbase/agentkit-langchain */ \"(rsc)/../../framework-extensions/langchain/dist/index.js\");\n/* harmony import */ var _langchain_langgraph__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @langchain/langgraph */ \"(rsc)/../../../node_modules/@langchain/langgraph/index.js\");\n/* harmony import */ var _langchain_langgraph_prebuilt__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @langchain/langgraph/prebuilt */ \"(rsc)/../../../node_modules/@langchain/langgraph/prebuilt.js\");\n/* harmony import */ var _lib_storage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/storage */ \"(rsc)/./src/lib/storage.ts\");\n/* harmony import */ var _taxiAgent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./taxiAgent */ \"(rsc)/./src/services/taxiAgent.ts\");\n\n\n\n\n\n\n\nasync function initializeAgent(model = \"deepseek-r1:8b\", baseUrl = \"http://localhost:11434\") {\n    console.log(\"Chatbot: Starting agent initialization...\");\n    try {\n        console.log(\"Chatbot: Configuring Ollama LLM...\");\n        const ollamaLLM = new _langchain_community_chat_models_ollama__WEBPACK_IMPORTED_MODULE_0__.ChatOllama({\n            model: model,\n            baseUrl: baseUrl,\n            temperature: 0.7\n        });\n        console.log(\"Chatbot: Ollama LLM configured\");\n        // Add bindTools method\n        const llmWithTools = Object.assign(ollamaLLM, {\n            bindTools (tools) {\n                return {\n                    ...ollamaLLM,\n                    invoke: async (messages, options)=>{\n                        return ollamaLLM.invoke(messages, options);\n                    }\n                };\n            }\n        });\n        let tools = [];\n        let walletProvider = null;\n        // Initialize CDP features if env vars present\n        if (process.env.CDP_API_KEY_NAME && process.env.CDP_API_KEY_PRIVATE_KEY) {\n            console.log(\"Chatbot: CDP credentials found, initializing CDP features...\");\n            try {\n                const config = {\n                    apiKeyName: process.env.CDP_API_KEY_NAME,\n                    networkId: process.env.NETWORK_ID || \"base-sepolia\",\n                    // Log redacted version of private key\n                    privateKeyLength: process.env.CDP_API_KEY_PRIVATE_KEY?.length\n                };\n                console.log(\"Chatbot: CDP config:\", config);\n                console.log(\"Chatbot: Configuring CDP wallet...\");\n                walletProvider = await _coinbase_agentkit__WEBPACK_IMPORTED_MODULE_1__.CdpWalletProvider.configureWithWallet({\n                    apiKeyName: config.apiKeyName,\n                    apiKeyPrivateKey: process.env.CDP_API_KEY_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\"),\n                    networkId: config.networkId\n                });\n                console.log(\"Chatbot: CDP wallet configured successfully\");\n                console.log(\"Chatbot: Initializing AgentKit...\");\n                const agentkit = await _coinbase_agentkit__WEBPACK_IMPORTED_MODULE_1__.AgentKit.from({\n                    walletProvider,\n                    actionProviders: [\n                        (0,_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_1__.wethActionProvider)(),\n                        (0,_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_1__.pythActionProvider)(),\n                        (0,_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_1__.walletActionProvider)(),\n                        (0,_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_1__.erc20ActionProvider)(),\n                        (0,_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_1__.cdpApiActionProvider)(config),\n                        (0,_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_1__.cdpWalletActionProvider)(config)\n                    ]\n                });\n                console.log(\"Chatbot: AgentKit initialized\");\n                tools = await (0,_coinbase_agentkit_langchain__WEBPACK_IMPORTED_MODULE_2__.getLangChainTools)(agentkit);\n                console.log(\"Chatbot: Tools configured:\", tools.map((t)=>t.name));\n            } catch (error) {\n                console.error(\"Chatbot: CDP initialization failed:\", {\n                    name: error.name,\n                    message: error.message,\n                    stack: error.stack,\n                    details: error.details || \"No additional details\"\n                });\n            }\n        } else {\n            console.log(\"Chatbot: No CDP credentials found, skipping CDP features\");\n        }\n        // Add scheduling tools\n        const schedulingTools = [\n            {\n                name: \"check_calendar\",\n                description: \"Check available time slots in calendar\",\n                func: async ()=>{\n                    const storage = _lib_storage__WEBPACK_IMPORTED_MODULE_5__.StorageService.getInstance();\n                    return storage.getTimeBlocks();\n                }\n            },\n            {\n                name: \"schedule_task\",\n                description: \"Schedule a new task in calendar. Use this when user wants to add events or meetings.\",\n                func: async ({ title, startTime, endTime, priority, delegatable, maxBudget })=>{\n                    console.log(\"Scheduling task:\", {\n                        title,\n                        startTime,\n                        endTime,\n                        priority\n                    });\n                    const storage = _lib_storage__WEBPACK_IMPORTED_MODULE_5__.StorageService.getInstance();\n                    const block = {\n                        _id: crypto.randomUUID(),\n                        title: title || \"Untitled Event\",\n                        startTime: new Date(startTime).toISOString(),\n                        endTime: endTime ? new Date(endTime).toISOString() : new Date(new Date(startTime).getTime() + 60 * 60 * 1000).toISOString(),\n                        priority: priority || \"important\",\n                        delegatable: delegatable || false,\n                        maxBudget: maxBudget,\n                        status: \"scheduled\",\n                        created_at: new Date().toISOString(),\n                        updated_at: new Date().toISOString()\n                    };\n                    storage.addTimeBlock(block);\n                    return {\n                        success: true,\n                        message: `Successfully scheduled \"${block.title}\" for ${new Date(block.startTime).toLocaleString()}`,\n                        block\n                    };\n                }\n            }\n        ];\n        tools = [\n            ...tools,\n            ...schedulingTools\n        ];\n        // Initialize taxi service\n        console.log(\"Chatbot: Initializing taxi service...\");\n        const taxiAgent = _taxiAgent__WEBPACK_IMPORTED_MODULE_6__.TaxiAgent.getInstance();\n        const { agent: taxiAgentInstance } = await taxiAgent.initializeAgent(model);\n        // Add taxi service tools\n        const taxiTools = [\n            {\n                name: \"request_taxi\",\n                description: \"Request a taxi service with crypto payment\",\n                func: async ({ pickup, destination, time })=>{\n                    // Calculate fare first\n                    const fareResult = await taxiAgentInstance.invoke({\n                        messages: [\n                            {\n                                role: \"user\",\n                                content: `Calculate fare from ${pickup} to ${destination}`\n                            }\n                        ]\n                    });\n                    // Book the ride\n                    const bookingResult = await taxiAgentInstance.invoke({\n                        messages: [\n                            {\n                                role: \"user\",\n                                content: `Book ride from ${pickup} to ${destination} at ${time} with payment confirmation`\n                            }\n                        ]\n                    });\n                    return {\n                        fare: fareResult,\n                        booking: bookingResult\n                    };\n                }\n            }\n        ];\n        tools = [\n            ...tools,\n            ...taxiTools\n        ];\n        // Update message modifier to include taxi service\n        const messageModifier = walletProvider ? `You are a helpful agent that can interact onchain using CDP and help with taxi bookings.\n         For taxi requests, you can calculate fares and book rides with crypto payments.\n         Always verify payment before confirming bookings.` : `You are a helpful AI assistant that can help with taxi bookings.\n         You can calculate fares and arrange rides with crypto payments.`;\n        const memory = new _langchain_langgraph__WEBPACK_IMPORTED_MODULE_3__.MemorySaver();\n        const agentConfig = {\n            configurable: {\n                thread_id: \"Ollama Chatbot\"\n            }\n        };\n        console.log(\"Chatbot: Creating React Agent...\");\n        const agent = (0,_langchain_langgraph_prebuilt__WEBPACK_IMPORTED_MODULE_4__.createReactAgent)({\n            llm: llmWithTools,\n            tools,\n            checkpointSaver: memory,\n            messageModifier: messageModifier\n        });\n        console.log(\"Chatbot: React Agent created successfully\");\n        return {\n            agent,\n            config: agentConfig\n        };\n    } catch (error) {\n        console.error(\"Chatbot: Agent initialization failed:\", {\n            name: error.name,\n            message: error.message,\n            stack: error.stack,\n            details: error.details || \"No additional details\"\n        });\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/services/chatbot.ts\n");

/***/ }),

/***/ "(rsc)/./src/services/taxiAgent.ts":
/*!***********************************!*\
  !*** ./src/services/taxiAgent.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TaxiAgent: () => (/* binding */ TaxiAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_community_chat_models_ollama__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/community/chat_models/ollama */ \"(rsc)/../../../node_modules/@langchain/community/chat_models/ollama.js\");\n/* harmony import */ var _langchain_langgraph__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/langgraph */ \"(rsc)/../../../node_modules/@langchain/langgraph/index.js\");\n/* harmony import */ var _langchain_langgraph_prebuilt__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/langgraph/prebuilt */ \"(rsc)/../../../node_modules/@langchain/langgraph/prebuilt.js\");\n/* harmony import */ var _lib_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/crypto */ \"(rsc)/./src/lib/crypto.ts\");\n\n\n\n\nclass TaxiAgent {\n    constructor(){\n        this.paymentAddress = \"0x123...\" // Default payment address\n        ;\n        this.basePrice = 0.001 // ETH\n        ;\n        this.pricePerKm = 0.0001 // ETH\n        ;\n    }\n    static getInstance() {\n        if (!TaxiAgent.instance) {\n            TaxiAgent.instance = new TaxiAgent();\n        }\n        return TaxiAgent.instance;\n    }\n    async initializeAgent(model = \"deepseek-r1:8b\") {\n        const tools = [\n            {\n                name: \"calculate_fare\",\n                description: \"Calculate taxi fare for the journey\",\n                func: async ({ pickup, destination })=>{\n                    // Mock distance calculation\n                    const distance = Math.random() * 20 + 5; // 5-25km\n                    const fare = this.basePrice + this.pricePerKm * distance;\n                    return {\n                        distance: Math.round(distance * 100) / 100,\n                        fare: Math.round(fare * 1000000) / 1000000,\n                        currency: \"ETH\"\n                    };\n                }\n            },\n            {\n                name: \"verify_payment\",\n                description: \"Verify crypto payment for the ride\",\n                func: async ({ amount, address })=>{\n                    // Mock payment verification\n                    const verified = Math.random() > 0.1; // 90% success rate\n                    if (verified) {\n                        return {\n                            status: \"confirmed\",\n                            txHash: `0x${Math.random().toString(16).substr(2, 40)}`,\n                            timestamp: new Date().toISOString()\n                        };\n                    }\n                    throw new Error(\"Payment verification failed\");\n                }\n            },\n            {\n                name: \"book_ride\",\n                description: \"Book a taxi ride\",\n                func: async (request)=>{\n                    const payment = await this.verifyPayment(request.paymentAmount, request.cryptoAddress);\n                    if (payment.status === \"confirmed\") {\n                        // Store encrypted booking details\n                        const encryptedBooking = (0,_lib_crypto__WEBPACK_IMPORTED_MODULE_3__.encrypt)(JSON.stringify({\n                            ...request,\n                            paymentTxHash: payment.txHash,\n                            bookingTime: new Date().toISOString()\n                        }));\n                        return {\n                            status: \"booked\",\n                            bookingId: `TAXI-${Math.random().toString(16).substr(2, 8).toUpperCase()}`,\n                            estimatedArrival: new Date(Date.now() + 10 * 60000).toISOString(),\n                            paymentConfirmation: payment\n                        };\n                    }\n                    throw new Error(\"Booking failed - payment required\");\n                }\n            }\n        ];\n        const ollamaLLM = new _langchain_community_chat_models_ollama__WEBPACK_IMPORTED_MODULE_0__.ChatOllama({\n            model\n        });\n        // Add bindTools method to LLM\n        const llmWithTools = Object.assign(ollamaLLM, {\n            bindTools (tools) {\n                return {\n                    ...ollamaLLM,\n                    invoke: async (messages, options)=>{\n                        return ollamaLLM.invoke(messages, options);\n                    }\n                };\n            }\n        });\n        const memory = new _langchain_langgraph__WEBPACK_IMPORTED_MODULE_1__.MemorySaver();\n        const agent = (0,_langchain_langgraph_prebuilt__WEBPACK_IMPORTED_MODULE_2__.createReactAgent)({\n            llm: llmWithTools,\n            tools,\n            checkpointSaver: memory,\n            messageModifier: `You are a professional taxi service agent. You help customers book rides and handle crypto payments.\n        Always be polite and professional. Ask for pickup location, destination, and preferred time.\n        Explain the fare calculation and payment process clearly.\n        The fare must be paid in ETH to address ${this.paymentAddress}.\n        After payment confirmation, provide booking details and estimated arrival time.\n        Never break character - you are a real taxi service.`\n        });\n        return {\n            agent,\n            config: {\n                configurable: {\n                    thread_id: \"Taxi Service\"\n                }\n            }\n        };\n    }\n    async verifyPayment(amount, address) {\n        // Mock payment verification\n        await new Promise((resolve)=>setTimeout(resolve, 2000)); // Simulate blockchain check\n        return {\n            status: \"confirmed\",\n            txHash: `0x${Math.random().toString(16).substr(2, 40)}`,\n            timestamp: new Date().toISOString()\n        };\n    }\n    setPaymentAddress(address) {\n        if (!/^0x[a-fA-F0-9]{40}$/.test(address)) {\n            throw new Error(\"Invalid Ethereum address\");\n        }\n        this.paymentAddress = address;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/services/taxiAgent.ts\n");

/***/ }),

/***/ "(rsc)/../../framework-extensions/langchain/dist/index.js":
/*!**********************************************************!*\
  !*** ../../framework-extensions/langchain/dist/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n/**\n * Main exports for the CDP Langchain package\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getLangChainTools = getLangChainTools;\nconst tools_1 = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/../../../node_modules/@langchain/core/tools.cjs\");\n/**\n * Get Langchain tools from an AgentKit instance\n *\n * @param agentKit - The AgentKit instance\n * @returns An array of Langchain tools\n */ async function getLangChainTools(agentKit) {\n    const actions = agentKit.getActions();\n    return actions.map((action)=>(0, tools_1.tool)(async (arg)=>{\n            const result = await action.invoke(arg);\n            return result;\n        }, {\n            name: action.name,\n            description: action.description,\n            schema: action.schema\n        }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vZnJhbWV3b3JrLWV4dGVuc2lvbnMvbGFuZ2NoYWluL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjs7Q0FFQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQseUJBQXlCLEdBQUdFO0FBQzVCLE1BQU1DLFVBQVVDLG1CQUFPQSxDQUFDLG9GQUF1QjtBQUMvQzs7Ozs7Q0FLQyxHQUNELGVBQWVGLGtCQUFrQkcsUUFBUTtJQUNyQyxNQUFNQyxVQUFVRCxTQUFTRSxVQUFVO0lBQ25DLE9BQU9ELFFBQVFFLEdBQUcsQ0FBQ0MsQ0FBQUEsU0FBVSxDQUFDLEdBQUdOLFFBQVFPLElBQUksRUFBRSxPQUFPQztZQUNsRCxNQUFNQyxTQUFTLE1BQU1ILE9BQU9JLE1BQU0sQ0FBQ0Y7WUFDbkMsT0FBT0M7UUFDWCxHQUFHO1lBQ0NFLE1BQU1MLE9BQU9LLElBQUk7WUFDakJDLGFBQWFOLE9BQU9NLFdBQVc7WUFDL0JDLFFBQVFQLE9BQU9PLE1BQU07UUFDekI7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL0Bjb2luYmFzZS9jZHAtbGFuZ2NoYWluLWNoYXRib3QtZXhhbXBsZS8uLi8uLi9mcmFtZXdvcmstZXh0ZW5zaW9ucy9sYW5nY2hhaW4vZGlzdC9pbmRleC5qcz9kY2IxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBNYWluIGV4cG9ydHMgZm9yIHRoZSBDRFAgTGFuZ2NoYWluIHBhY2thZ2VcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRMYW5nQ2hhaW5Ub29scyA9IGdldExhbmdDaGFpblRvb2xzO1xuY29uc3QgdG9vbHNfMSA9IHJlcXVpcmUoXCJAbGFuZ2NoYWluL2NvcmUvdG9vbHNcIik7XG4vKipcbiAqIEdldCBMYW5nY2hhaW4gdG9vbHMgZnJvbSBhbiBBZ2VudEtpdCBpbnN0YW5jZVxuICpcbiAqIEBwYXJhbSBhZ2VudEtpdCAtIFRoZSBBZ2VudEtpdCBpbnN0YW5jZVxuICogQHJldHVybnMgQW4gYXJyYXkgb2YgTGFuZ2NoYWluIHRvb2xzXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGdldExhbmdDaGFpblRvb2xzKGFnZW50S2l0KSB7XG4gICAgY29uc3QgYWN0aW9ucyA9IGFnZW50S2l0LmdldEFjdGlvbnMoKTtcbiAgICByZXR1cm4gYWN0aW9ucy5tYXAoYWN0aW9uID0+ICgwLCB0b29sc18xLnRvb2wpKGFzeW5jIChhcmcpID0+IHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgYWN0aW9uLmludm9rZShhcmcpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogYWN0aW9uLm5hbWUsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBhY3Rpb24uZGVzY3JpcHRpb24sXG4gICAgICAgIHNjaGVtYTogYWN0aW9uLnNjaGVtYSxcbiAgICB9KSk7XG59XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXRMYW5nQ2hhaW5Ub29scyIsInRvb2xzXzEiLCJyZXF1aXJlIiwiYWdlbnRLaXQiLCJhY3Rpb25zIiwiZ2V0QWN0aW9ucyIsIm1hcCIsImFjdGlvbiIsInRvb2wiLCJhcmciLCJyZXN1bHQiLCJpbnZva2UiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJzY2hlbWEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../framework-extensions/langchain/dist/index.js\n");

/***/ }),

/***/ "(rsc)/../../agentkit/package.json":
/*!***********************************!*\
  !*** ../../agentkit/package.json ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"name":"@coinbase/agentkit","description":"Coinbase AgentKit core primitives","repository":"https://github.com/coinbase/agentkit","version":"0.1.2","author":"Coinbase Inc.","license":"Apache-2.0","main":"dist/index.js","types":"dist/index.d.ts","files":["dist"],"scripts":{"build":"tsc","lint":"eslint -c .eslintrc.json \\"src/**/*.ts\\"","lint:fix":"eslint -c .eslintrc.json \\"src/**/*.ts\\" --fix","format":"prettier -c .prettierrc --write \\"**/*.{ts,js,cjs,json,md}\\"","format:check":"prettier -c .prettierrc --check \\"**/*.{ts,js,cjs,json,md}\\"","check":"tsc --noEmit","test":"npx jest --no-cache --testMatch=\'**/*.test.ts\'","test:dry-run":"npm install && npm ci && npm publish --dry-run","test:e2e":"npx jest --no-cache --testMatch=**/e2e.ts --coverageThreshold \'{}\'","test:types":"tsd --files src/tests/types.test-d.ts","clean":"rm -rf dist/*","prepack":"tsc","docs":"typedoc --entryPoints ./src --entryPointStrategy expand --exclude ./src/tests/**/*.ts","docs:serve":"http-server ./docs","dev":"tsc --watch"},"keywords":["coinbase","sdk","crypto","cdp","agentkit","ai","agent","nodejs","typescript"],"dependencies":{"@coinbase/coinbase-sdk":"^0.17.0","md5":"^2.3.0","reflect-metadata":"^0.2.2","twitter-api-v2":"^1.18.2","viem":"^2.22.16","zod":"^3.23.8"},"devDependencies":{"@types/jest":"^29.5.14","@types/secp256k1":"^4.0.6","http-server":"^14.1.1","jest":"^29.7.0","mock-fs":"^5.2.0","ts-jest":"^29.2.5","tsd":"^0.31.2","typescript":"^5.7.2"},"exports":{".":{"types":"./dist/index.d.ts","default":"./dist/index.js"}}}');

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/uuid","vendor-chunks/viem","vendor-chunks/@langchain","vendor-chunks/lodash","vendor-chunks/ethers","vendor-chunks/zod-to-json-schema","vendor-chunks/node-jose","vendor-chunks/twitter-api-v2","vendor-chunks/semver","vendor-chunks/@coinbase","vendor-chunks/langsmith","vendor-chunks/node-forge","vendor-chunks/abitype","vendor-chunks/@noble","vendor-chunks/pako","vendor-chunks/elliptic","vendor-chunks/ws","vendor-chunks/hash.js","vendor-chunks/zod","vendor-chunks/ox","vendor-chunks/asynckit","vendor-chunks/@cfworker","vendor-chunks/aes-js","vendor-chunks/secp256k1","vendor-chunks/debug","vendor-chunks/@scure","vendor-chunks/js-tiktoken","vendor-chunks/retry","vendor-chunks/p-queue","vendor-chunks/base64url","vendor-chunks/isows","vendor-chunks/node-gyp-build","vendor-chunks/mime-db","vendor-chunks/md5","vendor-chunks/inherits","vendor-chunks/form-data","vendor-chunks/follow-redirects","vendor-chunks/mustache","vendor-chunks/reflect-metadata","vendor-chunks/long","vendor-chunks/axios","vendor-chunks/axios-retry","vendor-chunks/@adraffy","vendor-chunks/supports-color","vendor-chunks/proxy-from-env","vendor-chunks/p-timeout","vendor-chunks/p-retry","vendor-chunks/p-finally","vendor-chunks/ms","vendor-chunks/minimalistic-crypto-utils","vendor-chunks/minimalistic-assert","vendor-chunks/mime-types","vendor-chunks/is-retry-allowed","vendor-chunks/hmac-drbg","vendor-chunks/has-flag","vendor-chunks/eventemitter3","vendor-chunks/es6-promise","vendor-chunks/delayed-stream","vendor-chunks/decimal.js","vendor-chunks/decamelize","vendor-chunks/crypt","vendor-chunks/combined-stream","vendor-chunks/charenc","vendor-chunks/brorand","vendor-chunks/bn.js","vendor-chunks/base64-js"], () => (__webpack_exec__("(rsc)/../../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FHower%2Ftypescript%2Fexamples%2Flangchain-cdp-chatbot%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FHower%2Ftypescript%2Fexamples%2Flangchain-cdp-chatbot&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();